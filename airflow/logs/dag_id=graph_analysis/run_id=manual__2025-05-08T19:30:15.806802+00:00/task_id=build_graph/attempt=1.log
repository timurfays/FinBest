[2025-05-08T19:30:24.080+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: graph_analysis.build_graph manual__2025-05-08T19:30:15.806802+00:00 [queued]>
[2025-05-08T19:30:24.091+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: graph_analysis.build_graph manual__2025-05-08T19:30:15.806802+00:00 [queued]>
[2025-05-08T19:30:24.091+0000] {taskinstance.py:1308} INFO - Starting attempt 1 of 1
[2025-05-08T19:30:24.101+0000] {taskinstance.py:1327} INFO - Executing <Task(SparkSubmitOperator): build_graph> on 2025-05-08 19:30:15.806802+00:00
[2025-05-08T19:30:24.107+0000] {standard_task_runner.py:57} INFO - Started process 12641 to run task
[2025-05-08T19:30:24.109+0000] {standard_task_runner.py:84} INFO - Running: ['airflow', 'tasks', 'run', 'graph_analysis', 'build_graph', 'manual__2025-05-08T19:30:15.806802+00:00', '--job-id', '353', '--raw', '--subdir', 'DAGS_FOLDER/graph_analysis.py', '--cfg-path', '/tmp/tmp7lwdelv8']
[2025-05-08T19:30:24.109+0000] {standard_task_runner.py:85} INFO - Job 353: Subtask build_graph
[2025-05-08T19:30:24.121+0000] {logging_mixin.py:150} WARNING - /home/airflow/.local/lib/python3.8/site-packages/airflow/settings.py:195 DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
[2025-05-08T19:30:24.158+0000] {task_command.py:410} INFO - Running <TaskInstance: graph_analysis.build_graph manual__2025-05-08T19:30:15.806802+00:00 [running]> on host f2a432e4376a
[2025-05-08T19:30:24.279+0000] {taskinstance.py:1545} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='finbest' AIRFLOW_CTX_DAG_ID='graph_analysis' AIRFLOW_CTX_TASK_ID='build_graph' AIRFLOW_CTX_EXECUTION_DATE='2025-05-08T19:30:15.806802+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-05-08T19:30:15.806802+00:00'
[2025-05-08T19:30:24.293+0000] {base.py:73} INFO - Using connection ID 'spark_default' for task execution.
[2025-05-08T19:30:24.295+0000] {spark_submit.py:401} INFO - Spark-Submit cmd: spark-submit --master spark://spark-master:7077 --conf spark.driver.maxResultSize=512m --conf spark.sql.shuffle.partitions=10 --packages org.postgresql:postgresql:42.6.0,graphframes:graphframes:0.8.2-spark3.2-s_2.12 --executor-cores 1 --executor-memory 1g --driver-memory 1g --name arrow-spark --verbose /opt/airflow/spark/build_graph.py --jdbc jdbc:postgresql://postgres:5432/finbest --user finbest --password ******
[2025-05-08T19:30:24.314+0000] {spark_submit.py:571} INFO - /opt/spark/bin/load-spark-env.sh: line 68: ps: command not found
[2025-05-08T19:30:25.286+0000] {spark_submit.py:571} INFO - Using properties file: null
[2025-05-08T19:30:25.368+0000] {spark_submit.py:571} INFO - WARNING: An illegal reflective access operation has occurred
[2025-05-08T19:30:25.368+0000] {spark_submit.py:571} INFO - WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/opt/spark/jars/spark-unsafe_2.12-3.2.4.jar) to constructor java.nio.DirectByteBuffer(long,int)
[2025-05-08T19:30:25.369+0000] {spark_submit.py:571} INFO - WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform
[2025-05-08T19:30:25.369+0000] {spark_submit.py:571} INFO - WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[2025-05-08T19:30:25.369+0000] {spark_submit.py:571} INFO - WARNING: All illegal access operations will be denied in a future release
[2025-05-08T19:30:25.410+0000] {spark_submit.py:571} INFO - Parsed arguments:
[2025-05-08T19:30:25.410+0000] {spark_submit.py:571} INFO - master                  spark://spark-master:7077
[2025-05-08T19:30:25.410+0000] {spark_submit.py:571} INFO - deployMode              null
[2025-05-08T19:30:25.410+0000] {spark_submit.py:571} INFO - executorMemory          1g
[2025-05-08T19:30:25.410+0000] {spark_submit.py:571} INFO - executorCores           1
[2025-05-08T19:30:25.410+0000] {spark_submit.py:571} INFO - totalExecutorCores      null
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - propertiesFile          null
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - driverMemory            1g
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - driverCores             null
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - driverExtraClassPath    null
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - driverExtraLibraryPath  null
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - driverExtraJavaOptions  null
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - supervise               false
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - queue                   null
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - numExecutors            null
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - files                   null
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - pyFiles                 null
[2025-05-08T19:30:25.411+0000] {spark_submit.py:571} INFO - archives                null
[2025-05-08T19:30:25.412+0000] {spark_submit.py:571} INFO - mainClass               null
[2025-05-08T19:30:25.412+0000] {spark_submit.py:571} INFO - primaryResource         file:/opt/airflow/spark/build_graph.py
[2025-05-08T19:30:25.412+0000] {spark_submit.py:571} INFO - name                    arrow-spark
[2025-05-08T19:30:25.412+0000] {spark_submit.py:571} INFO - childArgs               [--jdbc jdbc:postgresql://postgres:5432/finbest --user finbest --password ***]
[2025-05-08T19:30:25.412+0000] {spark_submit.py:571} INFO - jars                    null
[2025-05-08T19:30:25.412+0000] {spark_submit.py:571} INFO - packages                org.postgresql:postgresql:42.6.0,graphframes:graphframes:0.8.2-spark3.2-s_2.12
[2025-05-08T19:30:25.412+0000] {spark_submit.py:571} INFO - packagesExclusions      null
[2025-05-08T19:30:25.412+0000] {spark_submit.py:571} INFO - repositories            null
[2025-05-08T19:30:25.412+0000] {spark_submit.py:571} INFO - verbose                 true
[2025-05-08T19:30:25.412+0000] {spark_submit.py:571} INFO - 
[2025-05-08T19:30:25.413+0000] {spark_submit.py:571} INFO - Spark properties used, including those specified through
[2025-05-08T19:30:25.413+0000] {spark_submit.py:571} INFO - --conf and those from the properties file null:
[2025-05-08T19:30:25.413+0000] {spark_submit.py:571} INFO - (spark.driver.memory,1g)
[2025-05-08T19:30:25.413+0000] {spark_submit.py:571} INFO - (spark.driver.maxResultSize,512m)
[2025-05-08T19:30:25.413+0000] {spark_submit.py:571} INFO - (spark.sql.shuffle.partitions,10)
[2025-05-08T19:30:25.413+0000] {spark_submit.py:571} INFO - 
[2025-05-08T19:30:25.413+0000] {spark_submit.py:571} INFO - 
[2025-05-08T19:30:25.519+0000] {spark_submit.py:571} INFO - :: loading settings :: url = jar:file:/opt/spark/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml
[2025-05-08T19:30:25.594+0000] {spark_submit.py:571} INFO - Ivy Default Cache set to: /home/airflow/.ivy2/cache
[2025-05-08T19:30:25.594+0000] {spark_submit.py:571} INFO - The jars for the packages stored in: /home/airflow/.ivy2/jars
[2025-05-08T19:30:25.597+0000] {spark_submit.py:571} INFO - org.postgresql#postgresql added as a dependency
[2025-05-08T19:30:25.597+0000] {spark_submit.py:571} INFO - graphframes#graphframes added as a dependency
[2025-05-08T19:30:25.598+0000] {spark_submit.py:571} INFO - :: resolving dependencies :: org.apache.spark#spark-submit-parent-551e1130-0104-48ad-9927-80aee247b074;1.0
[2025-05-08T19:30:25.598+0000] {spark_submit.py:571} INFO - confs: [default]
[2025-05-08T19:30:25.702+0000] {spark_submit.py:571} INFO - found org.postgresql#postgresql;42.6.0 in central
[2025-05-08T19:30:25.728+0000] {spark_submit.py:571} INFO - found org.checkerframework#checker-qual;3.31.0 in central
[2025-05-08T19:30:25.750+0000] {spark_submit.py:571} INFO - found graphframes#graphframes;0.8.2-spark3.2-s_2.12 in spark-packages
[2025-05-08T19:30:25.776+0000] {spark_submit.py:571} INFO - found org.slf4j#slf4j-api;1.7.16 in central
[2025-05-08T19:30:25.800+0000] {spark_submit.py:571} INFO - :: resolution report :: resolve 193ms :: artifacts dl 9ms
[2025-05-08T19:30:25.800+0000] {spark_submit.py:571} INFO - :: modules in use:
[2025-05-08T19:30:25.801+0000] {spark_submit.py:571} INFO - graphframes#graphframes;0.8.2-spark3.2-s_2.12 from spark-packages in [default]
[2025-05-08T19:30:25.801+0000] {spark_submit.py:571} INFO - org.checkerframework#checker-qual;3.31.0 from central in [default]
[2025-05-08T19:30:25.801+0000] {spark_submit.py:571} INFO - org.postgresql#postgresql;42.6.0 from central in [default]
[2025-05-08T19:30:25.801+0000] {spark_submit.py:571} INFO - org.slf4j#slf4j-api;1.7.16 from central in [default]
[2025-05-08T19:30:25.801+0000] {spark_submit.py:571} INFO - ---------------------------------------------------------------------
[2025-05-08T19:30:25.801+0000] {spark_submit.py:571} INFO - |                  |            modules            ||   artifacts   |
[2025-05-08T19:30:25.801+0000] {spark_submit.py:571} INFO - |       conf       | number| search|dwnlded|evicted|| number|dwnlded|
[2025-05-08T19:30:25.801+0000] {spark_submit.py:571} INFO - ---------------------------------------------------------------------
[2025-05-08T19:30:25.801+0000] {spark_submit.py:571} INFO - |      default     |   4   |   0   |   0   |   0   ||   4   |   0   |
[2025-05-08T19:30:25.801+0000] {spark_submit.py:571} INFO - ---------------------------------------------------------------------
[2025-05-08T19:30:25.808+0000] {spark_submit.py:571} INFO - :: retrieving :: org.apache.spark#spark-submit-parent-551e1130-0104-48ad-9927-80aee247b074
[2025-05-08T19:30:25.808+0000] {spark_submit.py:571} INFO - confs: [default]
[2025-05-08T19:30:25.813+0000] {spark_submit.py:571} INFO - 0 artifacts copied, 4 already retrieved (0kB/5ms)
[2025-05-08T19:30:26.033+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:26 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2025-05-08T19:30:26.202+0000] {spark_submit.py:571} INFO - Main class:
[2025-05-08T19:30:26.203+0000] {spark_submit.py:571} INFO - org.apache.spark.deploy.PythonRunner
[2025-05-08T19:30:26.203+0000] {spark_submit.py:571} INFO - Arguments:
[2025-05-08T19:30:26.203+0000] {spark_submit.py:571} INFO - file:/opt/airflow/spark/build_graph.py
[2025-05-08T19:30:26.203+0000] {spark_submit.py:571} INFO - file:///home/airflow/.ivy2/jars/org.postgresql_postgresql-42.6.0.jar,file:///home/airflow/.ivy2/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar,file:///home/airflow/.ivy2/jars/org.checkerframework_checker-qual-3.31.0.jar,file:///home/airflow/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar
[2025-05-08T19:30:26.203+0000] {spark_submit.py:571} INFO - --jdbc
[2025-05-08T19:30:26.203+0000] {spark_submit.py:571} INFO - jdbc:postgresql://postgres:5432/finbest
[2025-05-08T19:30:26.203+0000] {spark_submit.py:571} INFO - --user
[2025-05-08T19:30:26.203+0000] {spark_submit.py:571} INFO - finbest
[2025-05-08T19:30:26.203+0000] {spark_submit.py:571} INFO - --password
[2025-05-08T19:30:26.203+0000] {spark_submit.py:571} INFO - ***
[2025-05-08T19:30:26.205+0000] {spark_submit.py:571} INFO - Spark config:
[2025-05-08T19:30:26.205+0000] {spark_submit.py:571} INFO - (spark.driver.maxResultSize,512m)
[2025-05-08T19:30:26.206+0000] {spark_submit.py:571} INFO - (spark.jars,file:///home/airflow/.ivy2/jars/org.postgresql_postgresql-42.6.0.jar,file:///home/airflow/.ivy2/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar,file:///home/airflow/.ivy2/jars/org.checkerframework_checker-qual-3.31.0.jar,file:///home/airflow/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar)
[2025-05-08T19:30:26.206+0000] {spark_submit.py:571} INFO - (spark.app.name,arrow-spark)
[2025-05-08T19:30:26.206+0000] {spark_submit.py:571} INFO - (spark.driver.memory,1g)
[2025-05-08T19:30:26.206+0000] {spark_submit.py:571} INFO - (spark.submit.pyFiles,/home/airflow/.ivy2/jars/org.postgresql_postgresql-42.6.0.jar,/home/airflow/.ivy2/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar,/home/airflow/.ivy2/jars/org.checkerframework_checker-qual-3.31.0.jar,/home/airflow/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar)
[2025-05-08T19:30:26.206+0000] {spark_submit.py:571} INFO - (spark.files,file:///home/airflow/.ivy2/jars/org.postgresql_postgresql-42.6.0.jar,file:///home/airflow/.ivy2/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar,file:///home/airflow/.ivy2/jars/org.checkerframework_checker-qual-3.31.0.jar,file:///home/airflow/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar)
[2025-05-08T19:30:26.206+0000] {spark_submit.py:571} INFO - (spark.submit.deployMode,client)
[2025-05-08T19:30:26.206+0000] {spark_submit.py:571} INFO - (spark.master,spark://spark-master:7077)
[2025-05-08T19:30:26.206+0000] {spark_submit.py:571} INFO - (spark.executor.memory,1g)
[2025-05-08T19:30:26.207+0000] {spark_submit.py:571} INFO - (spark.executor.cores,1)
[2025-05-08T19:30:26.207+0000] {spark_submit.py:571} INFO - (spark.repl.local.jars,file:///home/airflow/.ivy2/jars/org.postgresql_postgresql-42.6.0.jar,file:///home/airflow/.ivy2/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar,file:///home/airflow/.ivy2/jars/org.checkerframework_checker-qual-3.31.0.jar,file:///home/airflow/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar)
[2025-05-08T19:30:26.207+0000] {spark_submit.py:571} INFO - (spark.sql.shuffle.partitions,10)
[2025-05-08T19:30:26.207+0000] {spark_submit.py:571} INFO - Classpath elements:
[2025-05-08T19:30:26.207+0000] {spark_submit.py:571} INFO - file:///home/airflow/.ivy2/jars/org.postgresql_postgresql-42.6.0.jar
[2025-05-08T19:30:26.207+0000] {spark_submit.py:571} INFO - file:///home/airflow/.ivy2/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar
[2025-05-08T19:30:26.207+0000] {spark_submit.py:571} INFO - file:///home/airflow/.ivy2/jars/org.checkerframework_checker-qual-3.31.0.jar
[2025-05-08T19:30:26.207+0000] {spark_submit.py:571} INFO - file:///home/airflow/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar
[2025-05-08T19:30:26.207+0000] {spark_submit.py:571} INFO - 
[2025-05-08T19:30:26.207+0000] {spark_submit.py:571} INFO - 
[2025-05-08T19:30:27.598+0000] {spark_submit.py:571} INFO - Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
[2025-05-08T19:30:27.605+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO SparkContext: Running Spark version 3.2.4
[2025-05-08T19:30:27.622+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO ResourceUtils: ==============================================================
[2025-05-08T19:30:27.623+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO ResourceUtils: No custom resources configured for spark.driver.
[2025-05-08T19:30:27.624+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO ResourceUtils: ==============================================================
[2025-05-08T19:30:27.624+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO SparkContext: Submitted application: FinBestGraphAnalysis
[2025-05-08T19:30:27.645+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2025-05-08T19:30:27.655+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO ResourceProfile: Limiting resource is cpus at 1 tasks per executor
[2025-05-08T19:30:27.656+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2025-05-08T19:30:27.710+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO SecurityManager: Changing view acls to: airflow
[2025-05-08T19:30:27.710+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO SecurityManager: Changing modify acls to: airflow
[2025-05-08T19:30:27.711+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO SecurityManager: Changing view acls groups to:
[2025-05-08T19:30:27.711+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO SecurityManager: Changing modify acls groups to:
[2025-05-08T19:30:27.711+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(airflow); groups with view permissions: Set(); users  with modify permissions: Set(airflow); groups with modify permissions: Set()
[2025-05-08T19:30:27.952+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO Utils: Successfully started service 'sparkDriver' on port 42911.
[2025-05-08T19:30:27.976+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:27 INFO SparkEnv: Registering MapOutputTracker
[2025-05-08T19:30:28.003+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkEnv: Registering BlockManagerMaster
[2025-05-08T19:30:28.019+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2025-05-08T19:30:28.019+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2025-05-08T19:30:28.024+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2025-05-08T19:30:28.047+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-fd38c2d6-e2b5-4a33-a46a-d51f4c70771b
[2025-05-08T19:30:28.065+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB
[2025-05-08T19:30:28.079+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkEnv: Registering OutputCommitCoordinator
[2025-05-08T19:30:28.252+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2025-05-08T19:30:28.300+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://f2a432e4376a:4040
[2025-05-08T19:30:28.311+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkContext: Added JAR file:///home/airflow/.ivy2/jars/org.postgresql_postgresql-42.6.0.jar at spark://f2a432e4376a:42911/jars/org.postgresql_postgresql-42.6.0.jar with timestamp 1746732627597
[2025-05-08T19:30:28.311+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkContext: Added JAR file:///home/airflow/.ivy2/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar at spark://f2a432e4376a:42911/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar with timestamp 1746732627597
[2025-05-08T19:30:28.311+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkContext: Added JAR file:///home/airflow/.ivy2/jars/org.checkerframework_checker-qual-3.31.0.jar at spark://f2a432e4376a:42911/jars/org.checkerframework_checker-qual-3.31.0.jar with timestamp 1746732627597
[2025-05-08T19:30:28.311+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkContext: Added JAR file:///home/airflow/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar at spark://f2a432e4376a:42911/jars/org.slf4j_slf4j-api-1.7.16.jar with timestamp 1746732627597
[2025-05-08T19:30:28.313+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkContext: Added file file:///home/airflow/.ivy2/jars/org.postgresql_postgresql-42.6.0.jar at spark://f2a432e4376a:42911/files/org.postgresql_postgresql-42.6.0.jar with timestamp 1746732627597
[2025-05-08T19:30:28.314+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO Utils: Copying /home/airflow/.ivy2/jars/org.postgresql_postgresql-42.6.0.jar to /tmp/spark-fbccb0be-19f5-4b7c-8a86-0995b480387a/userFiles-06e8b242-567c-4a98-9935-57bfeefe508c/org.postgresql_postgresql-42.6.0.jar
[2025-05-08T19:30:28.324+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkContext: Added file file:///home/airflow/.ivy2/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar at spark://f2a432e4376a:42911/files/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar with timestamp 1746732627597
[2025-05-08T19:30:28.324+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO Utils: Copying /home/airflow/.ivy2/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar to /tmp/spark-fbccb0be-19f5-4b7c-8a86-0995b480387a/userFiles-06e8b242-567c-4a98-9935-57bfeefe508c/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar
[2025-05-08T19:30:28.327+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkContext: Added file file:///home/airflow/.ivy2/jars/org.checkerframework_checker-qual-3.31.0.jar at spark://f2a432e4376a:42911/files/org.checkerframework_checker-qual-3.31.0.jar with timestamp 1746732627597
[2025-05-08T19:30:28.328+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO Utils: Copying /home/airflow/.ivy2/jars/org.checkerframework_checker-qual-3.31.0.jar to /tmp/spark-fbccb0be-19f5-4b7c-8a86-0995b480387a/userFiles-06e8b242-567c-4a98-9935-57bfeefe508c/org.checkerframework_checker-qual-3.31.0.jar
[2025-05-08T19:30:28.330+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO SparkContext: Added file file:///home/airflow/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar at spark://f2a432e4376a:42911/files/org.slf4j_slf4j-api-1.7.16.jar with timestamp 1746732627597
[2025-05-08T19:30:28.331+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO Utils: Copying /home/airflow/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar to /tmp/spark-fbccb0be-19f5-4b7c-8a86-0995b480387a/userFiles-06e8b242-567c-4a98-9935-57bfeefe508c/org.slf4j_slf4j-api-1.7.16.jar
[2025-05-08T19:30:28.463+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO StandaloneAppClient$ClientEndpoint: Connecting to master spark://spark-master:7077...
[2025-05-08T19:30:28.498+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO TransportClientFactory: Successfully created connection to spark-master/172.20.0.3:7077 after 21 ms (0 ms spent in bootstraps)
[2025-05-08T19:30:28.584+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20250508193028-0004
[2025-05-08T19:30:28.585+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO StandaloneAppClient$ClientEndpoint: Executor added: app-20250508193028-0004/0 on worker-20250508061515-172.20.0.5-45383 (172.20.0.5:45383) with 1 core(s)
[2025-05-08T19:30:28.587+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO StandaloneSchedulerBackend: Granted executor ID app-20250508193028-0004/0 on hostPort 172.20.0.5:45383 with 1 core(s), 1024.0 MiB RAM
[2025-05-08T19:30:28.589+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 40749.
[2025-05-08T19:30:28.589+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO NettyBlockTransferService: Server created on f2a432e4376a:40749
[2025-05-08T19:30:28.593+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2025-05-08T19:30:28.598+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f2a432e4376a, 40749, None)
[2025-05-08T19:30:28.600+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO BlockManagerMasterEndpoint: Registering block manager f2a432e4376a:40749 with 434.4 MiB RAM, BlockManagerId(driver, f2a432e4376a, 40749, None)
[2025-05-08T19:30:28.602+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f2a432e4376a, 40749, None)
[2025-05-08T19:30:28.603+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f2a432e4376a, 40749, None)
[2025-05-08T19:30:28.639+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO StandaloneAppClient$ClientEndpoint: Executor updated: app-20250508193028-0004/0 is now RUNNING
[2025-05-08T19:30:28.767+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:28 INFO StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
[2025-05-08T19:30:29.032+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:29 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir.
[2025-05-08T19:30:29.034+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:29 INFO SharedState: Warehouse path is 'file:/opt/airflow/spark-warehouse'.
[2025-05-08T19:30:29.834+0000] {spark_submit.py:571} INFO - 2025-05-08 19:30:29,834 [INFO] SparkSession создана
[2025-05-08T19:30:29.834+0000] {spark_submit.py:571} INFO - 2025-05-08 19:30:29,834 [INFO] Загружаем клиентов и транзакции
[2025-05-08T19:30:31.431+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:31 INFO CoarseGrainedSchedulerBackend$DriverEndpoint: Registered executor NettyRpcEndpointRef(spark-client://Executor) (172.20.0.5:60268) with ID 0,  ResourceProfileId 0
[2025-05-08T19:30:31.605+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:31 INFO BlockManagerMasterEndpoint: Registering block manager 172.20.0.5:46673 with 434.4 MiB RAM, BlockManagerId(0, 172.20.0.5, 46673, None)
[2025-05-08T19:30:32.755+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO CodeGenerator: Code generated in 100.646179 ms
[2025-05-08T19:30:32.809+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO DAGScheduler: Registering RDD 2 (count at NativeMethodAccessorImpl.java:0) as input to shuffle 0
[2025-05-08T19:30:32.813+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO DAGScheduler: Got map stage job 0 (count at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2025-05-08T19:30:32.813+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO DAGScheduler: Final stage: ShuffleMapStage 0 (count at NativeMethodAccessorImpl.java:0)
[2025-05-08T19:30:32.813+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO DAGScheduler: Parents of final stage: List()
[2025-05-08T19:30:32.814+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO DAGScheduler: Missing parents: List()
[2025-05-08T19:30:32.817+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO DAGScheduler: Submitting ShuffleMapStage 0 (MapPartitionsRDD[2] at count at NativeMethodAccessorImpl.java:0), which has no missing parents
[2025-05-08T19:30:32.908+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 12.9 KiB, free 434.4 MiB)
[2025-05-08T19:30:32.933+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 6.8 KiB, free 434.4 MiB)
[2025-05-08T19:30:32.935+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on f2a432e4376a:40749 (size: 6.8 KiB, free: 434.4 MiB)
[2025-05-08T19:30:32.942+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:1474
[2025-05-08T19:30:32.953+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 0 (MapPartitionsRDD[2] at count at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2025-05-08T19:30:32.954+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks resource profile 0
[2025-05-08T19:30:32.983+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:32 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0) (172.20.0.5, executor 0, partition 0, PROCESS_LOCAL, 4292 bytes) taskResourceAssignments Map()
[2025-05-08T19:30:33.162+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:33 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on 172.20.0.5:46673 (size: 6.8 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.109+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 1134 ms on 172.20.0.5 (executor 0) (1/1)
[2025-05-08T19:30:34.111+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
[2025-05-08T19:30:34.117+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: ShuffleMapStage 0 (count at NativeMethodAccessorImpl.java:0) finished in 1.289 s
[2025-05-08T19:30:34.117+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: looking for newly runnable stages
[2025-05-08T19:30:34.118+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: running: Set()
[2025-05-08T19:30:34.118+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: waiting: Set()
[2025-05-08T19:30:34.118+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: failed: Set()
[2025-05-08T19:30:34.157+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO CodeGenerator: Code generated in 10.153075 ms
[2025-05-08T19:30:34.190+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO SparkContext: Starting job: count at NativeMethodAccessorImpl.java:0
[2025-05-08T19:30:34.194+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Got job 1 (count at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2025-05-08T19:30:34.195+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Final stage: ResultStage 2 (count at NativeMethodAccessorImpl.java:0)
[2025-05-08T19:30:34.195+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 1)
[2025-05-08T19:30:34.195+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Missing parents: List()
[2025-05-08T19:30:34.196+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Submitting ResultStage 2 (MapPartitionsRDD[5] at count at NativeMethodAccessorImpl.java:0), which has no missing parents
[2025-05-08T19:30:34.203+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 11.0 KiB, free 434.4 MiB)
[2025-05-08T19:30:34.205+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 5.5 KiB, free 434.4 MiB)
[2025-05-08T19:30:34.206+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on f2a432e4376a:40749 (size: 5.5 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.207+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:1474
[2025-05-08T19:30:34.210+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 2 (MapPartitionsRDD[5] at count at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2025-05-08T19:30:34.210+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSchedulerImpl: Adding task set 2.0 with 1 tasks resource profile 0
[2025-05-08T19:30:34.215+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSetManager: Starting task 0.0 in stage 2.0 (TID 1) (172.20.0.5, executor 0, partition 0, NODE_LOCAL, 4457 bytes) taskResourceAssignments Map()
[2025-05-08T19:30:34.237+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on 172.20.0.5:46673 (size: 5.5 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.308+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO MapOutputTrackerMasterEndpoint: Asked to send map output locations for shuffle 0 to 172.20.0.5:60268
[2025-05-08T19:30:34.400+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSetManager: Finished task 0.0 in stage 2.0 (TID 1) in 187 ms on 172.20.0.5 (executor 0) (1/1)
[2025-05-08T19:30:34.401+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
[2025-05-08T19:30:34.401+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: ResultStage 2 (count at NativeMethodAccessorImpl.java:0) finished in 0.201 s
[2025-05-08T19:30:34.403+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Job 1 is finished. Cancelling potential speculative or zombie tasks for this job
[2025-05-08T19:30:34.403+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSchedulerImpl: Killing all running tasks in stage 2: Stage finished
[2025-05-08T19:30:34.404+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Job 1 finished: count at NativeMethodAccessorImpl.java:0, took 0.213701 s
[2025-05-08T19:30:34.453+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Registering RDD 8 (count at NativeMethodAccessorImpl.java:0) as input to shuffle 1
[2025-05-08T19:30:34.453+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Got map stage job 2 (count at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2025-05-08T19:30:34.453+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Final stage: ShuffleMapStage 3 (count at NativeMethodAccessorImpl.java:0)
[2025-05-08T19:30:34.454+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Parents of final stage: List()
[2025-05-08T19:30:34.454+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Missing parents: List()
[2025-05-08T19:30:34.454+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Submitting ShuffleMapStage 3 (MapPartitionsRDD[8] at count at NativeMethodAccessorImpl.java:0), which has no missing parents
[2025-05-08T19:30:34.457+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 12.9 KiB, free 434.4 MiB)
[2025-05-08T19:30:34.461+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 6.8 KiB, free 434.3 MiB)
[2025-05-08T19:30:34.462+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on f2a432e4376a:40749 (size: 6.8 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.462+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO SparkContext: Created broadcast 2 from broadcast at DAGScheduler.scala:1474
[2025-05-08T19:30:34.463+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 3 (MapPartitionsRDD[8] at count at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2025-05-08T19:30:34.463+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSchedulerImpl: Adding task set 3.0 with 1 tasks resource profile 0
[2025-05-08T19:30:34.464+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSetManager: Starting task 0.0 in stage 3.0 (TID 2) (172.20.0.5, executor 0, partition 0, PROCESS_LOCAL, 4292 bytes) taskResourceAssignments Map()
[2025-05-08T19:30:34.479+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on 172.20.0.5:46673 (size: 6.8 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.507+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSetManager: Finished task 0.0 in stage 3.0 (TID 2) in 42 ms on 172.20.0.5 (executor 0) (1/1)
[2025-05-08T19:30:34.507+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSchedulerImpl: Removed TaskSet 3.0, whose tasks have all completed, from pool
[2025-05-08T19:30:34.511+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: ShuffleMapStage 3 (count at NativeMethodAccessorImpl.java:0) finished in 0.053 s
[2025-05-08T19:30:34.512+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: looking for newly runnable stages
[2025-05-08T19:30:34.512+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: running: Set()
[2025-05-08T19:30:34.513+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: waiting: Set()
[2025-05-08T19:30:34.513+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: failed: Set()
[2025-05-08T19:30:34.533+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO SparkContext: Starting job: count at NativeMethodAccessorImpl.java:0
[2025-05-08T19:30:34.534+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Got job 3 (count at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2025-05-08T19:30:34.534+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Final stage: ResultStage 5 (count at NativeMethodAccessorImpl.java:0)
[2025-05-08T19:30:34.535+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 4)
[2025-05-08T19:30:34.535+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Missing parents: List()
[2025-05-08T19:30:34.535+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Submitting ResultStage 5 (MapPartitionsRDD[11] at count at NativeMethodAccessorImpl.java:0), which has no missing parents
[2025-05-08T19:30:34.537+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO MemoryStore: Block broadcast_3 stored as values in memory (estimated size 11.0 KiB, free 434.3 MiB)
[2025-05-08T19:30:34.539+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO MemoryStore: Block broadcast_3_piece0 stored as bytes in memory (estimated size 5.5 KiB, free 434.3 MiB)
[2025-05-08T19:30:34.539+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Added broadcast_3_piece0 in memory on f2a432e4376a:40749 (size: 5.5 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.539+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO SparkContext: Created broadcast 3 from broadcast at DAGScheduler.scala:1474
[2025-05-08T19:30:34.540+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 5 (MapPartitionsRDD[11] at count at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2025-05-08T19:30:34.540+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSchedulerImpl: Adding task set 5.0 with 1 tasks resource profile 0
[2025-05-08T19:30:34.542+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSetManager: Starting task 0.0 in stage 5.0 (TID 3) (172.20.0.5, executor 0, partition 0, NODE_LOCAL, 4457 bytes) taskResourceAssignments Map()
[2025-05-08T19:30:34.558+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Added broadcast_3_piece0 in memory on 172.20.0.5:46673 (size: 5.5 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.568+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO MapOutputTrackerMasterEndpoint: Asked to send map output locations for shuffle 1 to 172.20.0.5:60268
[2025-05-08T19:30:34.579+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSetManager: Finished task 0.0 in stage 5.0 (TID 3) in 38 ms on 172.20.0.5 (executor 0) (1/1)
[2025-05-08T19:30:34.580+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSchedulerImpl: Removed TaskSet 5.0, whose tasks have all completed, from pool
[2025-05-08T19:30:34.580+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: ResultStage 5 (count at NativeMethodAccessorImpl.java:0) finished in 0.044 s
[2025-05-08T19:30:34.580+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Job 3 is finished. Cancelling potential speculative or zombie tasks for this job
[2025-05-08T19:30:34.581+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO TaskSchedulerImpl: Killing all running tasks in stage 5: Stage finished
[2025-05-08T19:30:34.581+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO DAGScheduler: Job 3 finished: count at NativeMethodAccessorImpl.java:0, took 0.047760 s
[2025-05-08T19:30:34.582+0000] {spark_submit.py:571} INFO - 2025-05-08 19:30:34,582 [INFO] Загружено 4652 транзакций и 1200 клиентов
[2025-05-08T19:30:34.696+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Removed broadcast_2_piece0 on f2a432e4376a:40749 in memory (size: 6.8 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.703+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Removed broadcast_2_piece0 on 172.20.0.5:46673 in memory (size: 6.8 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.719+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Removed broadcast_1_piece0 on f2a432e4376a:40749 in memory (size: 5.5 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.724+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Removed broadcast_1_piece0 on 172.20.0.5:46673 in memory (size: 5.5 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.737+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Removed broadcast_3_piece0 on f2a432e4376a:40749 in memory (size: 5.5 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.740+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Removed broadcast_3_piece0 on 172.20.0.5:46673 in memory (size: 5.5 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.753+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Removed broadcast_0_piece0 on f2a432e4376a:40749 in memory (size: 6.8 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.756+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:34 INFO BlockManagerInfo: Removed broadcast_0_piece0 on 172.20.0.5:46673 in memory (size: 6.8 KiB, free: 434.4 MiB)
[2025-05-08T19:30:34.786+0000] {spark_submit.py:571} INFO - 2025-05-08 19:30:34,786 [INFO] Создаем P2P ребра
[2025-05-08T19:30:34.840+0000] {spark_submit.py:571} INFO - 2025-05-08 19:30:34,840 [INFO] Создаем ребра по общим атрибутам
[2025-05-08T19:30:35.505+0000] {spark_submit.py:571} INFO - 2025-05-08 19:30:35,505 [INFO] Объединяем все ребра
[2025-05-08T19:30:35.615+0000] {spark_submit.py:571} INFO - 2025-05-08 19:30:35,615 [INFO] Создаем вершины графа
[2025-05-08T19:30:35.713+0000] {spark_submit.py:571} INFO - 2025-05-08 19:30:35,713 [INFO] Создаем финальный граф
[2025-05-08T19:30:35.745+0000] {spark_submit.py:571} INFO - 2025-05-08 19:30:35,745 [INFO] Вычисляем метрики графа
[2025-05-08T19:30:36.847+0000] {spark_submit.py:571} INFO - 2025-05-08 19:30:36,753 [ERROR] Ошибка при обработке транзакционного графа: cannot resolve 'edge' given input columns: [MSG, id];
[2025-05-08T19:30:36.847+0000] {spark_submit.py:571} INFO - 'Aggregate [id#763], [id#763, sum('edge[weight]) AS w_degree#498]
[2025-05-08T19:30:36.847+0000] {spark_submit.py:571} INFO - +- Union false, false
[2025-05-08T19:30:36.847+0000] {spark_submit.py:571} INFO - :- Project [MSG#762, id#763]
[2025-05-08T19:30:36.847+0000] {spark_submit.py:571} INFO - :  +- Project [id#763, MSG#762]
[2025-05-08T19:30:36.847+0000] {spark_submit.py:571} INFO - :     +- Join Inner, (id#763 = id#486)
[2025-05-08T19:30:36.847+0000] {spark_submit.py:571} INFO - :        :- Project [edge#499.weight AS MSG#762, src#501.id AS id#763]
[2025-05-08T19:30:36.847+0000] {spark_submit.py:571} INFO - :        :  +- Project [src#501, edge#499, dst#503]
[2025-05-08T19:30:36.847+0000] {spark_submit.py:571} INFO - :        :     +- Join Inner, (edge#499.dst = dst#503.id)
[2025-05-08T19:30:36.847+0000] {spark_submit.py:571} INFO - :        :        :- Join Inner, (edge#499.src = src#501.id)
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :- Project [struct(src, src#133, dst, dst#134, weight, weight#390, relationships, relationships#392, relationships_str, relationships_str#397) AS edge#499]
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :  +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :     +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :        +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :           +- Union false, false
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_id#15 AS src#133, recipient_id_hash#29 AS dst#134, p2p AS relationship#135, LOG1P(amount#17) AS weight#136]
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Filter isnotnull(recipient_id_hash#29)
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Filter (transaction_type#20 = p2p)
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Project [transaction_id#14, client_id#15, datetime#16, amount#17, currency#18, coalesce(merchant#19, cast(no_merchant as string)) AS merchant#114, transaction_type#20, category#21, country_code#22, region#23, coalesce(device_type#24, cast(unknown as string)) AS device_type#115, session_id#25, channel#26, transaction_purpose#27, ip_network#28, recipient_id_hash#29, dt_30#79]
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Project [transaction_id#14, client_id#15, datetime#16, amount#17, currency#18, merchant#19, transaction_type#20, category#21, country_code#22, region#23, device_type#24, session_id#25, channel#26, transaction_purpose#27, ip_network#28, recipient_id_hash#29, cast(date_trunc(minute, datetime#16, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Relation [transaction_id#14,client_id#15,datetime#16,amount#17,currency#18,merchant#19,transaction_type#20,category#21,country_code#22,region#23,device_type#24,session_id#25,channel#26,transaction_purpose#27,ip_network#28,recipient_id_hash#29] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.848+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#306, 0, 0) AS clients#159]
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :                    +- Project [transaction_id#305, client_id#306, datetime#307, amount#308, currency#309, coalesce(merchant#310, cast(no_merchant as string)) AS merchant#114, transaction_type#311, category#312, country_code#313, region#314, coalesce(device_type#315, cast(unknown as string)) AS device_type#115, session_id#316, channel#317, transaction_purpose#318, ip_network#319, recipient_id_hash#320, dt_30#79]
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :                       +- Project [transaction_id#305, client_id#306, datetime#307, amount#308, currency#309, merchant#310, transaction_type#311, category#312, country_code#313, region#314, device_type#315, session_id#316, channel#317, transaction_purpose#318, ip_network#319, recipient_id_hash#320, cast(date_trunc(minute, datetime#307, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :                          +- Relation [transaction_id#305,client_id#306,datetime#307,amount#308,currency#309,merchant#310,transaction_type#311,category#312,country_code#313,region#314,device_type#315,session_id#316,channel#317,transaction_purpose#318,ip_network#319,recipient_id_hash#320] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Project [session_id#336, clients#195, client_pairs#201]
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Aggregate [session_id#336], [session_id#336, collect_set(client_id#326, 0, 0) AS clients#195]
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :                 +- Filter isnotnull(session_id#336)
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :                    +- Project [transaction_id#325, client_id#326, datetime#327, amount#328, currency#329, coalesce(merchant#330, cast(no_merchant as string)) AS merchant#114, transaction_type#331, category#332, country_code#333, region#334, coalesce(device_type#335, cast(unknown as string)) AS device_type#115, session_id#336, channel#337, transaction_purpose#338, ip_network#339, recipient_id_hash#340, dt_30#79]
[2025-05-08T19:30:36.849+0000] {spark_submit.py:571} INFO - :        :        :  :              :                       +- Project [transaction_id#325, client_id#326, datetime#327, amount#328, currency#329, merchant#330, transaction_type#331, category#332, country_code#333, region#334, device_type#335, session_id#336, channel#337, transaction_purpose#338, ip_network#339, recipient_id_hash#340, cast(date_trunc(minute, datetime#327, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.850+0000] {spark_submit.py:571} INFO - :        :        :  :              :                          +- Relation [transaction_id#325,client_id#326,datetime#327,amount#328,currency#329,merchant#330,transaction_type#331,category#332,country_code#333,region#334,device_type#335,session_id#336,channel#337,transaction_purpose#338,ip_network#339,recipient_id_hash#340] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.850+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.850+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Project [ip_network#359, clients#231, client_pairs#237]
[2025-05-08T19:30:36.850+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.850+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.850+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.850+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Aggregate [ip_network#359], [ip_network#359, collect_set(client_id#346, 0, 0) AS clients#231]
[2025-05-08T19:30:36.850+0000] {spark_submit.py:571} INFO - :        :        :  :              :                 +- Filter isnotnull(ip_network#359)
[2025-05-08T19:30:36.850+0000] {spark_submit.py:571} INFO - :        :        :  :              :                    +- Project [transaction_id#345, client_id#346, datetime#347, amount#348, currency#349, coalesce(merchant#350, cast(no_merchant as string)) AS merchant#114, transaction_type#351, category#352, country_code#353, region#354, coalesce(device_type#355, cast(unknown as string)) AS device_type#115, session_id#356, channel#357, transaction_purpose#358, ip_network#359, recipient_id_hash#360, dt_30#79]
[2025-05-08T19:30:36.850+0000] {spark_submit.py:571} INFO - :        :        :  :              :                       +- Project [transaction_id#345, client_id#346, datetime#347, amount#348, currency#349, merchant#350, transaction_type#351, category#352, country_code#353, region#354, device_type#355, session_id#356, channel#357, transaction_purpose#358, ip_network#359, recipient_id_hash#360, cast(date_trunc(minute, datetime#347, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :              :                          +- Relation [transaction_id#345,client_id#346,datetime#347,amount#348,currency#349,merchant#350,transaction_type#351,category#352,country_code#353,region#354,device_type#355,session_id#356,channel#357,transaction_purpose#358,ip_network#359,recipient_id_hash#360] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :              +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :                 +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :                    +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :                       +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :                          +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :                             +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#366, 0, 0) AS clients#287]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :                                +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :                                   +- Project [transaction_id#365, client_id#366, datetime#367, amount#368, currency#369, merchant#114, transaction_type#371, category#372, country_code#373, region#374, device_type#115, session_id#376, channel#377, transaction_purpose#378, ip_network#379, recipient_id_hash#380, dt_30#79, concat(region#374, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :                                      +- Filter transaction_type#371 IN (withdrawal)
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :                                         +- Project [transaction_id#365, client_id#366, datetime#367, amount#368, currency#369, coalesce(merchant#370, cast(no_merchant as string)) AS merchant#114, transaction_type#371, category#372, country_code#373, region#374, coalesce(device_type#375, cast(unknown as string)) AS device_type#115, session_id#376, channel#377, transaction_purpose#378, ip_network#379, recipient_id_hash#380, dt_30#79]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :                                            +- Project [transaction_id#365, client_id#366, datetime#367, amount#368, currency#369, merchant#370, transaction_type#371, category#372, country_code#373, region#374, device_type#375, session_id#376, channel#377, transaction_purpose#378, ip_network#379, recipient_id_hash#380, cast(date_trunc(minute, datetime#367, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  :                                               +- Relation [transaction_id#365,client_id#366,datetime#367,amount#368,currency#369,merchant#370,transaction_type#371,category#372,country_code#373,region#374,device_type#375,session_id#376,channel#377,transaction_purpose#378,ip_network#379,recipient_id_hash#380] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :  +- Project [struct(id, id#486) AS src#501]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :     +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :        +- Deduplicate [src#133]
[2025-05-08T19:30:36.851+0000] {spark_submit.py:571} INFO - :        :        :           +- Union false, false
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :- Deduplicate [src#133]
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :  +- Project [src#133]
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :              +- Union false, false
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_id#508 AS src#133, recipient_id_hash#522 AS dst#134, p2p AS relationship#135, LOG1P(amount#510) AS weight#136]
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Filter isnotnull(recipient_id_hash#522)
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Filter (transaction_type#513 = p2p)
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Project [transaction_id#507, client_id#508, datetime#509, amount#510, currency#511, coalesce(merchant#512, cast(no_merchant as string)) AS merchant#114, transaction_type#513, category#514, country_code#515, region#516, coalesce(device_type#517, cast(unknown as string)) AS device_type#115, session_id#518, channel#519, transaction_purpose#520, ip_network#521, recipient_id_hash#522, dt_30#79]
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Project [transaction_id#507, client_id#508, datetime#509, amount#510, currency#511, merchant#512, transaction_type#513, category#514, country_code#515, region#516, device_type#517, session_id#518, channel#519, transaction_purpose#520, ip_network#521, recipient_id_hash#522, cast(date_trunc(minute, datetime#509, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Relation [transaction_id#507,client_id#508,datetime#509,amount#510,currency#511,merchant#512,transaction_type#513,category#514,country_code#515,region#516,device_type#517,session_id#518,channel#519,transaction_purpose#520,ip_network#521,recipient_id_hash#522] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.852+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#524, 0, 0) AS clients#159]
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                    +- Project [transaction_id#523, client_id#524, datetime#525, amount#526, currency#527, coalesce(merchant#528, cast(no_merchant as string)) AS merchant#114, transaction_type#529, category#530, country_code#531, region#532, coalesce(device_type#533, cast(unknown as string)) AS device_type#115, session_id#534, channel#535, transaction_purpose#536, ip_network#537, recipient_id_hash#538, dt_30#79]
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                       +- Project [transaction_id#523, client_id#524, datetime#525, amount#526, currency#527, merchant#528, transaction_type#529, category#530, country_code#531, region#532, device_type#533, session_id#534, channel#535, transaction_purpose#536, ip_network#537, recipient_id_hash#538, cast(date_trunc(minute, datetime#525, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                          +- Relation [transaction_id#523,client_id#524,datetime#525,amount#526,currency#527,merchant#528,transaction_type#529,category#530,country_code#531,region#532,device_type#533,session_id#534,channel#535,transaction_purpose#536,ip_network#537,recipient_id_hash#538] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Project [session_id#550, clients#195, client_pairs#201]
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Aggregate [session_id#550], [session_id#550, collect_set(client_id#540, 0, 0) AS clients#195]
[2025-05-08T19:30:36.853+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                 +- Filter isnotnull(session_id#550)
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                    +- Project [transaction_id#539, client_id#540, datetime#541, amount#542, currency#543, coalesce(merchant#544, cast(no_merchant as string)) AS merchant#114, transaction_type#545, category#546, country_code#547, region#548, coalesce(device_type#549, cast(unknown as string)) AS device_type#115, session_id#550, channel#551, transaction_purpose#552, ip_network#553, recipient_id_hash#554, dt_30#79]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                       +- Project [transaction_id#539, client_id#540, datetime#541, amount#542, currency#543, merchant#544, transaction_type#545, category#546, country_code#547, region#548, device_type#549, session_id#550, channel#551, transaction_purpose#552, ip_network#553, recipient_id_hash#554, cast(date_trunc(minute, datetime#541, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                          +- Relation [transaction_id#539,client_id#540,datetime#541,amount#542,currency#543,merchant#544,transaction_type#545,category#546,country_code#547,region#548,device_type#549,session_id#550,channel#551,transaction_purpose#552,ip_network#553,recipient_id_hash#554] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Project [ip_network#569, clients#231, client_pairs#237]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Aggregate [ip_network#569], [ip_network#569, collect_set(client_id#556, 0, 0) AS clients#231]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                 +- Filter isnotnull(ip_network#569)
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                    +- Project [transaction_id#555, client_id#556, datetime#557, amount#558, currency#559, coalesce(merchant#560, cast(no_merchant as string)) AS merchant#114, transaction_type#561, category#562, country_code#563, region#564, coalesce(device_type#565, cast(unknown as string)) AS device_type#115, session_id#566, channel#567, transaction_purpose#568, ip_network#569, recipient_id_hash#570, dt_30#79]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                       +- Project [transaction_id#555, client_id#556, datetime#557, amount#558, currency#559, merchant#560, transaction_type#561, category#562, country_code#563, region#564, device_type#565, session_id#566, channel#567, transaction_purpose#568, ip_network#569, recipient_id_hash#570, cast(date_trunc(minute, datetime#557, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                          +- Relation [transaction_id#555,client_id#556,datetime#557,amount#558,currency#559,merchant#560,transaction_type#561,category#562,country_code#563,region#564,device_type#565,session_id#566,channel#567,transaction_purpose#568,ip_network#569,recipient_id_hash#570] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.854+0000] {spark_submit.py:571} INFO - :        :        :              :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :              :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :              :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :              :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#572, 0, 0) AS clients#287]
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :              :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :              :                                      +- Project [transaction_id#571, client_id#572, datetime#573, amount#574, currency#575, merchant#114, transaction_type#577, category#578, country_code#579, region#580, device_type#115, session_id#582, channel#583, transaction_purpose#584, ip_network#585, recipient_id_hash#586, dt_30#79, concat(region#580, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :              :                                         +- Filter transaction_type#577 IN (withdrawal)
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :              :                                            +- Project [transaction_id#571, client_id#572, datetime#573, amount#574, currency#575, coalesce(merchant#576, cast(no_merchant as string)) AS merchant#114, transaction_type#577, category#578, country_code#579, region#580, coalesce(device_type#581, cast(unknown as string)) AS device_type#115, session_id#582, channel#583, transaction_purpose#584, ip_network#585, recipient_id_hash#586, dt_30#79]
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :              :                                               +- Project [transaction_id#571, client_id#572, datetime#573, amount#574, currency#575, merchant#576, transaction_type#577, category#578, country_code#579, region#580, device_type#581, session_id#582, channel#583, transaction_purpose#584, ip_network#585, recipient_id_hash#586, cast(date_trunc(minute, datetime#573, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :              :                                                  +- Relation [transaction_id#571,client_id#572,datetime#573,amount#574,currency#575,merchant#576,transaction_type#577,category#578,country_code#579,region#580,device_type#581,session_id#582,channel#583,transaction_purpose#584,ip_network#585,recipient_id_hash#586] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :              +- Deduplicate [dst#134]
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :                 +- Project [dst#134]
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :                    +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :                       +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :                          +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.855+0000] {spark_submit.py:571} INFO - :        :        :                             +- Union false, false
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_id#406 AS src#133, recipient_id_hash#420 AS dst#134, p2p AS relationship#135, LOG1P(amount#408) AS weight#136]
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Filter isnotnull(recipient_id_hash#420)
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Filter (transaction_type#411 = p2p)
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Project [transaction_id#405, client_id#406, datetime#407, amount#408, currency#409, coalesce(merchant#410, cast(no_merchant as string)) AS merchant#114, transaction_type#411, category#412, country_code#413, region#414, coalesce(device_type#415, cast(unknown as string)) AS device_type#115, session_id#416, channel#417, transaction_purpose#418, ip_network#419, recipient_id_hash#420, dt_30#79]
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Project [transaction_id#405, client_id#406, datetime#407, amount#408, currency#409, merchant#410, transaction_type#411, category#412, country_code#413, region#414, device_type#415, session_id#416, channel#417, transaction_purpose#418, ip_network#419, recipient_id_hash#420, cast(date_trunc(minute, datetime#407, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Relation [transaction_id#405,client_id#406,datetime#407,amount#408,currency#409,merchant#410,transaction_type#411,category#412,country_code#413,region#414,device_type#415,session_id#416,channel#417,transaction_purpose#418,ip_network#419,recipient_id_hash#420] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#422, 0, 0) AS clients#159]
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :                    +- Project [transaction_id#421, client_id#422, datetime#423, amount#424, currency#425, coalesce(merchant#426, cast(no_merchant as string)) AS merchant#114, transaction_type#427, category#428, country_code#429, region#430, coalesce(device_type#431, cast(unknown as string)) AS device_type#115, session_id#432, channel#433, transaction_purpose#434, ip_network#435, recipient_id_hash#436, dt_30#79]
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :                       +- Project [transaction_id#421, client_id#422, datetime#423, amount#424, currency#425, merchant#426, transaction_type#427, category#428, country_code#429, region#430, device_type#431, session_id#432, channel#433, transaction_purpose#434, ip_network#435, recipient_id_hash#436, cast(date_trunc(minute, datetime#423, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :                          +- Relation [transaction_id#421,client_id#422,datetime#423,amount#424,currency#425,merchant#426,transaction_type#427,category#428,country_code#429,region#430,device_type#431,session_id#432,channel#433,transaction_purpose#434,ip_network#435,recipient_id_hash#436] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.856+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Project [session_id#448, clients#195, client_pairs#201]
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Aggregate [session_id#448], [session_id#448, collect_set(client_id#438, 0, 0) AS clients#195]
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :                 +- Filter isnotnull(session_id#448)
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :                    +- Project [transaction_id#437, client_id#438, datetime#439, amount#440, currency#441, coalesce(merchant#442, cast(no_merchant as string)) AS merchant#114, transaction_type#443, category#444, country_code#445, region#446, coalesce(device_type#447, cast(unknown as string)) AS device_type#115, session_id#448, channel#449, transaction_purpose#450, ip_network#451, recipient_id_hash#452, dt_30#79]
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :                       +- Project [transaction_id#437, client_id#438, datetime#439, amount#440, currency#441, merchant#442, transaction_type#443, category#444, country_code#445, region#446, device_type#447, session_id#448, channel#449, transaction_purpose#450, ip_network#451, recipient_id_hash#452, cast(date_trunc(minute, datetime#439, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :                          +- Relation [transaction_id#437,client_id#438,datetime#439,amount#440,currency#441,merchant#442,transaction_type#443,category#444,country_code#445,region#446,device_type#447,session_id#448,channel#449,transaction_purpose#450,ip_network#451,recipient_id_hash#452] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Project [ip_network#467, clients#231, client_pairs#237]
[2025-05-08T19:30:36.857+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.858+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.858+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.858+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Aggregate [ip_network#467], [ip_network#467, collect_set(client_id#454, 0, 0) AS clients#231]
[2025-05-08T19:30:36.858+0000] {spark_submit.py:571} INFO - :        :        :                                :                 +- Filter isnotnull(ip_network#467)
[2025-05-08T19:30:36.858+0000] {spark_submit.py:571} INFO - :        :        :                                :                    +- Project [transaction_id#453, client_id#454, datetime#455, amount#456, currency#457, coalesce(merchant#458, cast(no_merchant as string)) AS merchant#114, transaction_type#459, category#460, country_code#461, region#462, coalesce(device_type#463, cast(unknown as string)) AS device_type#115, session_id#464, channel#465, transaction_purpose#466, ip_network#467, recipient_id_hash#468, dt_30#79]
[2025-05-08T19:30:36.858+0000] {spark_submit.py:571} INFO - :        :        :                                :                       +- Project [transaction_id#453, client_id#454, datetime#455, amount#456, currency#457, merchant#458, transaction_type#459, category#460, country_code#461, region#462, device_type#463, session_id#464, channel#465, transaction_purpose#466, ip_network#467, recipient_id_hash#468, cast(date_trunc(minute, datetime#455, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.858+0000] {spark_submit.py:571} INFO - :        :        :                                :                          +- Relation [transaction_id#453,client_id#454,datetime#455,amount#456,currency#457,merchant#458,transaction_type#459,category#460,country_code#461,region#462,device_type#463,session_id#464,channel#465,transaction_purpose#466,ip_network#467,recipient_id_hash#468] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.858+0000] {spark_submit.py:571} INFO - :        :        :                                +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.858+0000] {spark_submit.py:571} INFO - :        :        :                                   +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.858+0000] {spark_submit.py:571} INFO - :        :        :                                      +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.858+0000] {spark_submit.py:571} INFO - :        :        :                                         +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.859+0000] {spark_submit.py:571} INFO - :        :        :                                            +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.859+0000] {spark_submit.py:571} INFO - :        :        :                                               +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#470, 0, 0) AS clients#287]
[2025-05-08T19:30:36.859+0000] {spark_submit.py:571} INFO - :        :        :                                                  +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.859+0000] {spark_submit.py:571} INFO - :        :        :                                                     +- Project [transaction_id#469, client_id#470, datetime#471, amount#472, currency#473, merchant#114, transaction_type#475, category#476, country_code#477, region#478, device_type#115, session_id#480, channel#481, transaction_purpose#482, ip_network#483, recipient_id_hash#484, dt_30#79, concat(region#478, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.859+0000] {spark_submit.py:571} INFO - :        :        :                                                        +- Filter transaction_type#475 IN (withdrawal)
[2025-05-08T19:30:36.859+0000] {spark_submit.py:571} INFO - :        :        :                                                           +- Project [transaction_id#469, client_id#470, datetime#471, amount#472, currency#473, coalesce(merchant#474, cast(no_merchant as string)) AS merchant#114, transaction_type#475, category#476, country_code#477, region#478, coalesce(device_type#479, cast(unknown as string)) AS device_type#115, session_id#480, channel#481, transaction_purpose#482, ip_network#483, recipient_id_hash#484, dt_30#79]
[2025-05-08T19:30:36.859+0000] {spark_submit.py:571} INFO - :        :        :                                                              +- Project [transaction_id#469, client_id#470, datetime#471, amount#472, currency#473, merchant#474, transaction_type#475, category#476, country_code#477, region#478, device_type#479, session_id#480, channel#481, transaction_purpose#482, ip_network#483, recipient_id_hash#484, cast(date_trunc(minute, datetime#471, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.859+0000] {spark_submit.py:571} INFO - :        :        :                                                                 +- Relation [transaction_id#469,client_id#470,datetime#471,amount#472,currency#473,merchant#474,transaction_type#475,category#476,country_code#477,region#478,device_type#479,session_id#480,channel#481,transaction_purpose#482,ip_network#483,recipient_id_hash#484] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.859+0000] {spark_submit.py:571} INFO - :        :        +- Project [struct(id, id#486) AS dst#503]
[2025-05-08T19:30:36.859+0000] {spark_submit.py:571} INFO - :        :           +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.859+0000] {spark_submit.py:571} INFO - :        :              +- Deduplicate [src#133]
[2025-05-08T19:30:36.860+0000] {spark_submit.py:571} INFO - :        :                 +- Union false, false
[2025-05-08T19:30:36.860+0000] {spark_submit.py:571} INFO - :        :                    :- Deduplicate [src#133]
[2025-05-08T19:30:36.860+0000] {spark_submit.py:571} INFO - :        :                    :  +- Project [src#133]
[2025-05-08T19:30:36.860+0000] {spark_submit.py:571} INFO - :        :                    :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.860+0000] {spark_submit.py:571} INFO - :        :                    :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.860+0000] {spark_submit.py:571} INFO - :        :                    :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.860+0000] {spark_submit.py:571} INFO - :        :                    :              +- Union false, false
[2025-05-08T19:30:36.860+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_id#594 AS src#133, recipient_id_hash#608 AS dst#134, p2p AS relationship#135, LOG1P(amount#596) AS weight#136]
[2025-05-08T19:30:36.860+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Filter isnotnull(recipient_id_hash#608)
[2025-05-08T19:30:36.860+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Filter (transaction_type#599 = p2p)
[2025-05-08T19:30:36.860+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Project [transaction_id#593, client_id#594, datetime#595, amount#596, currency#597, coalesce(merchant#598, cast(no_merchant as string)) AS merchant#114, transaction_type#599, category#600, country_code#601, region#602, coalesce(device_type#603, cast(unknown as string)) AS device_type#115, session_id#604, channel#605, transaction_purpose#606, ip_network#607, recipient_id_hash#608, dt_30#79]
[2025-05-08T19:30:36.861+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Project [transaction_id#593, client_id#594, datetime#595, amount#596, currency#597, merchant#598, transaction_type#599, category#600, country_code#601, region#602, device_type#603, session_id#604, channel#605, transaction_purpose#606, ip_network#607, recipient_id_hash#608, cast(date_trunc(minute, datetime#595, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.861+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Relation [transaction_id#593,client_id#594,datetime#595,amount#596,currency#597,merchant#598,transaction_type#599,category#600,country_code#601,region#602,device_type#603,session_id#604,channel#605,transaction_purpose#606,ip_network#607,recipient_id_hash#608] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.861+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.861+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.861+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.861+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.861+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.861+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#610, 0, 0) AS clients#159]
[2025-05-08T19:30:36.861+0000] {spark_submit.py:571} INFO - :        :                    :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.861+0000] {spark_submit.py:571} INFO - :        :                    :                 :                    +- Project [transaction_id#609, client_id#610, datetime#611, amount#612, currency#613, coalesce(merchant#614, cast(no_merchant as string)) AS merchant#114, transaction_type#615, category#616, country_code#617, region#618, coalesce(device_type#619, cast(unknown as string)) AS device_type#115, session_id#620, channel#621, transaction_purpose#622, ip_network#623, recipient_id_hash#624, dt_30#79]
[2025-05-08T19:30:36.861+0000] {spark_submit.py:571} INFO - :        :                    :                 :                       +- Project [transaction_id#609, client_id#610, datetime#611, amount#612, currency#613, merchant#614, transaction_type#615, category#616, country_code#617, region#618, device_type#619, session_id#620, channel#621, transaction_purpose#622, ip_network#623, recipient_id_hash#624, cast(date_trunc(minute, datetime#611, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :                          +- Relation [transaction_id#609,client_id#610,datetime#611,amount#612,currency#613,merchant#614,transaction_type#615,category#616,country_code#617,region#618,device_type#619,session_id#620,channel#621,transaction_purpose#622,ip_network#623,recipient_id_hash#624] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Project [session_id#636, clients#195, client_pairs#201]
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Aggregate [session_id#636], [session_id#636, collect_set(client_id#626, 0, 0) AS clients#195]
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :                 +- Filter isnotnull(session_id#636)
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :                    +- Project [transaction_id#625, client_id#626, datetime#627, amount#628, currency#629, coalesce(merchant#630, cast(no_merchant as string)) AS merchant#114, transaction_type#631, category#632, country_code#633, region#634, coalesce(device_type#635, cast(unknown as string)) AS device_type#115, session_id#636, channel#637, transaction_purpose#638, ip_network#639, recipient_id_hash#640, dt_30#79]
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :                       +- Project [transaction_id#625, client_id#626, datetime#627, amount#628, currency#629, merchant#630, transaction_type#631, category#632, country_code#633, region#634, device_type#635, session_id#636, channel#637, transaction_purpose#638, ip_network#639, recipient_id_hash#640, cast(date_trunc(minute, datetime#627, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :                          +- Relation [transaction_id#625,client_id#626,datetime#627,amount#628,currency#629,merchant#630,transaction_type#631,category#632,country_code#633,region#634,device_type#635,session_id#636,channel#637,transaction_purpose#638,ip_network#639,recipient_id_hash#640] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.862+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Project [ip_network#655, clients#231, client_pairs#237]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Aggregate [ip_network#655], [ip_network#655, collect_set(client_id#642, 0, 0) AS clients#231]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                 :                 +- Filter isnotnull(ip_network#655)
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                 :                    +- Project [transaction_id#641, client_id#642, datetime#643, amount#644, currency#645, coalesce(merchant#646, cast(no_merchant as string)) AS merchant#114, transaction_type#647, category#648, country_code#649, region#650, coalesce(device_type#651, cast(unknown as string)) AS device_type#115, session_id#652, channel#653, transaction_purpose#654, ip_network#655, recipient_id_hash#656, dt_30#79]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                 :                       +- Project [transaction_id#641, client_id#642, datetime#643, amount#644, currency#645, merchant#646, transaction_type#647, category#648, country_code#649, region#650, device_type#651, session_id#652, channel#653, transaction_purpose#654, ip_network#655, recipient_id_hash#656, cast(date_trunc(minute, datetime#643, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                 :                          +- Relation [transaction_id#641,client_id#642,datetime#643,amount#644,currency#645,merchant#646,transaction_type#647,category#648,country_code#649,region#650,device_type#651,session_id#652,channel#653,transaction_purpose#654,ip_network#655,recipient_id_hash#656] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#658, 0, 0) AS clients#287]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                                      +- Project [transaction_id#657, client_id#658, datetime#659, amount#660, currency#661, merchant#114, transaction_type#663, category#664, country_code#665, region#666, device_type#115, session_id#668, channel#669, transaction_purpose#670, ip_network#671, recipient_id_hash#672, dt_30#79, concat(region#666, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                                         +- Filter transaction_type#663 IN (withdrawal)
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                                            +- Project [transaction_id#657, client_id#658, datetime#659, amount#660, currency#661, coalesce(merchant#662, cast(no_merchant as string)) AS merchant#114, transaction_type#663, category#664, country_code#665, region#666, coalesce(device_type#667, cast(unknown as string)) AS device_type#115, session_id#668, channel#669, transaction_purpose#670, ip_network#671, recipient_id_hash#672, dt_30#79]
[2025-05-08T19:30:36.863+0000] {spark_submit.py:571} INFO - :        :                    :                                               +- Project [transaction_id#657, client_id#658, datetime#659, amount#660, currency#661, merchant#662, transaction_type#663, category#664, country_code#665, region#666, device_type#667, session_id#668, channel#669, transaction_purpose#670, ip_network#671, recipient_id_hash#672, cast(date_trunc(minute, datetime#659, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                    :                                                  +- Relation [transaction_id#657,client_id#658,datetime#659,amount#660,currency#661,merchant#662,transaction_type#663,category#664,country_code#665,region#666,device_type#667,session_id#668,channel#669,transaction_purpose#670,ip_network#671,recipient_id_hash#672] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                    +- Deduplicate [dst#134]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                       +- Project [dst#134]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                          +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                             +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                   +- Union false, false
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_id#674 AS src#133, recipient_id_hash#688 AS dst#134, p2p AS relationship#135, LOG1P(amount#676) AS weight#136]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Filter isnotnull(recipient_id_hash#688)
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Filter (transaction_type#679 = p2p)
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Project [transaction_id#673, client_id#674, datetime#675, amount#676, currency#677, coalesce(merchant#678, cast(no_merchant as string)) AS merchant#114, transaction_type#679, category#680, country_code#681, region#682, coalesce(device_type#683, cast(unknown as string)) AS device_type#115, session_id#684, channel#685, transaction_purpose#686, ip_network#687, recipient_id_hash#688, dt_30#79]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Project [transaction_id#673, client_id#674, datetime#675, amount#676, currency#677, merchant#678, transaction_type#679, category#680, country_code#681, region#682, device_type#683, session_id#684, channel#685, transaction_purpose#686, ip_network#687, recipient_id_hash#688, cast(date_trunc(minute, datetime#675, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Relation [transaction_id#673,client_id#674,datetime#675,amount#676,currency#677,merchant#678,transaction_type#679,category#680,country_code#681,region#682,device_type#683,session_id#684,channel#685,transaction_purpose#686,ip_network#687,recipient_id_hash#688] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.864+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#690, 0, 0) AS clients#159]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :                    +- Project [transaction_id#689, client_id#690, datetime#691, amount#692, currency#693, coalesce(merchant#694, cast(no_merchant as string)) AS merchant#114, transaction_type#695, category#696, country_code#697, region#698, coalesce(device_type#699, cast(unknown as string)) AS device_type#115, session_id#700, channel#701, transaction_purpose#702, ip_network#703, recipient_id_hash#704, dt_30#79]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :                       +- Project [transaction_id#689, client_id#690, datetime#691, amount#692, currency#693, merchant#694, transaction_type#695, category#696, country_code#697, region#698, device_type#699, session_id#700, channel#701, transaction_purpose#702, ip_network#703, recipient_id_hash#704, cast(date_trunc(minute, datetime#691, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :                          +- Relation [transaction_id#689,client_id#690,datetime#691,amount#692,currency#693,merchant#694,transaction_type#695,category#696,country_code#697,region#698,device_type#699,session_id#700,channel#701,transaction_purpose#702,ip_network#703,recipient_id_hash#704] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Project [session_id#716, clients#195, client_pairs#201]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Aggregate [session_id#716], [session_id#716, collect_set(client_id#706, 0, 0) AS clients#195]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :                 +- Filter isnotnull(session_id#716)
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :                    +- Project [transaction_id#705, client_id#706, datetime#707, amount#708, currency#709, coalesce(merchant#710, cast(no_merchant as string)) AS merchant#114, transaction_type#711, category#712, country_code#713, region#714, coalesce(device_type#715, cast(unknown as string)) AS device_type#115, session_id#716, channel#717, transaction_purpose#718, ip_network#719, recipient_id_hash#720, dt_30#79]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :                       +- Project [transaction_id#705, client_id#706, datetime#707, amount#708, currency#709, merchant#710, transaction_type#711, category#712, country_code#713, region#714, device_type#715, session_id#716, channel#717, transaction_purpose#718, ip_network#719, recipient_id_hash#720, cast(date_trunc(minute, datetime#707, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :                          +- Relation [transaction_id#705,client_id#706,datetime#707,amount#708,currency#709,merchant#710,transaction_type#711,category#712,country_code#713,region#714,device_type#715,session_id#716,channel#717,transaction_purpose#718,ip_network#719,recipient_id_hash#720] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Project [ip_network#735, clients#231, client_pairs#237]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.865+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Aggregate [ip_network#735], [ip_network#735, collect_set(client_id#722, 0, 0) AS clients#231]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                      :                 +- Filter isnotnull(ip_network#735)
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                      :                    +- Project [transaction_id#721, client_id#722, datetime#723, amount#724, currency#725, coalesce(merchant#726, cast(no_merchant as string)) AS merchant#114, transaction_type#727, category#728, country_code#729, region#730, coalesce(device_type#731, cast(unknown as string)) AS device_type#115, session_id#732, channel#733, transaction_purpose#734, ip_network#735, recipient_id_hash#736, dt_30#79]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                      :                       +- Project [transaction_id#721, client_id#722, datetime#723, amount#724, currency#725, merchant#726, transaction_type#727, category#728, country_code#729, region#730, device_type#731, session_id#732, channel#733, transaction_purpose#734, ip_network#735, recipient_id_hash#736, cast(date_trunc(minute, datetime#723, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                      :                          +- Relation [transaction_id#721,client_id#722,datetime#723,amount#724,currency#725,merchant#726,transaction_type#727,category#728,country_code#729,region#730,device_type#731,session_id#732,channel#733,transaction_purpose#734,ip_network#735,recipient_id_hash#736] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                      +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                         +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                            +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                               +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                                  +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                                     +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#738, 0, 0) AS clients#287]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                                        +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                                           +- Project [transaction_id#737, client_id#738, datetime#739, amount#740, currency#741, merchant#114, transaction_type#743, category#744, country_code#745, region#746, device_type#115, session_id#748, channel#749, transaction_purpose#750, ip_network#751, recipient_id_hash#752, dt_30#79, concat(region#746, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                                              +- Filter transaction_type#743 IN (withdrawal)
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                                                 +- Project [transaction_id#737, client_id#738, datetime#739, amount#740, currency#741, coalesce(merchant#742, cast(no_merchant as string)) AS merchant#114, transaction_type#743, category#744, country_code#745, region#746, coalesce(device_type#747, cast(unknown as string)) AS device_type#115, session_id#748, channel#749, transaction_purpose#750, ip_network#751, recipient_id_hash#752, dt_30#79]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                                                    +- Project [transaction_id#737, client_id#738, datetime#739, amount#740, currency#741, merchant#742, transaction_type#743, category#744, country_code#745, region#746, device_type#747, session_id#748, channel#749, transaction_purpose#750, ip_network#751, recipient_id_hash#752, cast(date_trunc(minute, datetime#739, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        :                                                                       +- Relation [transaction_id#737,client_id#738,datetime#739,amount#740,currency#741,merchant#742,transaction_type#743,category#744,country_code#745,region#746,device_type#747,session_id#748,channel#749,transaction_purpose#750,ip_network#751,recipient_id_hash#752] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :        +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.866+0000] {spark_submit.py:571} INFO - :           +- Deduplicate [src#133]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :              +- Union false, false
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :- Deduplicate [src#133]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :  +- Project [src#133]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :              +- Union false, false
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_id#767 AS src#133, recipient_id_hash#781 AS dst#134, p2p AS relationship#135, LOG1P(amount#769) AS weight#136]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Filter isnotnull(recipient_id_hash#781)
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Filter (transaction_type#772 = p2p)
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Project [transaction_id#766, client_id#767, datetime#768, amount#769, currency#770, coalesce(merchant#771, cast(no_merchant as string)) AS merchant#114, transaction_type#772, category#773, country_code#774, region#775, coalesce(device_type#776, cast(unknown as string)) AS device_type#115, session_id#777, channel#778, transaction_purpose#779, ip_network#780, recipient_id_hash#781, dt_30#79]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Project [transaction_id#766, client_id#767, datetime#768, amount#769, currency#770, merchant#771, transaction_type#772, category#773, country_code#774, region#775, device_type#776, session_id#777, channel#778, transaction_purpose#779, ip_network#780, recipient_id_hash#781, cast(date_trunc(minute, datetime#768, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Relation [transaction_id#766,client_id#767,datetime#768,amount#769,currency#770,merchant#771,transaction_type#772,category#773,country_code#774,region#775,device_type#776,session_id#777,channel#778,transaction_purpose#779,ip_network#780,recipient_id_hash#781] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.867+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#783, 0, 0) AS clients#159]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :                    +- Project [transaction_id#782, client_id#783, datetime#784, amount#785, currency#786, coalesce(merchant#787, cast(no_merchant as string)) AS merchant#114, transaction_type#788, category#789, country_code#790, region#791, coalesce(device_type#792, cast(unknown as string)) AS device_type#115, session_id#793, channel#794, transaction_purpose#795, ip_network#796, recipient_id_hash#797, dt_30#79]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :                       +- Project [transaction_id#782, client_id#783, datetime#784, amount#785, currency#786, merchant#787, transaction_type#788, category#789, country_code#790, region#791, device_type#792, session_id#793, channel#794, transaction_purpose#795, ip_network#796, recipient_id_hash#797, cast(date_trunc(minute, datetime#784, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :                          +- Relation [transaction_id#782,client_id#783,datetime#784,amount#785,currency#786,merchant#787,transaction_type#788,category#789,country_code#790,region#791,device_type#792,session_id#793,channel#794,transaction_purpose#795,ip_network#796,recipient_id_hash#797] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Project [session_id#809, clients#195, client_pairs#201]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Aggregate [session_id#809], [session_id#809, collect_set(client_id#799, 0, 0) AS clients#195]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :                 +- Filter isnotnull(session_id#809)
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :                    +- Project [transaction_id#798, client_id#799, datetime#800, amount#801, currency#802, coalesce(merchant#803, cast(no_merchant as string)) AS merchant#114, transaction_type#804, category#805, country_code#806, region#807, coalesce(device_type#808, cast(unknown as string)) AS device_type#115, session_id#809, channel#810, transaction_purpose#811, ip_network#812, recipient_id_hash#813, dt_30#79]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :                       +- Project [transaction_id#798, client_id#799, datetime#800, amount#801, currency#802, merchant#803, transaction_type#804, category#805, country_code#806, region#807, device_type#808, session_id#809, channel#810, transaction_purpose#811, ip_network#812, recipient_id_hash#813, cast(date_trunc(minute, datetime#800, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :                          +- Relation [transaction_id#798,client_id#799,datetime#800,amount#801,currency#802,merchant#803,transaction_type#804,category#805,country_code#806,region#807,device_type#808,session_id#809,channel#810,transaction_purpose#811,ip_network#812,recipient_id_hash#813] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Project [ip_network#828, clients#231, client_pairs#237]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.868+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Aggregate [ip_network#828], [ip_network#828, collect_set(client_id#815, 0, 0) AS clients#231]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                 :                 +- Filter isnotnull(ip_network#828)
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                 :                    +- Project [transaction_id#814, client_id#815, datetime#816, amount#817, currency#818, coalesce(merchant#819, cast(no_merchant as string)) AS merchant#114, transaction_type#820, category#821, country_code#822, region#823, coalesce(device_type#824, cast(unknown as string)) AS device_type#115, session_id#825, channel#826, transaction_purpose#827, ip_network#828, recipient_id_hash#829, dt_30#79]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                 :                       +- Project [transaction_id#814, client_id#815, datetime#816, amount#817, currency#818, merchant#819, transaction_type#820, category#821, country_code#822, region#823, device_type#824, session_id#825, channel#826, transaction_purpose#827, ip_network#828, recipient_id_hash#829, cast(date_trunc(minute, datetime#816, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                 :                          +- Relation [transaction_id#814,client_id#815,datetime#816,amount#817,currency#818,merchant#819,transaction_type#820,category#821,country_code#822,region#823,device_type#824,session_id#825,channel#826,transaction_purpose#827,ip_network#828,recipient_id_hash#829] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#831, 0, 0) AS clients#287]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                                      +- Project [transaction_id#830, client_id#831, datetime#832, amount#833, currency#834, merchant#114, transaction_type#836, category#837, country_code#838, region#839, device_type#115, session_id#841, channel#842, transaction_purpose#843, ip_network#844, recipient_id_hash#845, dt_30#79, concat(region#839, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                                         +- Filter transaction_type#836 IN (withdrawal)
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                                            +- Project [transaction_id#830, client_id#831, datetime#832, amount#833, currency#834, coalesce(merchant#835, cast(no_merchant as string)) AS merchant#114, transaction_type#836, category#837, country_code#838, region#839, coalesce(device_type#840, cast(unknown as string)) AS device_type#115, session_id#841, channel#842, transaction_purpose#843, ip_network#844, recipient_id_hash#845, dt_30#79]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                                               +- Project [transaction_id#830, client_id#831, datetime#832, amount#833, currency#834, merchant#835, transaction_type#836, category#837, country_code#838, region#839, device_type#840, session_id#841, channel#842, transaction_purpose#843, ip_network#844, recipient_id_hash#845, cast(date_trunc(minute, datetime#832, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 :                                                  +- Relation [transaction_id#830,client_id#831,datetime#832,amount#833,currency#834,merchant#835,transaction_type#836,category#837,country_code#838,region#839,device_type#840,session_id#841,channel#842,transaction_purpose#843,ip_network#844,recipient_id_hash#845] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                 +- Deduplicate [dst#134]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                    +- Project [dst#134]
[2025-05-08T19:30:36.869+0000] {spark_submit.py:571} INFO - :                       +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                          +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                             +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                +- Union false, false
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_id#847 AS src#133, recipient_id_hash#861 AS dst#134, p2p AS relationship#135, LOG1P(amount#849) AS weight#136]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :  +- Filter isnotnull(recipient_id_hash#861)
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :     +- Filter (transaction_type#852 = p2p)
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :        +- Project [transaction_id#846, client_id#847, datetime#848, amount#849, currency#850, coalesce(merchant#851, cast(no_merchant as string)) AS merchant#114, transaction_type#852, category#853, country_code#854, region#855, coalesce(device_type#856, cast(unknown as string)) AS device_type#115, session_id#857, channel#858, transaction_purpose#859, ip_network#860, recipient_id_hash#861, dt_30#79]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :           +- Project [transaction_id#846, client_id#847, datetime#848, amount#849, currency#850, merchant#851, transaction_type#852, category#853, country_code#854, region#855, device_type#856, session_id#857, channel#858, transaction_purpose#859, ip_network#860, recipient_id_hash#861, cast(date_trunc(minute, datetime#848, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :              +- Relation [transaction_id#846,client_id#847,datetime#848,amount#849,currency#850,merchant#851,transaction_type#852,category#853,country_code#854,region#855,device_type#856,session_id#857,channel#858,transaction_purpose#859,ip_network#860,recipient_id_hash#861] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#863, 0, 0) AS clients#159]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :                    +- Project [transaction_id#862, client_id#863, datetime#864, amount#865, currency#866, coalesce(merchant#867, cast(no_merchant as string)) AS merchant#114, transaction_type#868, category#869, country_code#870, region#871, coalesce(device_type#872, cast(unknown as string)) AS device_type#115, session_id#873, channel#874, transaction_purpose#875, ip_network#876, recipient_id_hash#877, dt_30#79]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :                       +- Project [transaction_id#862, client_id#863, datetime#864, amount#865, currency#866, merchant#867, transaction_type#868, category#869, country_code#870, region#871, device_type#872, session_id#873, channel#874, transaction_purpose#875, ip_network#876, recipient_id_hash#877, cast(date_trunc(minute, datetime#864, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.870+0000] {spark_submit.py:571} INFO - :                                   :                          +- Relation [transaction_id#862,client_id#863,datetime#864,amount#865,currency#866,merchant#867,transaction_type#868,category#869,country_code#870,region#871,device_type#872,session_id#873,channel#874,transaction_purpose#875,ip_network#876,recipient_id_hash#877] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :  +- Project [session_id#889, clients#195, client_pairs#201]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :              +- Aggregate [session_id#889], [session_id#889, collect_set(client_id#879, 0, 0) AS clients#195]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :                 +- Filter isnotnull(session_id#889)
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :                    +- Project [transaction_id#878, client_id#879, datetime#880, amount#881, currency#882, coalesce(merchant#883, cast(no_merchant as string)) AS merchant#114, transaction_type#884, category#885, country_code#886, region#887, coalesce(device_type#888, cast(unknown as string)) AS device_type#115, session_id#889, channel#890, transaction_purpose#891, ip_network#892, recipient_id_hash#893, dt_30#79]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :                       +- Project [transaction_id#878, client_id#879, datetime#880, amount#881, currency#882, merchant#883, transaction_type#884, category#885, country_code#886, region#887, device_type#888, session_id#889, channel#890, transaction_purpose#891, ip_network#892, recipient_id_hash#893, cast(date_trunc(minute, datetime#880, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :                          +- Relation [transaction_id#878,client_id#879,datetime#880,amount#881,currency#882,merchant#883,transaction_type#884,category#885,country_code#886,region#887,device_type#888,session_id#889,channel#890,transaction_purpose#891,ip_network#892,recipient_id_hash#893] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :  +- Project [ip_network#908, clients#231, client_pairs#237]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :              +- Aggregate [ip_network#908], [ip_network#908, collect_set(client_id#895, 0, 0) AS clients#231]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :                 +- Filter isnotnull(ip_network#908)
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :                    +- Project [transaction_id#894, client_id#895, datetime#896, amount#897, currency#898, coalesce(merchant#899, cast(no_merchant as string)) AS merchant#114, transaction_type#900, category#901, country_code#902, region#903, coalesce(device_type#904, cast(unknown as string)) AS device_type#115, session_id#905, channel#906, transaction_purpose#907, ip_network#908, recipient_id_hash#909, dt_30#79]
[2025-05-08T19:30:36.871+0000] {spark_submit.py:571} INFO - :                                   :                       +- Project [transaction_id#894, client_id#895, datetime#896, amount#897, currency#898, merchant#899, transaction_type#900, category#901, country_code#902, region#903, device_type#904, session_id#905, channel#906, transaction_purpose#907, ip_network#908, recipient_id_hash#909, cast(date_trunc(minute, datetime#896, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                   :                          +- Relation [transaction_id#894,client_id#895,datetime#896,amount#897,currency#898,merchant#899,transaction_type#900,category#901,country_code#902,region#903,device_type#904,session_id#905,channel#906,transaction_purpose#907,ip_network#908,recipient_id_hash#909] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                   +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                      +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                         +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                            +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                               +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                                  +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#911, 0, 0) AS clients#287]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                                     +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                                        +- Project [transaction_id#910, client_id#911, datetime#912, amount#913, currency#914, merchant#114, transaction_type#916, category#917, country_code#918, region#919, device_type#115, session_id#921, channel#922, transaction_purpose#923, ip_network#924, recipient_id_hash#925, dt_30#79, concat(region#919, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                                           +- Filter transaction_type#916 IN (withdrawal)
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                                              +- Project [transaction_id#910, client_id#911, datetime#912, amount#913, currency#914, coalesce(merchant#915, cast(no_merchant as string)) AS merchant#114, transaction_type#916, category#917, country_code#918, region#919, coalesce(device_type#920, cast(unknown as string)) AS device_type#115, session_id#921, channel#922, transaction_purpose#923, ip_network#924, recipient_id_hash#925, dt_30#79]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                                                 +- Project [transaction_id#910, client_id#911, datetime#912, amount#913, currency#914, merchant#915, transaction_type#916, category#917, country_code#918, region#919, device_type#920, session_id#921, channel#922, transaction_purpose#923, ip_network#924, recipient_id_hash#925, cast(date_trunc(minute, datetime#912, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :                                                                    +- Relation [transaction_id#910,client_id#911,datetime#912,amount#913,currency#914,merchant#915,transaction_type#916,category#917,country_code#918,region#919,device_type#920,session_id#921,channel#922,transaction_purpose#923,ip_network#924,recipient_id_hash#925] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - +- Project [MSG#930, id#931]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - +- Project [id#931, MSG#930]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - +- Join Inner, (id#931 = id#486)
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :- Project [edge#499.weight AS MSG#930, dst#503.id AS id#931]
[2025-05-08T19:30:36.872+0000] {spark_submit.py:571} INFO - :  +- Project [src#501, edge#499, dst#503]
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :     +- Join Inner, (edge#499.dst = dst#503.id)
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :- Join Inner, (edge#499.src = src#501.id)
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :- Project [struct(src, src#133, dst, dst#134, weight, weight#390, relationships, relationships#392, relationships_str, relationships_str#397) AS edge#499]
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :  +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :     +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :        +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :           +- Union false, false
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_id#1099 AS src#133, recipient_id_hash#1113 AS dst#134, p2p AS relationship#135, LOG1P(amount#1101) AS weight#136]
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Filter isnotnull(recipient_id_hash#1113)
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Filter (transaction_type#1104 = p2p)
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Project [transaction_id#1098, client_id#1099, datetime#1100, amount#1101, currency#1102, coalesce(merchant#1103, cast(no_merchant as string)) AS merchant#114, transaction_type#1104, category#1105, country_code#1106, region#1107, coalesce(device_type#1108, cast(unknown as string)) AS device_type#115, session_id#1109, channel#1110, transaction_purpose#1111, ip_network#1112, recipient_id_hash#1113, dt_30#79]
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Project [transaction_id#1098, client_id#1099, datetime#1100, amount#1101, currency#1102, merchant#1103, transaction_type#1104, category#1105, country_code#1106, region#1107, device_type#1108, session_id#1109, channel#1110, transaction_purpose#1111, ip_network#1112, recipient_id_hash#1113, cast(date_trunc(minute, datetime#1100, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Relation [transaction_id#1098,client_id#1099,datetime#1100,amount#1101,currency#1102,merchant#1103,transaction_type#1104,category#1105,country_code#1106,region#1107,device_type#1108,session_id#1109,channel#1110,transaction_purpose#1111,ip_network#1112,recipient_id_hash#1113] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.873+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1115, 0, 0) AS clients#159]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :                    +- Project [transaction_id#1114, client_id#1115, datetime#1116, amount#1117, currency#1118, coalesce(merchant#1119, cast(no_merchant as string)) AS merchant#114, transaction_type#1120, category#1121, country_code#1122, region#1123, coalesce(device_type#1124, cast(unknown as string)) AS device_type#115, session_id#1125, channel#1126, transaction_purpose#1127, ip_network#1128, recipient_id_hash#1129, dt_30#79]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :                       +- Project [transaction_id#1114, client_id#1115, datetime#1116, amount#1117, currency#1118, merchant#1119, transaction_type#1120, category#1121, country_code#1122, region#1123, device_type#1124, session_id#1125, channel#1126, transaction_purpose#1127, ip_network#1128, recipient_id_hash#1129, cast(date_trunc(minute, datetime#1116, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :                          +- Relation [transaction_id#1114,client_id#1115,datetime#1116,amount#1117,currency#1118,merchant#1119,transaction_type#1120,category#1121,country_code#1122,region#1123,device_type#1124,session_id#1125,channel#1126,transaction_purpose#1127,ip_network#1128,recipient_id_hash#1129] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Project [session_id#1141, clients#195, client_pairs#201]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Aggregate [session_id#1141], [session_id#1141, collect_set(client_id#1131, 0, 0) AS clients#195]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :                 +- Filter isnotnull(session_id#1141)
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :                    +- Project [transaction_id#1130, client_id#1131, datetime#1132, amount#1133, currency#1134, coalesce(merchant#1135, cast(no_merchant as string)) AS merchant#114, transaction_type#1136, category#1137, country_code#1138, region#1139, coalesce(device_type#1140, cast(unknown as string)) AS device_type#115, session_id#1141, channel#1142, transaction_purpose#1143, ip_network#1144, recipient_id_hash#1145, dt_30#79]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :                       +- Project [transaction_id#1130, client_id#1131, datetime#1132, amount#1133, currency#1134, merchant#1135, transaction_type#1136, category#1137, country_code#1138, region#1139, device_type#1140, session_id#1141, channel#1142, transaction_purpose#1143, ip_network#1144, recipient_id_hash#1145, cast(date_trunc(minute, datetime#1132, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :                          +- Relation [transaction_id#1130,client_id#1131,datetime#1132,amount#1133,currency#1134,merchant#1135,transaction_type#1136,category#1137,country_code#1138,region#1139,device_type#1140,session_id#1141,channel#1142,transaction_purpose#1143,ip_network#1144,recipient_id_hash#1145] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Project [ip_network#1160, clients#231, client_pairs#237]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.874+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Aggregate [ip_network#1160], [ip_network#1160, collect_set(client_id#1147, 0, 0) AS clients#231]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :              :                 +- Filter isnotnull(ip_network#1160)
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :              :                    +- Project [transaction_id#1146, client_id#1147, datetime#1148, amount#1149, currency#1150, coalesce(merchant#1151, cast(no_merchant as string)) AS merchant#114, transaction_type#1152, category#1153, country_code#1154, region#1155, coalesce(device_type#1156, cast(unknown as string)) AS device_type#115, session_id#1157, channel#1158, transaction_purpose#1159, ip_network#1160, recipient_id_hash#1161, dt_30#79]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :              :                       +- Project [transaction_id#1146, client_id#1147, datetime#1148, amount#1149, currency#1150, merchant#1151, transaction_type#1152, category#1153, country_code#1154, region#1155, device_type#1156, session_id#1157, channel#1158, transaction_purpose#1159, ip_network#1160, recipient_id_hash#1161, cast(date_trunc(minute, datetime#1148, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :              :                          +- Relation [transaction_id#1146,client_id#1147,datetime#1148,amount#1149,currency#1150,merchant#1151,transaction_type#1152,category#1153,country_code#1154,region#1155,device_type#1156,session_id#1157,channel#1158,transaction_purpose#1159,ip_network#1160,recipient_id_hash#1161] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :              +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :                 +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :                    +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :                       +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :                          +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :                             +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1163, 0, 0) AS clients#287]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :                                +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :                                   +- Project [transaction_id#1162, client_id#1163, datetime#1164, amount#1165, currency#1166, merchant#114, transaction_type#1168, category#1169, country_code#1170, region#1171, device_type#115, session_id#1173, channel#1174, transaction_purpose#1175, ip_network#1176, recipient_id_hash#1177, dt_30#79, concat(region#1171, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :                                      +- Filter transaction_type#1168 IN (withdrawal)
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :                                         +- Project [transaction_id#1162, client_id#1163, datetime#1164, amount#1165, currency#1166, coalesce(merchant#1167, cast(no_merchant as string)) AS merchant#114, transaction_type#1168, category#1169, country_code#1170, region#1171, coalesce(device_type#1172, cast(unknown as string)) AS device_type#115, session_id#1173, channel#1174, transaction_purpose#1175, ip_network#1176, recipient_id_hash#1177, dt_30#79]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :                                            +- Project [transaction_id#1162, client_id#1163, datetime#1164, amount#1165, currency#1166, merchant#1167, transaction_type#1168, category#1169, country_code#1170, region#1171, device_type#1172, session_id#1173, channel#1174, transaction_purpose#1175, ip_network#1176, recipient_id_hash#1177, cast(date_trunc(minute, datetime#1164, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  :                                               +- Relation [transaction_id#1162,client_id#1163,datetime#1164,amount#1165,currency#1166,merchant#1167,transaction_type#1168,category#1169,country_code#1170,region#1171,device_type#1172,session_id#1173,channel#1174,transaction_purpose#1175,ip_network#1176,recipient_id_hash#1177] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.875+0000] {spark_submit.py:571} INFO - :        :  +- Project [struct(id, id#486) AS src#501]
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :     +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :        +- Deduplicate [src#133]
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :           +- Union false, false
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :              :- Deduplicate [src#133]
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :              :  +- Project [src#133]
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :              :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :              :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :              :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :              :              +- Union false, false
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_id#1179 AS src#133, recipient_id_hash#1193 AS dst#134, p2p AS relationship#135, LOG1P(amount#1181) AS weight#136]
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Filter isnotnull(recipient_id_hash#1193)
[2025-05-08T19:30:36.876+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Filter (transaction_type#1184 = p2p)
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Project [transaction_id#1178, client_id#1179, datetime#1180, amount#1181, currency#1182, coalesce(merchant#1183, cast(no_merchant as string)) AS merchant#114, transaction_type#1184, category#1185, country_code#1186, region#1187, coalesce(device_type#1188, cast(unknown as string)) AS device_type#115, session_id#1189, channel#1190, transaction_purpose#1191, ip_network#1192, recipient_id_hash#1193, dt_30#79]
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Project [transaction_id#1178, client_id#1179, datetime#1180, amount#1181, currency#1182, merchant#1183, transaction_type#1184, category#1185, country_code#1186, region#1187, device_type#1188, session_id#1189, channel#1190, transaction_purpose#1191, ip_network#1192, recipient_id_hash#1193, cast(date_trunc(minute, datetime#1180, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Relation [transaction_id#1178,client_id#1179,datetime#1180,amount#1181,currency#1182,merchant#1183,transaction_type#1184,category#1185,country_code#1186,region#1187,device_type#1188,session_id#1189,channel#1190,transaction_purpose#1191,ip_network#1192,recipient_id_hash#1193] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1195, 0, 0) AS clients#159]
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :                    +- Project [transaction_id#1194, client_id#1195, datetime#1196, amount#1197, currency#1198, coalesce(merchant#1199, cast(no_merchant as string)) AS merchant#114, transaction_type#1200, category#1201, country_code#1202, region#1203, coalesce(device_type#1204, cast(unknown as string)) AS device_type#115, session_id#1205, channel#1206, transaction_purpose#1207, ip_network#1208, recipient_id_hash#1209, dt_30#79]
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :                       +- Project [transaction_id#1194, client_id#1195, datetime#1196, amount#1197, currency#1198, merchant#1199, transaction_type#1200, category#1201, country_code#1202, region#1203, device_type#1204, session_id#1205, channel#1206, transaction_purpose#1207, ip_network#1208, recipient_id_hash#1209, cast(date_trunc(minute, datetime#1196, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :                          +- Relation [transaction_id#1194,client_id#1195,datetime#1196,amount#1197,currency#1198,merchant#1199,transaction_type#1200,category#1201,country_code#1202,region#1203,device_type#1204,session_id#1205,channel#1206,transaction_purpose#1207,ip_network#1208,recipient_id_hash#1209] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.877+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Project [session_id#1221, clients#195, client_pairs#201]
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Aggregate [session_id#1221], [session_id#1221, collect_set(client_id#1211, 0, 0) AS clients#195]
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :                 +- Filter isnotnull(session_id#1221)
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :                    +- Project [transaction_id#1210, client_id#1211, datetime#1212, amount#1213, currency#1214, coalesce(merchant#1215, cast(no_merchant as string)) AS merchant#114, transaction_type#1216, category#1217, country_code#1218, region#1219, coalesce(device_type#1220, cast(unknown as string)) AS device_type#115, session_id#1221, channel#1222, transaction_purpose#1223, ip_network#1224, recipient_id_hash#1225, dt_30#79]
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :                       +- Project [transaction_id#1210, client_id#1211, datetime#1212, amount#1213, currency#1214, merchant#1215, transaction_type#1216, category#1217, country_code#1218, region#1219, device_type#1220, session_id#1221, channel#1222, transaction_purpose#1223, ip_network#1224, recipient_id_hash#1225, cast(date_trunc(minute, datetime#1212, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :                          +- Relation [transaction_id#1210,client_id#1211,datetime#1212,amount#1213,currency#1214,merchant#1215,transaction_type#1216,category#1217,country_code#1218,region#1219,device_type#1220,session_id#1221,channel#1222,transaction_purpose#1223,ip_network#1224,recipient_id_hash#1225] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Project [ip_network#1240, clients#231, client_pairs#237]
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Aggregate [ip_network#1240], [ip_network#1240, collect_set(client_id#1227, 0, 0) AS clients#231]
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :                 +- Filter isnotnull(ip_network#1240)
[2025-05-08T19:30:36.878+0000] {spark_submit.py:571} INFO - :        :              :                 :                    +- Project [transaction_id#1226, client_id#1227, datetime#1228, amount#1229, currency#1230, coalesce(merchant#1231, cast(no_merchant as string)) AS merchant#114, transaction_type#1232, category#1233, country_code#1234, region#1235, coalesce(device_type#1236, cast(unknown as string)) AS device_type#115, session_id#1237, channel#1238, transaction_purpose#1239, ip_network#1240, recipient_id_hash#1241, dt_30#79]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                 :                       +- Project [transaction_id#1226, client_id#1227, datetime#1228, amount#1229, currency#1230, merchant#1231, transaction_type#1232, category#1233, country_code#1234, region#1235, device_type#1236, session_id#1237, channel#1238, transaction_purpose#1239, ip_network#1240, recipient_id_hash#1241, cast(date_trunc(minute, datetime#1228, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                 :                          +- Relation [transaction_id#1226,client_id#1227,datetime#1228,amount#1229,currency#1230,merchant#1231,transaction_type#1232,category#1233,country_code#1234,region#1235,device_type#1236,session_id#1237,channel#1238,transaction_purpose#1239,ip_network#1240,recipient_id_hash#1241] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1243, 0, 0) AS clients#287]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                                      +- Project [transaction_id#1242, client_id#1243, datetime#1244, amount#1245, currency#1246, merchant#114, transaction_type#1248, category#1249, country_code#1250, region#1251, device_type#115, session_id#1253, channel#1254, transaction_purpose#1255, ip_network#1256, recipient_id_hash#1257, dt_30#79, concat(region#1251, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                                         +- Filter transaction_type#1248 IN (withdrawal)
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                                            +- Project [transaction_id#1242, client_id#1243, datetime#1244, amount#1245, currency#1246, coalesce(merchant#1247, cast(no_merchant as string)) AS merchant#114, transaction_type#1248, category#1249, country_code#1250, region#1251, coalesce(device_type#1252, cast(unknown as string)) AS device_type#115, session_id#1253, channel#1254, transaction_purpose#1255, ip_network#1256, recipient_id_hash#1257, dt_30#79]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                                               +- Project [transaction_id#1242, client_id#1243, datetime#1244, amount#1245, currency#1246, merchant#1247, transaction_type#1248, category#1249, country_code#1250, region#1251, device_type#1252, session_id#1253, channel#1254, transaction_purpose#1255, ip_network#1256, recipient_id_hash#1257, cast(date_trunc(minute, datetime#1244, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              :                                                  +- Relation [transaction_id#1242,client_id#1243,datetime#1244,amount#1245,currency#1246,merchant#1247,transaction_type#1248,category#1249,country_code#1250,region#1251,device_type#1252,session_id#1253,channel#1254,transaction_purpose#1255,ip_network#1256,recipient_id_hash#1257] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :              +- Deduplicate [dst#134]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :                 +- Project [dst#134]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :                    +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :                       +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.879+0000] {spark_submit.py:571} INFO - :        :                          +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                             +- Union false, false
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_id#1259 AS src#133, recipient_id_hash#1273 AS dst#134, p2p AS relationship#135, LOG1P(amount#1261) AS weight#136]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :  +- Filter isnotnull(recipient_id_hash#1273)
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :     +- Filter (transaction_type#1264 = p2p)
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :        +- Project [transaction_id#1258, client_id#1259, datetime#1260, amount#1261, currency#1262, coalesce(merchant#1263, cast(no_merchant as string)) AS merchant#114, transaction_type#1264, category#1265, country_code#1266, region#1267, coalesce(device_type#1268, cast(unknown as string)) AS device_type#115, session_id#1269, channel#1270, transaction_purpose#1271, ip_network#1272, recipient_id_hash#1273, dt_30#79]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :           +- Project [transaction_id#1258, client_id#1259, datetime#1260, amount#1261, currency#1262, merchant#1263, transaction_type#1264, category#1265, country_code#1266, region#1267, device_type#1268, session_id#1269, channel#1270, transaction_purpose#1271, ip_network#1272, recipient_id_hash#1273, cast(date_trunc(minute, datetime#1260, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :              +- Relation [transaction_id#1258,client_id#1259,datetime#1260,amount#1261,currency#1262,merchant#1263,transaction_type#1264,category#1265,country_code#1266,region#1267,device_type#1268,session_id#1269,channel#1270,transaction_purpose#1271,ip_network#1272,recipient_id_hash#1273] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1275, 0, 0) AS clients#159]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :                    +- Project [transaction_id#1274, client_id#1275, datetime#1276, amount#1277, currency#1278, coalesce(merchant#1279, cast(no_merchant as string)) AS merchant#114, transaction_type#1280, category#1281, country_code#1282, region#1283, coalesce(device_type#1284, cast(unknown as string)) AS device_type#115, session_id#1285, channel#1286, transaction_purpose#1287, ip_network#1288, recipient_id_hash#1289, dt_30#79]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :                       +- Project [transaction_id#1274, client_id#1275, datetime#1276, amount#1277, currency#1278, merchant#1279, transaction_type#1280, category#1281, country_code#1282, region#1283, device_type#1284, session_id#1285, channel#1286, transaction_purpose#1287, ip_network#1288, recipient_id_hash#1289, cast(date_trunc(minute, datetime#1276, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :                          +- Relation [transaction_id#1274,client_id#1275,datetime#1276,amount#1277,currency#1278,merchant#1279,transaction_type#1280,category#1281,country_code#1282,region#1283,device_type#1284,session_id#1285,channel#1286,transaction_purpose#1287,ip_network#1288,recipient_id_hash#1289] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.880+0000] {spark_submit.py:571} INFO - :        :                                :  +- Project [session_id#1301, clients#195, client_pairs#201]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :              +- Aggregate [session_id#1301], [session_id#1301, collect_set(client_id#1291, 0, 0) AS clients#195]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :                 +- Filter isnotnull(session_id#1301)
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :                    +- Project [transaction_id#1290, client_id#1291, datetime#1292, amount#1293, currency#1294, coalesce(merchant#1295, cast(no_merchant as string)) AS merchant#114, transaction_type#1296, category#1297, country_code#1298, region#1299, coalesce(device_type#1300, cast(unknown as string)) AS device_type#115, session_id#1301, channel#1302, transaction_purpose#1303, ip_network#1304, recipient_id_hash#1305, dt_30#79]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :                       +- Project [transaction_id#1290, client_id#1291, datetime#1292, amount#1293, currency#1294, merchant#1295, transaction_type#1296, category#1297, country_code#1298, region#1299, device_type#1300, session_id#1301, channel#1302, transaction_purpose#1303, ip_network#1304, recipient_id_hash#1305, cast(date_trunc(minute, datetime#1292, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :                          +- Relation [transaction_id#1290,client_id#1291,datetime#1292,amount#1293,currency#1294,merchant#1295,transaction_type#1296,category#1297,country_code#1298,region#1299,device_type#1300,session_id#1301,channel#1302,transaction_purpose#1303,ip_network#1304,recipient_id_hash#1305] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :  +- Project [ip_network#1320, clients#231, client_pairs#237]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :              +- Aggregate [ip_network#1320], [ip_network#1320, collect_set(client_id#1307, 0, 0) AS clients#231]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :                 +- Filter isnotnull(ip_network#1320)
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :                    +- Project [transaction_id#1306, client_id#1307, datetime#1308, amount#1309, currency#1310, coalesce(merchant#1311, cast(no_merchant as string)) AS merchant#114, transaction_type#1312, category#1313, country_code#1314, region#1315, coalesce(device_type#1316, cast(unknown as string)) AS device_type#115, session_id#1317, channel#1318, transaction_purpose#1319, ip_network#1320, recipient_id_hash#1321, dt_30#79]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :                       +- Project [transaction_id#1306, client_id#1307, datetime#1308, amount#1309, currency#1310, merchant#1311, transaction_type#1312, category#1313, country_code#1314, region#1315, device_type#1316, session_id#1317, channel#1318, transaction_purpose#1319, ip_network#1320, recipient_id_hash#1321, cast(date_trunc(minute, datetime#1308, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                :                          +- Relation [transaction_id#1306,client_id#1307,datetime#1308,amount#1309,currency#1310,merchant#1311,transaction_type#1312,category#1313,country_code#1314,region#1315,device_type#1316,session_id#1317,channel#1318,transaction_purpose#1319,ip_network#1320,recipient_id_hash#1321] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.881+0000] {spark_submit.py:571} INFO - :        :                                +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        :                                   +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        :                                      +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        :                                         +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        :                                            +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        :                                               +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1323, 0, 0) AS clients#287]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        :                                                  +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        :                                                     +- Project [transaction_id#1322, client_id#1323, datetime#1324, amount#1325, currency#1326, merchant#114, transaction_type#1328, category#1329, country_code#1330, region#1331, device_type#115, session_id#1333, channel#1334, transaction_purpose#1335, ip_network#1336, recipient_id_hash#1337, dt_30#79, concat(region#1331, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        :                                                        +- Filter transaction_type#1328 IN (withdrawal)
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        :                                                           +- Project [transaction_id#1322, client_id#1323, datetime#1324, amount#1325, currency#1326, coalesce(merchant#1327, cast(no_merchant as string)) AS merchant#114, transaction_type#1328, category#1329, country_code#1330, region#1331, coalesce(device_type#1332, cast(unknown as string)) AS device_type#115, session_id#1333, channel#1334, transaction_purpose#1335, ip_network#1336, recipient_id_hash#1337, dt_30#79]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        :                                                              +- Project [transaction_id#1322, client_id#1323, datetime#1324, amount#1325, currency#1326, merchant#1327, transaction_type#1328, category#1329, country_code#1330, region#1331, device_type#1332, session_id#1333, channel#1334, transaction_purpose#1335, ip_network#1336, recipient_id_hash#1337, cast(date_trunc(minute, datetime#1324, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        :                                                                 +- Relation [transaction_id#1322,client_id#1323,datetime#1324,amount#1325,currency#1326,merchant#1327,transaction_type#1328,category#1329,country_code#1330,region#1331,device_type#1332,session_id#1333,channel#1334,transaction_purpose#1335,ip_network#1336,recipient_id_hash#1337] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :        +- Project [struct(id, id#486) AS dst#503]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :           +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :              +- Deduplicate [src#133]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :                 +- Union false, false
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :                    :- Deduplicate [src#133]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :                    :  +- Project [src#133]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :                    :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :                    :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.882+0000] {spark_submit.py:571} INFO - :                    :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :              +- Union false, false
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_id#1339 AS src#133, recipient_id_hash#1353 AS dst#134, p2p AS relationship#135, LOG1P(amount#1341) AS weight#136]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Filter isnotnull(recipient_id_hash#1353)
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Filter (transaction_type#1344 = p2p)
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Project [transaction_id#1338, client_id#1339, datetime#1340, amount#1341, currency#1342, coalesce(merchant#1343, cast(no_merchant as string)) AS merchant#114, transaction_type#1344, category#1345, country_code#1346, region#1347, coalesce(device_type#1348, cast(unknown as string)) AS device_type#115, session_id#1349, channel#1350, transaction_purpose#1351, ip_network#1352, recipient_id_hash#1353, dt_30#79]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Project [transaction_id#1338, client_id#1339, datetime#1340, amount#1341, currency#1342, merchant#1343, transaction_type#1344, category#1345, country_code#1346, region#1347, device_type#1348, session_id#1349, channel#1350, transaction_purpose#1351, ip_network#1352, recipient_id_hash#1353, cast(date_trunc(minute, datetime#1340, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Relation [transaction_id#1338,client_id#1339,datetime#1340,amount#1341,currency#1342,merchant#1343,transaction_type#1344,category#1345,country_code#1346,region#1347,device_type#1348,session_id#1349,channel#1350,transaction_purpose#1351,ip_network#1352,recipient_id_hash#1353] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1355, 0, 0) AS clients#159]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :                    +- Project [transaction_id#1354, client_id#1355, datetime#1356, amount#1357, currency#1358, coalesce(merchant#1359, cast(no_merchant as string)) AS merchant#114, transaction_type#1360, category#1361, country_code#1362, region#1363, coalesce(device_type#1364, cast(unknown as string)) AS device_type#115, session_id#1365, channel#1366, transaction_purpose#1367, ip_network#1368, recipient_id_hash#1369, dt_30#79]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :                       +- Project [transaction_id#1354, client_id#1355, datetime#1356, amount#1357, currency#1358, merchant#1359, transaction_type#1360, category#1361, country_code#1362, region#1363, device_type#1364, session_id#1365, channel#1366, transaction_purpose#1367, ip_network#1368, recipient_id_hash#1369, cast(date_trunc(minute, datetime#1356, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :                          +- Relation [transaction_id#1354,client_id#1355,datetime#1356,amount#1357,currency#1358,merchant#1359,transaction_type#1360,category#1361,country_code#1362,region#1363,device_type#1364,session_id#1365,channel#1366,transaction_purpose#1367,ip_network#1368,recipient_id_hash#1369] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.883+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Project [session_id#1381, clients#195, client_pairs#201]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Aggregate [session_id#1381], [session_id#1381, collect_set(client_id#1371, 0, 0) AS clients#195]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :                 +- Filter isnotnull(session_id#1381)
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :                    +- Project [transaction_id#1370, client_id#1371, datetime#1372, amount#1373, currency#1374, coalesce(merchant#1375, cast(no_merchant as string)) AS merchant#114, transaction_type#1376, category#1377, country_code#1378, region#1379, coalesce(device_type#1380, cast(unknown as string)) AS device_type#115, session_id#1381, channel#1382, transaction_purpose#1383, ip_network#1384, recipient_id_hash#1385, dt_30#79]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :                       +- Project [transaction_id#1370, client_id#1371, datetime#1372, amount#1373, currency#1374, merchant#1375, transaction_type#1376, category#1377, country_code#1378, region#1379, device_type#1380, session_id#1381, channel#1382, transaction_purpose#1383, ip_network#1384, recipient_id_hash#1385, cast(date_trunc(minute, datetime#1372, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :                          +- Relation [transaction_id#1370,client_id#1371,datetime#1372,amount#1373,currency#1374,merchant#1375,transaction_type#1376,category#1377,country_code#1378,region#1379,device_type#1380,session_id#1381,channel#1382,transaction_purpose#1383,ip_network#1384,recipient_id_hash#1385] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Project [ip_network#1400, clients#231, client_pairs#237]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Aggregate [ip_network#1400], [ip_network#1400, collect_set(client_id#1387, 0, 0) AS clients#231]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :                 +- Filter isnotnull(ip_network#1400)
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :                    +- Project [transaction_id#1386, client_id#1387, datetime#1388, amount#1389, currency#1390, coalesce(merchant#1391, cast(no_merchant as string)) AS merchant#114, transaction_type#1392, category#1393, country_code#1394, region#1395, coalesce(device_type#1396, cast(unknown as string)) AS device_type#115, session_id#1397, channel#1398, transaction_purpose#1399, ip_network#1400, recipient_id_hash#1401, dt_30#79]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :                       +- Project [transaction_id#1386, client_id#1387, datetime#1388, amount#1389, currency#1390, merchant#1391, transaction_type#1392, category#1393, country_code#1394, region#1395, device_type#1396, session_id#1397, channel#1398, transaction_purpose#1399, ip_network#1400, recipient_id_hash#1401, cast(date_trunc(minute, datetime#1388, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 :                          +- Relation [transaction_id#1386,client_id#1387,datetime#1388,amount#1389,currency#1390,merchant#1391,transaction_type#1392,category#1393,country_code#1394,region#1395,device_type#1396,session_id#1397,channel#1398,transaction_purpose#1399,ip_network#1400,recipient_id_hash#1401] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.884+0000] {spark_submit.py:571} INFO - :                    :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1403, 0, 0) AS clients#287]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    :                                      +- Project [transaction_id#1402, client_id#1403, datetime#1404, amount#1405, currency#1406, merchant#114, transaction_type#1408, category#1409, country_code#1410, region#1411, device_type#115, session_id#1413, channel#1414, transaction_purpose#1415, ip_network#1416, recipient_id_hash#1417, dt_30#79, concat(region#1411, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    :                                         +- Filter transaction_type#1408 IN (withdrawal)
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    :                                            +- Project [transaction_id#1402, client_id#1403, datetime#1404, amount#1405, currency#1406, coalesce(merchant#1407, cast(no_merchant as string)) AS merchant#114, transaction_type#1408, category#1409, country_code#1410, region#1411, coalesce(device_type#1412, cast(unknown as string)) AS device_type#115, session_id#1413, channel#1414, transaction_purpose#1415, ip_network#1416, recipient_id_hash#1417, dt_30#79]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    :                                               +- Project [transaction_id#1402, client_id#1403, datetime#1404, amount#1405, currency#1406, merchant#1407, transaction_type#1408, category#1409, country_code#1410, region#1411, device_type#1412, session_id#1413, channel#1414, transaction_purpose#1415, ip_network#1416, recipient_id_hash#1417, cast(date_trunc(minute, datetime#1404, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    :                                                  +- Relation [transaction_id#1402,client_id#1403,datetime#1404,amount#1405,currency#1406,merchant#1407,transaction_type#1408,category#1409,country_code#1410,region#1411,device_type#1412,session_id#1413,channel#1414,transaction_purpose#1415,ip_network#1416,recipient_id_hash#1417] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                    +- Deduplicate [dst#134]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                       +- Project [dst#134]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                          +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                             +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                                +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                                   +- Union false, false
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_id#1419 AS src#133, recipient_id_hash#1433 AS dst#134, p2p AS relationship#135, LOG1P(amount#1421) AS weight#136]
[2025-05-08T19:30:36.885+0000] {spark_submit.py:571} INFO - :                                      :  +- Filter isnotnull(recipient_id_hash#1433)
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :     +- Filter (transaction_type#1424 = p2p)
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :        +- Project [transaction_id#1418, client_id#1419, datetime#1420, amount#1421, currency#1422, coalesce(merchant#1423, cast(no_merchant as string)) AS merchant#114, transaction_type#1424, category#1425, country_code#1426, region#1427, coalesce(device_type#1428, cast(unknown as string)) AS device_type#115, session_id#1429, channel#1430, transaction_purpose#1431, ip_network#1432, recipient_id_hash#1433, dt_30#79]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :           +- Project [transaction_id#1418, client_id#1419, datetime#1420, amount#1421, currency#1422, merchant#1423, transaction_type#1424, category#1425, country_code#1426, region#1427, device_type#1428, session_id#1429, channel#1430, transaction_purpose#1431, ip_network#1432, recipient_id_hash#1433, cast(date_trunc(minute, datetime#1420, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :              +- Relation [transaction_id#1418,client_id#1419,datetime#1420,amount#1421,currency#1422,merchant#1423,transaction_type#1424,category#1425,country_code#1426,region#1427,device_type#1428,session_id#1429,channel#1430,transaction_purpose#1431,ip_network#1432,recipient_id_hash#1433] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1435, 0, 0) AS clients#159]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :                    +- Project [transaction_id#1434, client_id#1435, datetime#1436, amount#1437, currency#1438, coalesce(merchant#1439, cast(no_merchant as string)) AS merchant#114, transaction_type#1440, category#1441, country_code#1442, region#1443, coalesce(device_type#1444, cast(unknown as string)) AS device_type#115, session_id#1445, channel#1446, transaction_purpose#1447, ip_network#1448, recipient_id_hash#1449, dt_30#79]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :                       +- Project [transaction_id#1434, client_id#1435, datetime#1436, amount#1437, currency#1438, merchant#1439, transaction_type#1440, category#1441, country_code#1442, region#1443, device_type#1444, session_id#1445, channel#1446, transaction_purpose#1447, ip_network#1448, recipient_id_hash#1449, cast(date_trunc(minute, datetime#1436, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :                          +- Relation [transaction_id#1434,client_id#1435,datetime#1436,amount#1437,currency#1438,merchant#1439,transaction_type#1440,category#1441,country_code#1442,region#1443,device_type#1444,session_id#1445,channel#1446,transaction_purpose#1447,ip_network#1448,recipient_id_hash#1449] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :  +- Project [session_id#1461, clients#195, client_pairs#201]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.886+0000] {spark_submit.py:571} INFO - :                                      :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :              +- Aggregate [session_id#1461], [session_id#1461, collect_set(client_id#1451, 0, 0) AS clients#195]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :                 +- Filter isnotnull(session_id#1461)
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :                    +- Project [transaction_id#1450, client_id#1451, datetime#1452, amount#1453, currency#1454, coalesce(merchant#1455, cast(no_merchant as string)) AS merchant#114, transaction_type#1456, category#1457, country_code#1458, region#1459, coalesce(device_type#1460, cast(unknown as string)) AS device_type#115, session_id#1461, channel#1462, transaction_purpose#1463, ip_network#1464, recipient_id_hash#1465, dt_30#79]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :                       +- Project [transaction_id#1450, client_id#1451, datetime#1452, amount#1453, currency#1454, merchant#1455, transaction_type#1456, category#1457, country_code#1458, region#1459, device_type#1460, session_id#1461, channel#1462, transaction_purpose#1463, ip_network#1464, recipient_id_hash#1465, cast(date_trunc(minute, datetime#1452, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :                          +- Relation [transaction_id#1450,client_id#1451,datetime#1452,amount#1453,currency#1454,merchant#1455,transaction_type#1456,category#1457,country_code#1458,region#1459,device_type#1460,session_id#1461,channel#1462,transaction_purpose#1463,ip_network#1464,recipient_id_hash#1465] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :  +- Project [ip_network#1480, clients#231, client_pairs#237]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :              +- Aggregate [ip_network#1480], [ip_network#1480, collect_set(client_id#1467, 0, 0) AS clients#231]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :                 +- Filter isnotnull(ip_network#1480)
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :                    +- Project [transaction_id#1466, client_id#1467, datetime#1468, amount#1469, currency#1470, coalesce(merchant#1471, cast(no_merchant as string)) AS merchant#114, transaction_type#1472, category#1473, country_code#1474, region#1475, coalesce(device_type#1476, cast(unknown as string)) AS device_type#115, session_id#1477, channel#1478, transaction_purpose#1479, ip_network#1480, recipient_id_hash#1481, dt_30#79]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :                       +- Project [transaction_id#1466, client_id#1467, datetime#1468, amount#1469, currency#1470, merchant#1471, transaction_type#1472, category#1473, country_code#1474, region#1475, device_type#1476, session_id#1477, channel#1478, transaction_purpose#1479, ip_network#1480, recipient_id_hash#1481, cast(date_trunc(minute, datetime#1468, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      :                          +- Relation [transaction_id#1466,client_id#1467,datetime#1468,amount#1469,currency#1470,merchant#1471,transaction_type#1472,category#1473,country_code#1474,region#1475,device_type#1476,session_id#1477,channel#1478,transaction_purpose#1479,ip_network#1480,recipient_id_hash#1481] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                      +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                         +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                            +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.887+0000] {spark_submit.py:571} INFO - :                                               +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :                                                  +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :                                                     +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1483, 0, 0) AS clients#287]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :                                                        +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :                                                           +- Project [transaction_id#1482, client_id#1483, datetime#1484, amount#1485, currency#1486, merchant#114, transaction_type#1488, category#1489, country_code#1490, region#1491, device_type#115, session_id#1493, channel#1494, transaction_purpose#1495, ip_network#1496, recipient_id_hash#1497, dt_30#79, concat(region#1491, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :                                                              +- Filter transaction_type#1488 IN (withdrawal)
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :                                                                 +- Project [transaction_id#1482, client_id#1483, datetime#1484, amount#1485, currency#1486, coalesce(merchant#1487, cast(no_merchant as string)) AS merchant#114, transaction_type#1488, category#1489, country_code#1490, region#1491, coalesce(device_type#1492, cast(unknown as string)) AS device_type#115, session_id#1493, channel#1494, transaction_purpose#1495, ip_network#1496, recipient_id_hash#1497, dt_30#79]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :                                                                    +- Project [transaction_id#1482, client_id#1483, datetime#1484, amount#1485, currency#1486, merchant#1487, transaction_type#1488, category#1489, country_code#1490, region#1491, device_type#1492, session_id#1493, channel#1494, transaction_purpose#1495, ip_network#1496, recipient_id_hash#1497, cast(date_trunc(minute, datetime#1484, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :                                                                       +- Relation [transaction_id#1482,client_id#1483,datetime#1484,amount#1485,currency#1486,merchant#1487,transaction_type#1488,category#1489,country_code#1490,region#1491,device_type#1492,session_id#1493,channel#1494,transaction_purpose#1495,ip_network#1496,recipient_id_hash#1497] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - +- Deduplicate [src#133]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - +- Union false, false
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :- Deduplicate [src#133]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :  +- Project [src#133]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :              +- Union false, false
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :                 :- Project [client_id#935 AS src#133, recipient_id_hash#949 AS dst#134, p2p AS relationship#135, LOG1P(amount#937) AS weight#136]
[2025-05-08T19:30:36.888+0000] {spark_submit.py:571} INFO - :                 :  +- Filter isnotnull(recipient_id_hash#949)
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :     +- Filter (transaction_type#940 = p2p)
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :        +- Project [transaction_id#934, client_id#935, datetime#936, amount#937, currency#938, coalesce(merchant#939, cast(no_merchant as string)) AS merchant#114, transaction_type#940, category#941, country_code#942, region#943, coalesce(device_type#944, cast(unknown as string)) AS device_type#115, session_id#945, channel#946, transaction_purpose#947, ip_network#948, recipient_id_hash#949, dt_30#79]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :           +- Project [transaction_id#934, client_id#935, datetime#936, amount#937, currency#938, merchant#939, transaction_type#940, category#941, country_code#942, region#943, device_type#944, session_id#945, channel#946, transaction_purpose#947, ip_network#948, recipient_id_hash#949, cast(date_trunc(minute, datetime#936, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :              +- Relation [transaction_id#934,client_id#935,datetime#936,amount#937,currency#938,merchant#939,transaction_type#940,category#941,country_code#942,region#943,device_type#944,session_id#945,channel#946,transaction_purpose#947,ip_network#948,recipient_id_hash#949] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#951, 0, 0) AS clients#159]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [transaction_id#950, client_id#951, datetime#952, amount#953, currency#954, coalesce(merchant#955, cast(no_merchant as string)) AS merchant#114, transaction_type#956, category#957, country_code#958, region#959, coalesce(device_type#960, cast(unknown as string)) AS device_type#115, session_id#961, channel#962, transaction_purpose#963, ip_network#964, recipient_id_hash#965, dt_30#79]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :                       +- Project [transaction_id#950, client_id#951, datetime#952, amount#953, currency#954, merchant#955, transaction_type#956, category#957, country_code#958, region#959, device_type#960, session_id#961, channel#962, transaction_purpose#963, ip_network#964, recipient_id_hash#965, cast(date_trunc(minute, datetime#952, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :                          +- Relation [transaction_id#950,client_id#951,datetime#952,amount#953,currency#954,merchant#955,transaction_type#956,category#957,country_code#958,region#959,device_type#960,session_id#961,channel#962,transaction_purpose#963,ip_network#964,recipient_id_hash#965] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :  +- Project [session_id#977, clients#195, client_pairs#201]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.889+0000] {spark_submit.py:571} INFO - :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :              +- Aggregate [session_id#977], [session_id#977, collect_set(client_id#967, 0, 0) AS clients#195]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :                 +- Filter isnotnull(session_id#977)
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [transaction_id#966, client_id#967, datetime#968, amount#969, currency#970, coalesce(merchant#971, cast(no_merchant as string)) AS merchant#114, transaction_type#972, category#973, country_code#974, region#975, coalesce(device_type#976, cast(unknown as string)) AS device_type#115, session_id#977, channel#978, transaction_purpose#979, ip_network#980, recipient_id_hash#981, dt_30#79]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :                       +- Project [transaction_id#966, client_id#967, datetime#968, amount#969, currency#970, merchant#971, transaction_type#972, category#973, country_code#974, region#975, device_type#976, session_id#977, channel#978, transaction_purpose#979, ip_network#980, recipient_id_hash#981, cast(date_trunc(minute, datetime#968, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :                          +- Relation [transaction_id#966,client_id#967,datetime#968,amount#969,currency#970,merchant#971,transaction_type#972,category#973,country_code#974,region#975,device_type#976,session_id#977,channel#978,transaction_purpose#979,ip_network#980,recipient_id_hash#981] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :  +- Project [ip_network#996, clients#231, client_pairs#237]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :              +- Aggregate [ip_network#996], [ip_network#996, collect_set(client_id#983, 0, 0) AS clients#231]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :                 +- Filter isnotnull(ip_network#996)
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [transaction_id#982, client_id#983, datetime#984, amount#985, currency#986, coalesce(merchant#987, cast(no_merchant as string)) AS merchant#114, transaction_type#988, category#989, country_code#990, region#991, coalesce(device_type#992, cast(unknown as string)) AS device_type#115, session_id#993, channel#994, transaction_purpose#995, ip_network#996, recipient_id_hash#997, dt_30#79]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :                       +- Project [transaction_id#982, client_id#983, datetime#984, amount#985, currency#986, merchant#987, transaction_type#988, category#989, country_code#990, region#991, device_type#992, session_id#993, channel#994, transaction_purpose#995, ip_network#996, recipient_id_hash#997, cast(date_trunc(minute, datetime#984, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 :                          +- Relation [transaction_id#982,client_id#983,datetime#984,amount#985,currency#986,merchant#987,transaction_type#988,category#989,country_code#990,region#991,device_type#992,session_id#993,channel#994,transaction_purpose#995,ip_network#996,recipient_id_hash#997] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.890+0000] {spark_submit.py:571} INFO - :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#999, 0, 0) AS clients#287]
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - :                                      +- Project [transaction_id#998, client_id#999, datetime#1000, amount#1001, currency#1002, merchant#114, transaction_type#1004, category#1005, country_code#1006, region#1007, device_type#115, session_id#1009, channel#1010, transaction_purpose#1011, ip_network#1012, recipient_id_hash#1013, dt_30#79, concat(region#1007, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - :                                         +- Filter transaction_type#1004 IN (withdrawal)
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - :                                            +- Project [transaction_id#998, client_id#999, datetime#1000, amount#1001, currency#1002, coalesce(merchant#1003, cast(no_merchant as string)) AS merchant#114, transaction_type#1004, category#1005, country_code#1006, region#1007, coalesce(device_type#1008, cast(unknown as string)) AS device_type#115, session_id#1009, channel#1010, transaction_purpose#1011, ip_network#1012, recipient_id_hash#1013, dt_30#79]
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - :                                               +- Project [transaction_id#998, client_id#999, datetime#1000, amount#1001, currency#1002, merchant#1003, transaction_type#1004, category#1005, country_code#1006, region#1007, device_type#1008, session_id#1009, channel#1010, transaction_purpose#1011, ip_network#1012, recipient_id_hash#1013, cast(date_trunc(minute, datetime#1000, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - :                                                  +- Relation [transaction_id#998,client_id#999,datetime#1000,amount#1001,currency#1002,merchant#1003,transaction_type#1004,category#1005,country_code#1006,region#1007,device_type#1008,session_id#1009,channel#1010,transaction_purpose#1011,ip_network#1012,recipient_id_hash#1013] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - +- Deduplicate [dst#134]
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - +- Project [dst#134]
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.891+0000] {spark_submit.py:571} INFO - +- Union false, false
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :- Project [client_id#1015 AS src#133, recipient_id_hash#1029 AS dst#134, p2p AS relationship#135, LOG1P(amount#1017) AS weight#136]
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :  +- Filter isnotnull(recipient_id_hash#1029)
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :     +- Filter (transaction_type#1020 = p2p)
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :        +- Project [transaction_id#1014, client_id#1015, datetime#1016, amount#1017, currency#1018, coalesce(merchant#1019, cast(no_merchant as string)) AS merchant#114, transaction_type#1020, category#1021, country_code#1022, region#1023, coalesce(device_type#1024, cast(unknown as string)) AS device_type#115, session_id#1025, channel#1026, transaction_purpose#1027, ip_network#1028, recipient_id_hash#1029, dt_30#79]
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :           +- Project [transaction_id#1014, client_id#1015, datetime#1016, amount#1017, currency#1018, merchant#1019, transaction_type#1020, category#1021, country_code#1022, region#1023, device_type#1024, session_id#1025, channel#1026, transaction_purpose#1027, ip_network#1028, recipient_id_hash#1029, cast(date_trunc(minute, datetime#1016, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :              +- Relation [transaction_id#1014,client_id#1015,datetime#1016,amount#1017,currency#1018,merchant#1019,transaction_type#1020,category#1021,country_code#1022,region#1023,device_type#1024,session_id#1025,channel#1026,transaction_purpose#1027,ip_network#1028,recipient_id_hash#1029] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1031, 0, 0) AS clients#159]
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.892+0000] {spark_submit.py:571} INFO - :                    +- Project [transaction_id#1030, client_id#1031, datetime#1032, amount#1033, currency#1034, coalesce(merchant#1035, cast(no_merchant as string)) AS merchant#114, transaction_type#1036, category#1037, country_code#1038, region#1039, coalesce(device_type#1040, cast(unknown as string)) AS device_type#115, session_id#1041, channel#1042, transaction_purpose#1043, ip_network#1044, recipient_id_hash#1045, dt_30#79]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :                       +- Project [transaction_id#1030, client_id#1031, datetime#1032, amount#1033, currency#1034, merchant#1035, transaction_type#1036, category#1037, country_code#1038, region#1039, device_type#1040, session_id#1041, channel#1042, transaction_purpose#1043, ip_network#1044, recipient_id_hash#1045, cast(date_trunc(minute, datetime#1032, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :                          +- Relation [transaction_id#1030,client_id#1031,datetime#1032,amount#1033,currency#1034,merchant#1035,transaction_type#1036,category#1037,country_code#1038,region#1039,device_type#1040,session_id#1041,channel#1042,transaction_purpose#1043,ip_network#1044,recipient_id_hash#1045] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :  +- Project [session_id#1057, clients#195, client_pairs#201]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :              +- Aggregate [session_id#1057], [session_id#1057, collect_set(client_id#1047, 0, 0) AS clients#195]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :                 +- Filter isnotnull(session_id#1057)
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :                    +- Project [transaction_id#1046, client_id#1047, datetime#1048, amount#1049, currency#1050, coalesce(merchant#1051, cast(no_merchant as string)) AS merchant#114, transaction_type#1052, category#1053, country_code#1054, region#1055, coalesce(device_type#1056, cast(unknown as string)) AS device_type#115, session_id#1057, channel#1058, transaction_purpose#1059, ip_network#1060, recipient_id_hash#1061, dt_30#79]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :                       +- Project [transaction_id#1046, client_id#1047, datetime#1048, amount#1049, currency#1050, merchant#1051, transaction_type#1052, category#1053, country_code#1054, region#1055, device_type#1056, session_id#1057, channel#1058, transaction_purpose#1059, ip_network#1060, recipient_id_hash#1061, cast(date_trunc(minute, datetime#1048, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :                          +- Relation [transaction_id#1046,client_id#1047,datetime#1048,amount#1049,currency#1050,merchant#1051,transaction_type#1052,category#1053,country_code#1054,region#1055,device_type#1056,session_id#1057,channel#1058,transaction_purpose#1059,ip_network#1060,recipient_id_hash#1061] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :  +- Project [ip_network#1076, clients#231, client_pairs#237]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.893+0000] {spark_submit.py:571} INFO - :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - :              +- Aggregate [ip_network#1076], [ip_network#1076, collect_set(client_id#1063, 0, 0) AS clients#231]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - :                 +- Filter isnotnull(ip_network#1076)
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - :                    +- Project [transaction_id#1062, client_id#1063, datetime#1064, amount#1065, currency#1066, coalesce(merchant#1067, cast(no_merchant as string)) AS merchant#114, transaction_type#1068, category#1069, country_code#1070, region#1071, coalesce(device_type#1072, cast(unknown as string)) AS device_type#115, session_id#1073, channel#1074, transaction_purpose#1075, ip_network#1076, recipient_id_hash#1077, dt_30#79]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - :                       +- Project [transaction_id#1062, client_id#1063, datetime#1064, amount#1065, currency#1066, merchant#1067, transaction_type#1068, category#1069, country_code#1070, region#1071, device_type#1072, session_id#1073, channel#1074, transaction_purpose#1075, ip_network#1076, recipient_id_hash#1077, cast(date_trunc(minute, datetime#1064, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - :                          +- Relation [transaction_id#1062,client_id#1063,datetime#1064,amount#1065,currency#1066,merchant#1067,transaction_type#1068,category#1069,country_code#1070,region#1071,device_type#1072,session_id#1073,channel#1074,transaction_purpose#1075,ip_network#1076,recipient_id_hash#1077] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1079, 0, 0) AS clients#287]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Project [transaction_id#1078, client_id#1079, datetime#1080, amount#1081, currency#1082, merchant#114, transaction_type#1084, category#1085, country_code#1086, region#1087, device_type#115, session_id#1089, channel#1090, transaction_purpose#1091, ip_network#1092, recipient_id_hash#1093, dt_30#79, concat(region#1087, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Filter transaction_type#1084 IN (withdrawal)
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Project [transaction_id#1078, client_id#1079, datetime#1080, amount#1081, currency#1082, coalesce(merchant#1083, cast(no_merchant as string)) AS merchant#114, transaction_type#1084, category#1085, country_code#1086, region#1087, coalesce(device_type#1088, cast(unknown as string)) AS device_type#115, session_id#1089, channel#1090, transaction_purpose#1091, ip_network#1092, recipient_id_hash#1093, dt_30#79]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Project [transaction_id#1078, client_id#1079, datetime#1080, amount#1081, currency#1082, merchant#1083, transaction_type#1084, category#1085, country_code#1086, region#1087, device_type#1088, session_id#1089, channel#1090, transaction_purpose#1091, ip_network#1092, recipient_id_hash#1093, cast(date_trunc(minute, datetime#1080, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - +- Relation [transaction_id#1078,client_id#1079,datetime#1080,amount#1081,currency#1082,merchant#1083,transaction_type#1084,category#1085,country_code#1086,region#1087,device_type#1088,session_id#1089,channel#1090,transaction_purpose#1091,ip_network#1092,recipient_id_hash#1093] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.894+0000] {spark_submit.py:571} INFO - Traceback (most recent call last):
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - File "/opt/airflow/spark/build_graph.py", line 186, in main
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - weighted_degrees = graph.aggregateMessages(
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - File "/home/airflow/.ivy2/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar/graphframes/graphframe.py", line 305, in aggregateMessages
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - jdf = builder.agg(aggCol._jc)
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - File "/opt/spark/python/lib/py4j-0.10.9.5-src.zip/py4j/java_gateway.py", line 1321, in __call__
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - return_value = get_return_value(
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - File "/opt/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in deco
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - raise converted from None
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - pyspark.sql.utils.AnalysisException: cannot resolve 'edge' given input columns: [MSG, id];
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - 'Aggregate [id#763], [id#763, sum('edge[weight]) AS w_degree#498]
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - +- Union false, false
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - :- Project [MSG#762, id#763]
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - :  +- Project [id#763, MSG#762]
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - :     +- Join Inner, (id#763 = id#486)
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - :        :- Project [edge#499.weight AS MSG#762, src#501.id AS id#763]
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - :        :  +- Project [src#501, edge#499, dst#503]
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - :        :     +- Join Inner, (edge#499.dst = dst#503.id)
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - :        :        :- Join Inner, (edge#499.src = src#501.id)
[2025-05-08T19:30:36.895+0000] {spark_submit.py:571} INFO - :        :        :  :- Project [struct(src, src#133, dst, dst#134, weight, weight#390, relationships, relationships#392, relationships_str, relationships_str#397) AS edge#499]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :  +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :     +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :        +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :           +- Union false, false
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_id#15 AS src#133, recipient_id_hash#29 AS dst#134, p2p AS relationship#135, LOG1P(amount#17) AS weight#136]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Filter isnotnull(recipient_id_hash#29)
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Filter (transaction_type#20 = p2p)
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Project [transaction_id#14, client_id#15, datetime#16, amount#17, currency#18, coalesce(merchant#19, cast(no_merchant as string)) AS merchant#114, transaction_type#20, category#21, country_code#22, region#23, coalesce(device_type#24, cast(unknown as string)) AS device_type#115, session_id#25, channel#26, transaction_purpose#27, ip_network#28, recipient_id_hash#29, dt_30#79]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Project [transaction_id#14, client_id#15, datetime#16, amount#17, currency#18, merchant#19, transaction_type#20, category#21, country_code#22, region#23, device_type#24, session_id#25, channel#26, transaction_purpose#27, ip_network#28, recipient_id_hash#29, cast(date_trunc(minute, datetime#16, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Relation [transaction_id#14,client_id#15,datetime#16,amount#17,currency#18,merchant#19,transaction_type#20,category#21,country_code#22,region#23,device_type#24,session_id#25,channel#26,transaction_purpose#27,ip_network#28,recipient_id_hash#29] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#306, 0, 0) AS clients#159]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :                    +- Project [transaction_id#305, client_id#306, datetime#307, amount#308, currency#309, coalesce(merchant#310, cast(no_merchant as string)) AS merchant#114, transaction_type#311, category#312, country_code#313, region#314, coalesce(device_type#315, cast(unknown as string)) AS device_type#115, session_id#316, channel#317, transaction_purpose#318, ip_network#319, recipient_id_hash#320, dt_30#79]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :                       +- Project [transaction_id#305, client_id#306, datetime#307, amount#308, currency#309, merchant#310, transaction_type#311, category#312, country_code#313, region#314, device_type#315, session_id#316, channel#317, transaction_purpose#318, ip_network#319, recipient_id_hash#320, cast(date_trunc(minute, datetime#307, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.896+0000] {spark_submit.py:571} INFO - :        :        :  :              :                          +- Relation [transaction_id#305,client_id#306,datetime#307,amount#308,currency#309,merchant#310,transaction_type#311,category#312,country_code#313,region#314,device_type#315,session_id#316,channel#317,transaction_purpose#318,ip_network#319,recipient_id_hash#320] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Project [session_id#336, clients#195, client_pairs#201]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Aggregate [session_id#336], [session_id#336, collect_set(client_id#326, 0, 0) AS clients#195]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :                 +- Filter isnotnull(session_id#336)
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :                    +- Project [transaction_id#325, client_id#326, datetime#327, amount#328, currency#329, coalesce(merchant#330, cast(no_merchant as string)) AS merchant#114, transaction_type#331, category#332, country_code#333, region#334, coalesce(device_type#335, cast(unknown as string)) AS device_type#115, session_id#336, channel#337, transaction_purpose#338, ip_network#339, recipient_id_hash#340, dt_30#79]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :                       +- Project [transaction_id#325, client_id#326, datetime#327, amount#328, currency#329, merchant#330, transaction_type#331, category#332, country_code#333, region#334, device_type#335, session_id#336, channel#337, transaction_purpose#338, ip_network#339, recipient_id_hash#340, cast(date_trunc(minute, datetime#327, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :                          +- Relation [transaction_id#325,client_id#326,datetime#327,amount#328,currency#329,merchant#330,transaction_type#331,category#332,country_code#333,region#334,device_type#335,session_id#336,channel#337,transaction_purpose#338,ip_network#339,recipient_id_hash#340] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Project [ip_network#359, clients#231, client_pairs#237]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Aggregate [ip_network#359], [ip_network#359, collect_set(client_id#346, 0, 0) AS clients#231]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :                 +- Filter isnotnull(ip_network#359)
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :                    +- Project [transaction_id#345, client_id#346, datetime#347, amount#348, currency#349, coalesce(merchant#350, cast(no_merchant as string)) AS merchant#114, transaction_type#351, category#352, country_code#353, region#354, coalesce(device_type#355, cast(unknown as string)) AS device_type#115, session_id#356, channel#357, transaction_purpose#358, ip_network#359, recipient_id_hash#360, dt_30#79]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :                       +- Project [transaction_id#345, client_id#346, datetime#347, amount#348, currency#349, merchant#350, transaction_type#351, category#352, country_code#353, region#354, device_type#355, session_id#356, channel#357, transaction_purpose#358, ip_network#359, recipient_id_hash#360, cast(date_trunc(minute, datetime#347, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.897+0000] {spark_submit.py:571} INFO - :        :        :  :              :                          +- Relation [transaction_id#345,client_id#346,datetime#347,amount#348,currency#349,merchant#350,transaction_type#351,category#352,country_code#353,region#354,device_type#355,session_id#356,channel#357,transaction_purpose#358,ip_network#359,recipient_id_hash#360] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :              +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :                 +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :                    +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :                       +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :                          +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :                             +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#366, 0, 0) AS clients#287]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :                                +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :                                   +- Project [transaction_id#365, client_id#366, datetime#367, amount#368, currency#369, merchant#114, transaction_type#371, category#372, country_code#373, region#374, device_type#115, session_id#376, channel#377, transaction_purpose#378, ip_network#379, recipient_id_hash#380, dt_30#79, concat(region#374, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :                                      +- Filter transaction_type#371 IN (withdrawal)
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :                                         +- Project [transaction_id#365, client_id#366, datetime#367, amount#368, currency#369, coalesce(merchant#370, cast(no_merchant as string)) AS merchant#114, transaction_type#371, category#372, country_code#373, region#374, coalesce(device_type#375, cast(unknown as string)) AS device_type#115, session_id#376, channel#377, transaction_purpose#378, ip_network#379, recipient_id_hash#380, dt_30#79]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :                                            +- Project [transaction_id#365, client_id#366, datetime#367, amount#368, currency#369, merchant#370, transaction_type#371, category#372, country_code#373, region#374, device_type#375, session_id#376, channel#377, transaction_purpose#378, ip_network#379, recipient_id_hash#380, cast(date_trunc(minute, datetime#367, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  :                                               +- Relation [transaction_id#365,client_id#366,datetime#367,amount#368,currency#369,merchant#370,transaction_type#371,category#372,country_code#373,region#374,device_type#375,session_id#376,channel#377,transaction_purpose#378,ip_network#379,recipient_id_hash#380] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :  +- Project [struct(id, id#486) AS src#501]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :     +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :        +- Deduplicate [src#133]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :           +- Union false, false
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :              :- Deduplicate [src#133]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :              :  +- Project [src#133]
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :              :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.898+0000] {spark_submit.py:571} INFO - :        :        :              :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :              +- Union false, false
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_id#508 AS src#133, recipient_id_hash#522 AS dst#134, p2p AS relationship#135, LOG1P(amount#510) AS weight#136]
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Filter isnotnull(recipient_id_hash#522)
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Filter (transaction_type#513 = p2p)
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Project [transaction_id#507, client_id#508, datetime#509, amount#510, currency#511, coalesce(merchant#512, cast(no_merchant as string)) AS merchant#114, transaction_type#513, category#514, country_code#515, region#516, coalesce(device_type#517, cast(unknown as string)) AS device_type#115, session_id#518, channel#519, transaction_purpose#520, ip_network#521, recipient_id_hash#522, dt_30#79]
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Project [transaction_id#507, client_id#508, datetime#509, amount#510, currency#511, merchant#512, transaction_type#513, category#514, country_code#515, region#516, device_type#517, session_id#518, channel#519, transaction_purpose#520, ip_network#521, recipient_id_hash#522, cast(date_trunc(minute, datetime#509, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Relation [transaction_id#507,client_id#508,datetime#509,amount#510,currency#511,merchant#512,transaction_type#513,category#514,country_code#515,region#516,device_type#517,session_id#518,channel#519,transaction_purpose#520,ip_network#521,recipient_id_hash#522] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#524, 0, 0) AS clients#159]
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.899+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                    +- Project [transaction_id#523, client_id#524, datetime#525, amount#526, currency#527, coalesce(merchant#528, cast(no_merchant as string)) AS merchant#114, transaction_type#529, category#530, country_code#531, region#532, coalesce(device_type#533, cast(unknown as string)) AS device_type#115, session_id#534, channel#535, transaction_purpose#536, ip_network#537, recipient_id_hash#538, dt_30#79]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                       +- Project [transaction_id#523, client_id#524, datetime#525, amount#526, currency#527, merchant#528, transaction_type#529, category#530, country_code#531, region#532, device_type#533, session_id#534, channel#535, transaction_purpose#536, ip_network#537, recipient_id_hash#538, cast(date_trunc(minute, datetime#525, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                          +- Relation [transaction_id#523,client_id#524,datetime#525,amount#526,currency#527,merchant#528,transaction_type#529,category#530,country_code#531,region#532,device_type#533,session_id#534,channel#535,transaction_purpose#536,ip_network#537,recipient_id_hash#538] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Project [session_id#550, clients#195, client_pairs#201]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Aggregate [session_id#550], [session_id#550, collect_set(client_id#540, 0, 0) AS clients#195]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                 +- Filter isnotnull(session_id#550)
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                    +- Project [transaction_id#539, client_id#540, datetime#541, amount#542, currency#543, coalesce(merchant#544, cast(no_merchant as string)) AS merchant#114, transaction_type#545, category#546, country_code#547, region#548, coalesce(device_type#549, cast(unknown as string)) AS device_type#115, session_id#550, channel#551, transaction_purpose#552, ip_network#553, recipient_id_hash#554, dt_30#79]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                       +- Project [transaction_id#539, client_id#540, datetime#541, amount#542, currency#543, merchant#544, transaction_type#545, category#546, country_code#547, region#548, device_type#549, session_id#550, channel#551, transaction_purpose#552, ip_network#553, recipient_id_hash#554, cast(date_trunc(minute, datetime#541, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                          +- Relation [transaction_id#539,client_id#540,datetime#541,amount#542,currency#543,merchant#544,transaction_type#545,category#546,country_code#547,region#548,device_type#549,session_id#550,channel#551,transaction_purpose#552,ip_network#553,recipient_id_hash#554] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Project [ip_network#569, clients#231, client_pairs#237]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Aggregate [ip_network#569], [ip_network#569, collect_set(client_id#556, 0, 0) AS clients#231]
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                 +- Filter isnotnull(ip_network#569)
[2025-05-08T19:30:36.900+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                    +- Project [transaction_id#555, client_id#556, datetime#557, amount#558, currency#559, coalesce(merchant#560, cast(no_merchant as string)) AS merchant#114, transaction_type#561, category#562, country_code#563, region#564, coalesce(device_type#565, cast(unknown as string)) AS device_type#115, session_id#566, channel#567, transaction_purpose#568, ip_network#569, recipient_id_hash#570, dt_30#79]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                       +- Project [transaction_id#555, client_id#556, datetime#557, amount#558, currency#559, merchant#560, transaction_type#561, category#562, country_code#563, region#564, device_type#565, session_id#566, channel#567, transaction_purpose#568, ip_network#569, recipient_id_hash#570, cast(date_trunc(minute, datetime#557, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                          +- Relation [transaction_id#555,client_id#556,datetime#557,amount#558,currency#559,merchant#560,transaction_type#561,category#562,country_code#563,region#564,device_type#565,session_id#566,channel#567,transaction_purpose#568,ip_network#569,recipient_id_hash#570] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#572, 0, 0) AS clients#287]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                                      +- Project [transaction_id#571, client_id#572, datetime#573, amount#574, currency#575, merchant#114, transaction_type#577, category#578, country_code#579, region#580, device_type#115, session_id#582, channel#583, transaction_purpose#584, ip_network#585, recipient_id_hash#586, dt_30#79, concat(region#580, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                                         +- Filter transaction_type#577 IN (withdrawal)
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                                            +- Project [transaction_id#571, client_id#572, datetime#573, amount#574, currency#575, coalesce(merchant#576, cast(no_merchant as string)) AS merchant#114, transaction_type#577, category#578, country_code#579, region#580, coalesce(device_type#581, cast(unknown as string)) AS device_type#115, session_id#582, channel#583, transaction_purpose#584, ip_network#585, recipient_id_hash#586, dt_30#79]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                                               +- Project [transaction_id#571, client_id#572, datetime#573, amount#574, currency#575, merchant#576, transaction_type#577, category#578, country_code#579, region#580, device_type#581, session_id#582, channel#583, transaction_purpose#584, ip_network#585, recipient_id_hash#586, cast(date_trunc(minute, datetime#573, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              :                                                  +- Relation [transaction_id#571,client_id#572,datetime#573,amount#574,currency#575,merchant#576,transaction_type#577,category#578,country_code#579,region#580,device_type#581,session_id#582,channel#583,transaction_purpose#584,ip_network#585,recipient_id_hash#586] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :              +- Deduplicate [dst#134]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :                 +- Project [dst#134]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :                    +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :                       +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :                          +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.901+0000] {spark_submit.py:571} INFO - :        :        :                             +- Union false, false
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_id#406 AS src#133, recipient_id_hash#420 AS dst#134, p2p AS relationship#135, LOG1P(amount#408) AS weight#136]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Filter isnotnull(recipient_id_hash#420)
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Filter (transaction_type#411 = p2p)
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Project [transaction_id#405, client_id#406, datetime#407, amount#408, currency#409, coalesce(merchant#410, cast(no_merchant as string)) AS merchant#114, transaction_type#411, category#412, country_code#413, region#414, coalesce(device_type#415, cast(unknown as string)) AS device_type#115, session_id#416, channel#417, transaction_purpose#418, ip_network#419, recipient_id_hash#420, dt_30#79]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Project [transaction_id#405, client_id#406, datetime#407, amount#408, currency#409, merchant#410, transaction_type#411, category#412, country_code#413, region#414, device_type#415, session_id#416, channel#417, transaction_purpose#418, ip_network#419, recipient_id_hash#420, cast(date_trunc(minute, datetime#407, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Relation [transaction_id#405,client_id#406,datetime#407,amount#408,currency#409,merchant#410,transaction_type#411,category#412,country_code#413,region#414,device_type#415,session_id#416,channel#417,transaction_purpose#418,ip_network#419,recipient_id_hash#420] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#422, 0, 0) AS clients#159]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :                    +- Project [transaction_id#421, client_id#422, datetime#423, amount#424, currency#425, coalesce(merchant#426, cast(no_merchant as string)) AS merchant#114, transaction_type#427, category#428, country_code#429, region#430, coalesce(device_type#431, cast(unknown as string)) AS device_type#115, session_id#432, channel#433, transaction_purpose#434, ip_network#435, recipient_id_hash#436, dt_30#79]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :                       +- Project [transaction_id#421, client_id#422, datetime#423, amount#424, currency#425, merchant#426, transaction_type#427, category#428, country_code#429, region#430, device_type#431, session_id#432, channel#433, transaction_purpose#434, ip_network#435, recipient_id_hash#436, cast(date_trunc(minute, datetime#423, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :                          +- Relation [transaction_id#421,client_id#422,datetime#423,amount#424,currency#425,merchant#426,transaction_type#427,category#428,country_code#429,region#430,device_type#431,session_id#432,channel#433,transaction_purpose#434,ip_network#435,recipient_id_hash#436] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Project [session_id#448, clients#195, client_pairs#201]
[2025-05-08T19:30:36.902+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Aggregate [session_id#448], [session_id#448, collect_set(client_id#438, 0, 0) AS clients#195]
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :                 +- Filter isnotnull(session_id#448)
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :                    +- Project [transaction_id#437, client_id#438, datetime#439, amount#440, currency#441, coalesce(merchant#442, cast(no_merchant as string)) AS merchant#114, transaction_type#443, category#444, country_code#445, region#446, coalesce(device_type#447, cast(unknown as string)) AS device_type#115, session_id#448, channel#449, transaction_purpose#450, ip_network#451, recipient_id_hash#452, dt_30#79]
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :                       +- Project [transaction_id#437, client_id#438, datetime#439, amount#440, currency#441, merchant#442, transaction_type#443, category#444, country_code#445, region#446, device_type#447, session_id#448, channel#449, transaction_purpose#450, ip_network#451, recipient_id_hash#452, cast(date_trunc(minute, datetime#439, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :                          +- Relation [transaction_id#437,client_id#438,datetime#439,amount#440,currency#441,merchant#442,transaction_type#443,category#444,country_code#445,region#446,device_type#447,session_id#448,channel#449,transaction_purpose#450,ip_network#451,recipient_id_hash#452] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Project [ip_network#467, clients#231, client_pairs#237]
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Aggregate [ip_network#467], [ip_network#467, collect_set(client_id#454, 0, 0) AS clients#231]
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :                 +- Filter isnotnull(ip_network#467)
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :                    +- Project [transaction_id#453, client_id#454, datetime#455, amount#456, currency#457, coalesce(merchant#458, cast(no_merchant as string)) AS merchant#114, transaction_type#459, category#460, country_code#461, region#462, coalesce(device_type#463, cast(unknown as string)) AS device_type#115, session_id#464, channel#465, transaction_purpose#466, ip_network#467, recipient_id_hash#468, dt_30#79]
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :                       +- Project [transaction_id#453, client_id#454, datetime#455, amount#456, currency#457, merchant#458, transaction_type#459, category#460, country_code#461, region#462, device_type#463, session_id#464, channel#465, transaction_purpose#466, ip_network#467, recipient_id_hash#468, cast(date_trunc(minute, datetime#455, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.903+0000] {spark_submit.py:571} INFO - :        :        :                                :                          +- Relation [transaction_id#453,client_id#454,datetime#455,amount#456,currency#457,merchant#458,transaction_type#459,category#460,country_code#461,region#462,device_type#463,session_id#464,channel#465,transaction_purpose#466,ip_network#467,recipient_id_hash#468] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                   +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                      +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                         +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                            +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                               +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#470, 0, 0) AS clients#287]
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                                  +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                                     +- Project [transaction_id#469, client_id#470, datetime#471, amount#472, currency#473, merchant#114, transaction_type#475, category#476, country_code#477, region#478, device_type#115, session_id#480, channel#481, transaction_purpose#482, ip_network#483, recipient_id_hash#484, dt_30#79, concat(region#478, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                                        +- Filter transaction_type#475 IN (withdrawal)
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                                           +- Project [transaction_id#469, client_id#470, datetime#471, amount#472, currency#473, coalesce(merchant#474, cast(no_merchant as string)) AS merchant#114, transaction_type#475, category#476, country_code#477, region#478, coalesce(device_type#479, cast(unknown as string)) AS device_type#115, session_id#480, channel#481, transaction_purpose#482, ip_network#483, recipient_id_hash#484, dt_30#79]
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                                              +- Project [transaction_id#469, client_id#470, datetime#471, amount#472, currency#473, merchant#474, transaction_type#475, category#476, country_code#477, region#478, device_type#479, session_id#480, channel#481, transaction_purpose#482, ip_network#483, recipient_id_hash#484, cast(date_trunc(minute, datetime#471, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        :                                                                 +- Relation [transaction_id#469,client_id#470,datetime#471,amount#472,currency#473,merchant#474,transaction_type#475,category#476,country_code#477,region#478,device_type#479,session_id#480,channel#481,transaction_purpose#482,ip_network#483,recipient_id_hash#484] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.904+0000] {spark_submit.py:571} INFO - :        :        +- Project [struct(id, id#486) AS dst#503]
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :           +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :              +- Deduplicate [src#133]
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :                 +- Union false, false
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :                    :- Deduplicate [src#133]
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :                    :  +- Project [src#133]
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :                    :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :                    :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :                    :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :                    :              +- Union false, false
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_id#594 AS src#133, recipient_id_hash#608 AS dst#134, p2p AS relationship#135, LOG1P(amount#596) AS weight#136]
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Filter isnotnull(recipient_id_hash#608)
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Filter (transaction_type#599 = p2p)
[2025-05-08T19:30:36.905+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Project [transaction_id#593, client_id#594, datetime#595, amount#596, currency#597, coalesce(merchant#598, cast(no_merchant as string)) AS merchant#114, transaction_type#599, category#600, country_code#601, region#602, coalesce(device_type#603, cast(unknown as string)) AS device_type#115, session_id#604, channel#605, transaction_purpose#606, ip_network#607, recipient_id_hash#608, dt_30#79]
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Project [transaction_id#593, client_id#594, datetime#595, amount#596, currency#597, merchant#598, transaction_type#599, category#600, country_code#601, region#602, device_type#603, session_id#604, channel#605, transaction_purpose#606, ip_network#607, recipient_id_hash#608, cast(date_trunc(minute, datetime#595, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Relation [transaction_id#593,client_id#594,datetime#595,amount#596,currency#597,merchant#598,transaction_type#599,category#600,country_code#601,region#602,device_type#603,session_id#604,channel#605,transaction_purpose#606,ip_network#607,recipient_id_hash#608] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#610, 0, 0) AS clients#159]
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :                    +- Project [transaction_id#609, client_id#610, datetime#611, amount#612, currency#613, coalesce(merchant#614, cast(no_merchant as string)) AS merchant#114, transaction_type#615, category#616, country_code#617, region#618, coalesce(device_type#619, cast(unknown as string)) AS device_type#115, session_id#620, channel#621, transaction_purpose#622, ip_network#623, recipient_id_hash#624, dt_30#79]
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :                       +- Project [transaction_id#609, client_id#610, datetime#611, amount#612, currency#613, merchant#614, transaction_type#615, category#616, country_code#617, region#618, device_type#619, session_id#620, channel#621, transaction_purpose#622, ip_network#623, recipient_id_hash#624, cast(date_trunc(minute, datetime#611, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.906+0000] {spark_submit.py:571} INFO - :        :                    :                 :                          +- Relation [transaction_id#609,client_id#610,datetime#611,amount#612,currency#613,merchant#614,transaction_type#615,category#616,country_code#617,region#618,device_type#619,session_id#620,channel#621,transaction_purpose#622,ip_network#623,recipient_id_hash#624] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Project [session_id#636, clients#195, client_pairs#201]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Aggregate [session_id#636], [session_id#636, collect_set(client_id#626, 0, 0) AS clients#195]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :                 +- Filter isnotnull(session_id#636)
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :                    +- Project [transaction_id#625, client_id#626, datetime#627, amount#628, currency#629, coalesce(merchant#630, cast(no_merchant as string)) AS merchant#114, transaction_type#631, category#632, country_code#633, region#634, coalesce(device_type#635, cast(unknown as string)) AS device_type#115, session_id#636, channel#637, transaction_purpose#638, ip_network#639, recipient_id_hash#640, dt_30#79]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :                       +- Project [transaction_id#625, client_id#626, datetime#627, amount#628, currency#629, merchant#630, transaction_type#631, category#632, country_code#633, region#634, device_type#635, session_id#636, channel#637, transaction_purpose#638, ip_network#639, recipient_id_hash#640, cast(date_trunc(minute, datetime#627, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :                          +- Relation [transaction_id#625,client_id#626,datetime#627,amount#628,currency#629,merchant#630,transaction_type#631,category#632,country_code#633,region#634,device_type#635,session_id#636,channel#637,transaction_purpose#638,ip_network#639,recipient_id_hash#640] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Project [ip_network#655, clients#231, client_pairs#237]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Aggregate [ip_network#655], [ip_network#655, collect_set(client_id#642, 0, 0) AS clients#231]
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :                 +- Filter isnotnull(ip_network#655)
[2025-05-08T19:30:36.907+0000] {spark_submit.py:571} INFO - :        :                    :                 :                    +- Project [transaction_id#641, client_id#642, datetime#643, amount#644, currency#645, coalesce(merchant#646, cast(no_merchant as string)) AS merchant#114, transaction_type#647, category#648, country_code#649, region#650, coalesce(device_type#651, cast(unknown as string)) AS device_type#115, session_id#652, channel#653, transaction_purpose#654, ip_network#655, recipient_id_hash#656, dt_30#79]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                 :                       +- Project [transaction_id#641, client_id#642, datetime#643, amount#644, currency#645, merchant#646, transaction_type#647, category#648, country_code#649, region#650, device_type#651, session_id#652, channel#653, transaction_purpose#654, ip_network#655, recipient_id_hash#656, cast(date_trunc(minute, datetime#643, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                 :                          +- Relation [transaction_id#641,client_id#642,datetime#643,amount#644,currency#645,merchant#646,transaction_type#647,category#648,country_code#649,region#650,device_type#651,session_id#652,channel#653,transaction_purpose#654,ip_network#655,recipient_id_hash#656] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#658, 0, 0) AS clients#287]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                                      +- Project [transaction_id#657, client_id#658, datetime#659, amount#660, currency#661, merchant#114, transaction_type#663, category#664, country_code#665, region#666, device_type#115, session_id#668, channel#669, transaction_purpose#670, ip_network#671, recipient_id_hash#672, dt_30#79, concat(region#666, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                                         +- Filter transaction_type#663 IN (withdrawal)
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                                            +- Project [transaction_id#657, client_id#658, datetime#659, amount#660, currency#661, coalesce(merchant#662, cast(no_merchant as string)) AS merchant#114, transaction_type#663, category#664, country_code#665, region#666, coalesce(device_type#667, cast(unknown as string)) AS device_type#115, session_id#668, channel#669, transaction_purpose#670, ip_network#671, recipient_id_hash#672, dt_30#79]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                                               +- Project [transaction_id#657, client_id#658, datetime#659, amount#660, currency#661, merchant#662, transaction_type#663, category#664, country_code#665, region#666, device_type#667, session_id#668, channel#669, transaction_purpose#670, ip_network#671, recipient_id_hash#672, cast(date_trunc(minute, datetime#659, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    :                                                  +- Relation [transaction_id#657,client_id#658,datetime#659,amount#660,currency#661,merchant#662,transaction_type#663,category#664,country_code#665,region#666,device_type#667,session_id#668,channel#669,transaction_purpose#670,ip_network#671,recipient_id_hash#672] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                    +- Deduplicate [dst#134]
[2025-05-08T19:30:36.908+0000] {spark_submit.py:571} INFO - :        :                       +- Project [dst#134]
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                          +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                             +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                                +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                                   +- Union false, false
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_id#674 AS src#133, recipient_id_hash#688 AS dst#134, p2p AS relationship#135, LOG1P(amount#676) AS weight#136]
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Filter isnotnull(recipient_id_hash#688)
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Filter (transaction_type#679 = p2p)
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Project [transaction_id#673, client_id#674, datetime#675, amount#676, currency#677, coalesce(merchant#678, cast(no_merchant as string)) AS merchant#114, transaction_type#679, category#680, country_code#681, region#682, coalesce(device_type#683, cast(unknown as string)) AS device_type#115, session_id#684, channel#685, transaction_purpose#686, ip_network#687, recipient_id_hash#688, dt_30#79]
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Project [transaction_id#673, client_id#674, datetime#675, amount#676, currency#677, merchant#678, transaction_type#679, category#680, country_code#681, region#682, device_type#683, session_id#684, channel#685, transaction_purpose#686, ip_network#687, recipient_id_hash#688, cast(date_trunc(minute, datetime#675, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Relation [transaction_id#673,client_id#674,datetime#675,amount#676,currency#677,merchant#678,transaction_type#679,category#680,country_code#681,region#682,device_type#683,session_id#684,channel#685,transaction_purpose#686,ip_network#687,recipient_id_hash#688] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.909+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.910+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.910+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.910+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#690, 0, 0) AS clients#159]
[2025-05-08T19:30:36.910+0000] {spark_submit.py:571} INFO - :        :                                      :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.910+0000] {spark_submit.py:571} INFO - :        :                                      :                    +- Project [transaction_id#689, client_id#690, datetime#691, amount#692, currency#693, coalesce(merchant#694, cast(no_merchant as string)) AS merchant#114, transaction_type#695, category#696, country_code#697, region#698, coalesce(device_type#699, cast(unknown as string)) AS device_type#115, session_id#700, channel#701, transaction_purpose#702, ip_network#703, recipient_id_hash#704, dt_30#79]
[2025-05-08T19:30:36.910+0000] {spark_submit.py:571} INFO - :        :                                      :                       +- Project [transaction_id#689, client_id#690, datetime#691, amount#692, currency#693, merchant#694, transaction_type#695, category#696, country_code#697, region#698, device_type#699, session_id#700, channel#701, transaction_purpose#702, ip_network#703, recipient_id_hash#704, cast(date_trunc(minute, datetime#691, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.910+0000] {spark_submit.py:571} INFO - :        :                                      :                          +- Relation [transaction_id#689,client_id#690,datetime#691,amount#692,currency#693,merchant#694,transaction_type#695,category#696,country_code#697,region#698,device_type#699,session_id#700,channel#701,transaction_purpose#702,ip_network#703,recipient_id_hash#704] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.910+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.910+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Project [session_id#716, clients#195, client_pairs#201]
[2025-05-08T19:30:36.910+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.910+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Aggregate [session_id#716], [session_id#716, collect_set(client_id#706, 0, 0) AS clients#195]
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :                 +- Filter isnotnull(session_id#716)
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :                    +- Project [transaction_id#705, client_id#706, datetime#707, amount#708, currency#709, coalesce(merchant#710, cast(no_merchant as string)) AS merchant#114, transaction_type#711, category#712, country_code#713, region#714, coalesce(device_type#715, cast(unknown as string)) AS device_type#115, session_id#716, channel#717, transaction_purpose#718, ip_network#719, recipient_id_hash#720, dt_30#79]
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :                       +- Project [transaction_id#705, client_id#706, datetime#707, amount#708, currency#709, merchant#710, transaction_type#711, category#712, country_code#713, region#714, device_type#715, session_id#716, channel#717, transaction_purpose#718, ip_network#719, recipient_id_hash#720, cast(date_trunc(minute, datetime#707, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :                          +- Relation [transaction_id#705,client_id#706,datetime#707,amount#708,currency#709,merchant#710,transaction_type#711,category#712,country_code#713,region#714,device_type#715,session_id#716,channel#717,transaction_purpose#718,ip_network#719,recipient_id_hash#720] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Project [ip_network#735, clients#231, client_pairs#237]
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Aggregate [ip_network#735], [ip_network#735, collect_set(client_id#722, 0, 0) AS clients#231]
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :                 +- Filter isnotnull(ip_network#735)
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :                    +- Project [transaction_id#721, client_id#722, datetime#723, amount#724, currency#725, coalesce(merchant#726, cast(no_merchant as string)) AS merchant#114, transaction_type#727, category#728, country_code#729, region#730, coalesce(device_type#731, cast(unknown as string)) AS device_type#115, session_id#732, channel#733, transaction_purpose#734, ip_network#735, recipient_id_hash#736, dt_30#79]
[2025-05-08T19:30:36.911+0000] {spark_submit.py:571} INFO - :        :                                      :                       +- Project [transaction_id#721, client_id#722, datetime#723, amount#724, currency#725, merchant#726, transaction_type#727, category#728, country_code#729, region#730, device_type#731, session_id#732, channel#733, transaction_purpose#734, ip_network#735, recipient_id_hash#736, cast(date_trunc(minute, datetime#723, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                      :                          +- Relation [transaction_id#721,client_id#722,datetime#723,amount#724,currency#725,merchant#726,transaction_type#727,category#728,country_code#729,region#730,device_type#731,session_id#732,channel#733,transaction_purpose#734,ip_network#735,recipient_id_hash#736] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                      +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                         +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                            +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                               +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                                  +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                                     +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#738, 0, 0) AS clients#287]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                                        +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                                           +- Project [transaction_id#737, client_id#738, datetime#739, amount#740, currency#741, merchant#114, transaction_type#743, category#744, country_code#745, region#746, device_type#115, session_id#748, channel#749, transaction_purpose#750, ip_network#751, recipient_id_hash#752, dt_30#79, concat(region#746, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                                              +- Filter transaction_type#743 IN (withdrawal)
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                                                 +- Project [transaction_id#737, client_id#738, datetime#739, amount#740, currency#741, coalesce(merchant#742, cast(no_merchant as string)) AS merchant#114, transaction_type#743, category#744, country_code#745, region#746, coalesce(device_type#747, cast(unknown as string)) AS device_type#115, session_id#748, channel#749, transaction_purpose#750, ip_network#751, recipient_id_hash#752, dt_30#79]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                                                    +- Project [transaction_id#737, client_id#738, datetime#739, amount#740, currency#741, merchant#742, transaction_type#743, category#744, country_code#745, region#746, device_type#747, session_id#748, channel#749, transaction_purpose#750, ip_network#751, recipient_id_hash#752, cast(date_trunc(minute, datetime#739, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        :                                                                       +- Relation [transaction_id#737,client_id#738,datetime#739,amount#740,currency#741,merchant#742,transaction_type#743,category#744,country_code#745,region#746,device_type#747,session_id#748,channel#749,transaction_purpose#750,ip_network#751,recipient_id_hash#752] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :        +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :           +- Deduplicate [src#133]
[2025-05-08T19:30:36.912+0000] {spark_submit.py:571} INFO - :              +- Union false, false
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :- Deduplicate [src#133]
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :  +- Project [src#133]
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :              +- Union false, false
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_id#767 AS src#133, recipient_id_hash#781 AS dst#134, p2p AS relationship#135, LOG1P(amount#769) AS weight#136]
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Filter isnotnull(recipient_id_hash#781)
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Filter (transaction_type#772 = p2p)
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Project [transaction_id#766, client_id#767, datetime#768, amount#769, currency#770, coalesce(merchant#771, cast(no_merchant as string)) AS merchant#114, transaction_type#772, category#773, country_code#774, region#775, coalesce(device_type#776, cast(unknown as string)) AS device_type#115, session_id#777, channel#778, transaction_purpose#779, ip_network#780, recipient_id_hash#781, dt_30#79]
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Project [transaction_id#766, client_id#767, datetime#768, amount#769, currency#770, merchant#771, transaction_type#772, category#773, country_code#774, region#775, device_type#776, session_id#777, channel#778, transaction_purpose#779, ip_network#780, recipient_id_hash#781, cast(date_trunc(minute, datetime#768, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Relation [transaction_id#766,client_id#767,datetime#768,amount#769,currency#770,merchant#771,transaction_type#772,category#773,country_code#774,region#775,device_type#776,session_id#777,channel#778,transaction_purpose#779,ip_network#780,recipient_id_hash#781] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.913+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#783, 0, 0) AS clients#159]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :                    +- Project [transaction_id#782, client_id#783, datetime#784, amount#785, currency#786, coalesce(merchant#787, cast(no_merchant as string)) AS merchant#114, transaction_type#788, category#789, country_code#790, region#791, coalesce(device_type#792, cast(unknown as string)) AS device_type#115, session_id#793, channel#794, transaction_purpose#795, ip_network#796, recipient_id_hash#797, dt_30#79]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :                       +- Project [transaction_id#782, client_id#783, datetime#784, amount#785, currency#786, merchant#787, transaction_type#788, category#789, country_code#790, region#791, device_type#792, session_id#793, channel#794, transaction_purpose#795, ip_network#796, recipient_id_hash#797, cast(date_trunc(minute, datetime#784, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :                          +- Relation [transaction_id#782,client_id#783,datetime#784,amount#785,currency#786,merchant#787,transaction_type#788,category#789,country_code#790,region#791,device_type#792,session_id#793,channel#794,transaction_purpose#795,ip_network#796,recipient_id_hash#797] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Project [session_id#809, clients#195, client_pairs#201]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Aggregate [session_id#809], [session_id#809, collect_set(client_id#799, 0, 0) AS clients#195]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :                 +- Filter isnotnull(session_id#809)
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :                    +- Project [transaction_id#798, client_id#799, datetime#800, amount#801, currency#802, coalesce(merchant#803, cast(no_merchant as string)) AS merchant#114, transaction_type#804, category#805, country_code#806, region#807, coalesce(device_type#808, cast(unknown as string)) AS device_type#115, session_id#809, channel#810, transaction_purpose#811, ip_network#812, recipient_id_hash#813, dt_30#79]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :                       +- Project [transaction_id#798, client_id#799, datetime#800, amount#801, currency#802, merchant#803, transaction_type#804, category#805, country_code#806, region#807, device_type#808, session_id#809, channel#810, transaction_purpose#811, ip_network#812, recipient_id_hash#813, cast(date_trunc(minute, datetime#800, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :                          +- Relation [transaction_id#798,client_id#799,datetime#800,amount#801,currency#802,merchant#803,transaction_type#804,category#805,country_code#806,region#807,device_type#808,session_id#809,channel#810,transaction_purpose#811,ip_network#812,recipient_id_hash#813] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Project [ip_network#828, clients#231, client_pairs#237]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.914+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Aggregate [ip_network#828], [ip_network#828, collect_set(client_id#815, 0, 0) AS clients#231]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                 :                 +- Filter isnotnull(ip_network#828)
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                 :                    +- Project [transaction_id#814, client_id#815, datetime#816, amount#817, currency#818, coalesce(merchant#819, cast(no_merchant as string)) AS merchant#114, transaction_type#820, category#821, country_code#822, region#823, coalesce(device_type#824, cast(unknown as string)) AS device_type#115, session_id#825, channel#826, transaction_purpose#827, ip_network#828, recipient_id_hash#829, dt_30#79]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                 :                       +- Project [transaction_id#814, client_id#815, datetime#816, amount#817, currency#818, merchant#819, transaction_type#820, category#821, country_code#822, region#823, device_type#824, session_id#825, channel#826, transaction_purpose#827, ip_network#828, recipient_id_hash#829, cast(date_trunc(minute, datetime#816, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                 :                          +- Relation [transaction_id#814,client_id#815,datetime#816,amount#817,currency#818,merchant#819,transaction_type#820,category#821,country_code#822,region#823,device_type#824,session_id#825,channel#826,transaction_purpose#827,ip_network#828,recipient_id_hash#829] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#831, 0, 0) AS clients#287]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                                      +- Project [transaction_id#830, client_id#831, datetime#832, amount#833, currency#834, merchant#114, transaction_type#836, category#837, country_code#838, region#839, device_type#115, session_id#841, channel#842, transaction_purpose#843, ip_network#844, recipient_id_hash#845, dt_30#79, concat(region#839, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                                         +- Filter transaction_type#836 IN (withdrawal)
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                                            +- Project [transaction_id#830, client_id#831, datetime#832, amount#833, currency#834, coalesce(merchant#835, cast(no_merchant as string)) AS merchant#114, transaction_type#836, category#837, country_code#838, region#839, coalesce(device_type#840, cast(unknown as string)) AS device_type#115, session_id#841, channel#842, transaction_purpose#843, ip_network#844, recipient_id_hash#845, dt_30#79]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                                               +- Project [transaction_id#830, client_id#831, datetime#832, amount#833, currency#834, merchant#835, transaction_type#836, category#837, country_code#838, region#839, device_type#840, session_id#841, channel#842, transaction_purpose#843, ip_network#844, recipient_id_hash#845, cast(date_trunc(minute, datetime#832, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 :                                                  +- Relation [transaction_id#830,client_id#831,datetime#832,amount#833,currency#834,merchant#835,transaction_type#836,category#837,country_code#838,region#839,device_type#840,session_id#841,channel#842,transaction_purpose#843,ip_network#844,recipient_id_hash#845] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                 +- Deduplicate [dst#134]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                    +- Project [dst#134]
[2025-05-08T19:30:36.915+0000] {spark_submit.py:571} INFO - :                       +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                          +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                             +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                +- Union false, false
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_id#847 AS src#133, recipient_id_hash#861 AS dst#134, p2p AS relationship#135, LOG1P(amount#849) AS weight#136]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :  +- Filter isnotnull(recipient_id_hash#861)
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :     +- Filter (transaction_type#852 = p2p)
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :        +- Project [transaction_id#846, client_id#847, datetime#848, amount#849, currency#850, coalesce(merchant#851, cast(no_merchant as string)) AS merchant#114, transaction_type#852, category#853, country_code#854, region#855, coalesce(device_type#856, cast(unknown as string)) AS device_type#115, session_id#857, channel#858, transaction_purpose#859, ip_network#860, recipient_id_hash#861, dt_30#79]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :           +- Project [transaction_id#846, client_id#847, datetime#848, amount#849, currency#850, merchant#851, transaction_type#852, category#853, country_code#854, region#855, device_type#856, session_id#857, channel#858, transaction_purpose#859, ip_network#860, recipient_id_hash#861, cast(date_trunc(minute, datetime#848, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :              +- Relation [transaction_id#846,client_id#847,datetime#848,amount#849,currency#850,merchant#851,transaction_type#852,category#853,country_code#854,region#855,device_type#856,session_id#857,channel#858,transaction_purpose#859,ip_network#860,recipient_id_hash#861] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#863, 0, 0) AS clients#159]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :                    +- Project [transaction_id#862, client_id#863, datetime#864, amount#865, currency#866, coalesce(merchant#867, cast(no_merchant as string)) AS merchant#114, transaction_type#868, category#869, country_code#870, region#871, coalesce(device_type#872, cast(unknown as string)) AS device_type#115, session_id#873, channel#874, transaction_purpose#875, ip_network#876, recipient_id_hash#877, dt_30#79]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :                       +- Project [transaction_id#862, client_id#863, datetime#864, amount#865, currency#866, merchant#867, transaction_type#868, category#869, country_code#870, region#871, device_type#872, session_id#873, channel#874, transaction_purpose#875, ip_network#876, recipient_id_hash#877, cast(date_trunc(minute, datetime#864, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :                          +- Relation [transaction_id#862,client_id#863,datetime#864,amount#865,currency#866,merchant#867,transaction_type#868,category#869,country_code#870,region#871,device_type#872,session_id#873,channel#874,transaction_purpose#875,ip_network#876,recipient_id_hash#877] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.916+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :  +- Project [session_id#889, clients#195, client_pairs#201]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :              +- Aggregate [session_id#889], [session_id#889, collect_set(client_id#879, 0, 0) AS clients#195]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :                 +- Filter isnotnull(session_id#889)
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :                    +- Project [transaction_id#878, client_id#879, datetime#880, amount#881, currency#882, coalesce(merchant#883, cast(no_merchant as string)) AS merchant#114, transaction_type#884, category#885, country_code#886, region#887, coalesce(device_type#888, cast(unknown as string)) AS device_type#115, session_id#889, channel#890, transaction_purpose#891, ip_network#892, recipient_id_hash#893, dt_30#79]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :                       +- Project [transaction_id#878, client_id#879, datetime#880, amount#881, currency#882, merchant#883, transaction_type#884, category#885, country_code#886, region#887, device_type#888, session_id#889, channel#890, transaction_purpose#891, ip_network#892, recipient_id_hash#893, cast(date_trunc(minute, datetime#880, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :                          +- Relation [transaction_id#878,client_id#879,datetime#880,amount#881,currency#882,merchant#883,transaction_type#884,category#885,country_code#886,region#887,device_type#888,session_id#889,channel#890,transaction_purpose#891,ip_network#892,recipient_id_hash#893] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :  +- Project [ip_network#908, clients#231, client_pairs#237]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :              +- Aggregate [ip_network#908], [ip_network#908, collect_set(client_id#895, 0, 0) AS clients#231]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :                 +- Filter isnotnull(ip_network#908)
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :                    +- Project [transaction_id#894, client_id#895, datetime#896, amount#897, currency#898, coalesce(merchant#899, cast(no_merchant as string)) AS merchant#114, transaction_type#900, category#901, country_code#902, region#903, coalesce(device_type#904, cast(unknown as string)) AS device_type#115, session_id#905, channel#906, transaction_purpose#907, ip_network#908, recipient_id_hash#909, dt_30#79]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :                       +- Project [transaction_id#894, client_id#895, datetime#896, amount#897, currency#898, merchant#899, transaction_type#900, category#901, country_code#902, region#903, device_type#904, session_id#905, channel#906, transaction_purpose#907, ip_network#908, recipient_id_hash#909, cast(date_trunc(minute, datetime#896, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.917+0000] {spark_submit.py:571} INFO - :                                   :                          +- Relation [transaction_id#894,client_id#895,datetime#896,amount#897,currency#898,merchant#899,transaction_type#900,category#901,country_code#902,region#903,device_type#904,session_id#905,channel#906,transaction_purpose#907,ip_network#908,recipient_id_hash#909] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                   +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                      +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                         +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                            +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                               +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                                  +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#911, 0, 0) AS clients#287]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                                     +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                                        +- Project [transaction_id#910, client_id#911, datetime#912, amount#913, currency#914, merchant#114, transaction_type#916, category#917, country_code#918, region#919, device_type#115, session_id#921, channel#922, transaction_purpose#923, ip_network#924, recipient_id_hash#925, dt_30#79, concat(region#919, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                                           +- Filter transaction_type#916 IN (withdrawal)
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                                              +- Project [transaction_id#910, client_id#911, datetime#912, amount#913, currency#914, coalesce(merchant#915, cast(no_merchant as string)) AS merchant#114, transaction_type#916, category#917, country_code#918, region#919, coalesce(device_type#920, cast(unknown as string)) AS device_type#115, session_id#921, channel#922, transaction_purpose#923, ip_network#924, recipient_id_hash#925, dt_30#79]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                                                 +- Project [transaction_id#910, client_id#911, datetime#912, amount#913, currency#914, merchant#915, transaction_type#916, category#917, country_code#918, region#919, device_type#920, session_id#921, channel#922, transaction_purpose#923, ip_network#924, recipient_id_hash#925, cast(date_trunc(minute, datetime#912, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :                                                                    +- Relation [transaction_id#910,client_id#911,datetime#912,amount#913,currency#914,merchant#915,transaction_type#916,category#917,country_code#918,region#919,device_type#920,session_id#921,channel#922,transaction_purpose#923,ip_network#924,recipient_id_hash#925] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - +- Project [MSG#930, id#931]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - +- Project [id#931, MSG#930]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - +- Join Inner, (id#931 = id#486)
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :- Project [edge#499.weight AS MSG#930, dst#503.id AS id#931]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :  +- Project [src#501, edge#499, dst#503]
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :     +- Join Inner, (edge#499.dst = dst#503.id)
[2025-05-08T19:30:36.918+0000] {spark_submit.py:571} INFO - :        :- Join Inner, (edge#499.src = src#501.id)
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :- Project [struct(src, src#133, dst, dst#134, weight, weight#390, relationships, relationships#392, relationships_str, relationships_str#397) AS edge#499]
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :  +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :     +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :        +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :           +- Union false, false
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_id#1099 AS src#133, recipient_id_hash#1113 AS dst#134, p2p AS relationship#135, LOG1P(amount#1101) AS weight#136]
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Filter isnotnull(recipient_id_hash#1113)
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Filter (transaction_type#1104 = p2p)
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Project [transaction_id#1098, client_id#1099, datetime#1100, amount#1101, currency#1102, coalesce(merchant#1103, cast(no_merchant as string)) AS merchant#114, transaction_type#1104, category#1105, country_code#1106, region#1107, coalesce(device_type#1108, cast(unknown as string)) AS device_type#115, session_id#1109, channel#1110, transaction_purpose#1111, ip_network#1112, recipient_id_hash#1113, dt_30#79]
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Project [transaction_id#1098, client_id#1099, datetime#1100, amount#1101, currency#1102, merchant#1103, transaction_type#1104, category#1105, country_code#1106, region#1107, device_type#1108, session_id#1109, channel#1110, transaction_purpose#1111, ip_network#1112, recipient_id_hash#1113, cast(date_trunc(minute, datetime#1100, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Relation [transaction_id#1098,client_id#1099,datetime#1100,amount#1101,currency#1102,merchant#1103,transaction_type#1104,category#1105,country_code#1106,region#1107,device_type#1108,session_id#1109,channel#1110,transaction_purpose#1111,ip_network#1112,recipient_id_hash#1113] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1115, 0, 0) AS clients#159]
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.919+0000] {spark_submit.py:571} INFO - :        :  :              :                    +- Project [transaction_id#1114, client_id#1115, datetime#1116, amount#1117, currency#1118, coalesce(merchant#1119, cast(no_merchant as string)) AS merchant#114, transaction_type#1120, category#1121, country_code#1122, region#1123, coalesce(device_type#1124, cast(unknown as string)) AS device_type#115, session_id#1125, channel#1126, transaction_purpose#1127, ip_network#1128, recipient_id_hash#1129, dt_30#79]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :                       +- Project [transaction_id#1114, client_id#1115, datetime#1116, amount#1117, currency#1118, merchant#1119, transaction_type#1120, category#1121, country_code#1122, region#1123, device_type#1124, session_id#1125, channel#1126, transaction_purpose#1127, ip_network#1128, recipient_id_hash#1129, cast(date_trunc(minute, datetime#1116, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :                          +- Relation [transaction_id#1114,client_id#1115,datetime#1116,amount#1117,currency#1118,merchant#1119,transaction_type#1120,category#1121,country_code#1122,region#1123,device_type#1124,session_id#1125,channel#1126,transaction_purpose#1127,ip_network#1128,recipient_id_hash#1129] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Project [session_id#1141, clients#195, client_pairs#201]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Aggregate [session_id#1141], [session_id#1141, collect_set(client_id#1131, 0, 0) AS clients#195]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :                 +- Filter isnotnull(session_id#1141)
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :                    +- Project [transaction_id#1130, client_id#1131, datetime#1132, amount#1133, currency#1134, coalesce(merchant#1135, cast(no_merchant as string)) AS merchant#114, transaction_type#1136, category#1137, country_code#1138, region#1139, coalesce(device_type#1140, cast(unknown as string)) AS device_type#115, session_id#1141, channel#1142, transaction_purpose#1143, ip_network#1144, recipient_id_hash#1145, dt_30#79]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :                       +- Project [transaction_id#1130, client_id#1131, datetime#1132, amount#1133, currency#1134, merchant#1135, transaction_type#1136, category#1137, country_code#1138, region#1139, device_type#1140, session_id#1141, channel#1142, transaction_purpose#1143, ip_network#1144, recipient_id_hash#1145, cast(date_trunc(minute, datetime#1132, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :                          +- Relation [transaction_id#1130,client_id#1131,datetime#1132,amount#1133,currency#1134,merchant#1135,transaction_type#1136,category#1137,country_code#1138,region#1139,device_type#1140,session_id#1141,channel#1142,transaction_purpose#1143,ip_network#1144,recipient_id_hash#1145] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Project [ip_network#1160, clients#231, client_pairs#237]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Aggregate [ip_network#1160], [ip_network#1160, collect_set(client_id#1147, 0, 0) AS clients#231]
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :                 +- Filter isnotnull(ip_network#1160)
[2025-05-08T19:30:36.920+0000] {spark_submit.py:571} INFO - :        :  :              :                    +- Project [transaction_id#1146, client_id#1147, datetime#1148, amount#1149, currency#1150, coalesce(merchant#1151, cast(no_merchant as string)) AS merchant#114, transaction_type#1152, category#1153, country_code#1154, region#1155, coalesce(device_type#1156, cast(unknown as string)) AS device_type#115, session_id#1157, channel#1158, transaction_purpose#1159, ip_network#1160, recipient_id_hash#1161, dt_30#79]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :              :                       +- Project [transaction_id#1146, client_id#1147, datetime#1148, amount#1149, currency#1150, merchant#1151, transaction_type#1152, category#1153, country_code#1154, region#1155, device_type#1156, session_id#1157, channel#1158, transaction_purpose#1159, ip_network#1160, recipient_id_hash#1161, cast(date_trunc(minute, datetime#1148, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :              :                          +- Relation [transaction_id#1146,client_id#1147,datetime#1148,amount#1149,currency#1150,merchant#1151,transaction_type#1152,category#1153,country_code#1154,region#1155,device_type#1156,session_id#1157,channel#1158,transaction_purpose#1159,ip_network#1160,recipient_id_hash#1161] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :              +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :                 +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :                    +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :                       +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :                          +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :                             +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1163, 0, 0) AS clients#287]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :                                +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :                                   +- Project [transaction_id#1162, client_id#1163, datetime#1164, amount#1165, currency#1166, merchant#114, transaction_type#1168, category#1169, country_code#1170, region#1171, device_type#115, session_id#1173, channel#1174, transaction_purpose#1175, ip_network#1176, recipient_id_hash#1177, dt_30#79, concat(region#1171, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :                                      +- Filter transaction_type#1168 IN (withdrawal)
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :                                         +- Project [transaction_id#1162, client_id#1163, datetime#1164, amount#1165, currency#1166, coalesce(merchant#1167, cast(no_merchant as string)) AS merchant#114, transaction_type#1168, category#1169, country_code#1170, region#1171, coalesce(device_type#1172, cast(unknown as string)) AS device_type#115, session_id#1173, channel#1174, transaction_purpose#1175, ip_network#1176, recipient_id_hash#1177, dt_30#79]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :                                            +- Project [transaction_id#1162, client_id#1163, datetime#1164, amount#1165, currency#1166, merchant#1167, transaction_type#1168, category#1169, country_code#1170, region#1171, device_type#1172, session_id#1173, channel#1174, transaction_purpose#1175, ip_network#1176, recipient_id_hash#1177, cast(date_trunc(minute, datetime#1164, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  :                                               +- Relation [transaction_id#1162,client_id#1163,datetime#1164,amount#1165,currency#1166,merchant#1167,transaction_type#1168,category#1169,country_code#1170,region#1171,device_type#1172,session_id#1173,channel#1174,transaction_purpose#1175,ip_network#1176,recipient_id_hash#1177] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :  +- Project [struct(id, id#486) AS src#501]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :     +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :        +- Deduplicate [src#133]
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :           +- Union false, false
[2025-05-08T19:30:36.921+0000] {spark_submit.py:571} INFO - :        :              :- Deduplicate [src#133]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :  +- Project [src#133]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :              +- Union false, false
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_id#1179 AS src#133, recipient_id_hash#1193 AS dst#134, p2p AS relationship#135, LOG1P(amount#1181) AS weight#136]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Filter isnotnull(recipient_id_hash#1193)
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Filter (transaction_type#1184 = p2p)
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Project [transaction_id#1178, client_id#1179, datetime#1180, amount#1181, currency#1182, coalesce(merchant#1183, cast(no_merchant as string)) AS merchant#114, transaction_type#1184, category#1185, country_code#1186, region#1187, coalesce(device_type#1188, cast(unknown as string)) AS device_type#115, session_id#1189, channel#1190, transaction_purpose#1191, ip_network#1192, recipient_id_hash#1193, dt_30#79]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Project [transaction_id#1178, client_id#1179, datetime#1180, amount#1181, currency#1182, merchant#1183, transaction_type#1184, category#1185, country_code#1186, region#1187, device_type#1188, session_id#1189, channel#1190, transaction_purpose#1191, ip_network#1192, recipient_id_hash#1193, cast(date_trunc(minute, datetime#1180, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Relation [transaction_id#1178,client_id#1179,datetime#1180,amount#1181,currency#1182,merchant#1183,transaction_type#1184,category#1185,country_code#1186,region#1187,device_type#1188,session_id#1189,channel#1190,transaction_purpose#1191,ip_network#1192,recipient_id_hash#1193] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1195, 0, 0) AS clients#159]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :                    +- Project [transaction_id#1194, client_id#1195, datetime#1196, amount#1197, currency#1198, coalesce(merchant#1199, cast(no_merchant as string)) AS merchant#114, transaction_type#1200, category#1201, country_code#1202, region#1203, coalesce(device_type#1204, cast(unknown as string)) AS device_type#115, session_id#1205, channel#1206, transaction_purpose#1207, ip_network#1208, recipient_id_hash#1209, dt_30#79]
[2025-05-08T19:30:36.922+0000] {spark_submit.py:571} INFO - :        :              :                 :                       +- Project [transaction_id#1194, client_id#1195, datetime#1196, amount#1197, currency#1198, merchant#1199, transaction_type#1200, category#1201, country_code#1202, region#1203, device_type#1204, session_id#1205, channel#1206, transaction_purpose#1207, ip_network#1208, recipient_id_hash#1209, cast(date_trunc(minute, datetime#1196, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :                          +- Relation [transaction_id#1194,client_id#1195,datetime#1196,amount#1197,currency#1198,merchant#1199,transaction_type#1200,category#1201,country_code#1202,region#1203,device_type#1204,session_id#1205,channel#1206,transaction_purpose#1207,ip_network#1208,recipient_id_hash#1209] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Project [session_id#1221, clients#195, client_pairs#201]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Aggregate [session_id#1221], [session_id#1221, collect_set(client_id#1211, 0, 0) AS clients#195]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :                 +- Filter isnotnull(session_id#1221)
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :                    +- Project [transaction_id#1210, client_id#1211, datetime#1212, amount#1213, currency#1214, coalesce(merchant#1215, cast(no_merchant as string)) AS merchant#114, transaction_type#1216, category#1217, country_code#1218, region#1219, coalesce(device_type#1220, cast(unknown as string)) AS device_type#115, session_id#1221, channel#1222, transaction_purpose#1223, ip_network#1224, recipient_id_hash#1225, dt_30#79]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :                       +- Project [transaction_id#1210, client_id#1211, datetime#1212, amount#1213, currency#1214, merchant#1215, transaction_type#1216, category#1217, country_code#1218, region#1219, device_type#1220, session_id#1221, channel#1222, transaction_purpose#1223, ip_network#1224, recipient_id_hash#1225, cast(date_trunc(minute, datetime#1212, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :                          +- Relation [transaction_id#1210,client_id#1211,datetime#1212,amount#1213,currency#1214,merchant#1215,transaction_type#1216,category#1217,country_code#1218,region#1219,device_type#1220,session_id#1221,channel#1222,transaction_purpose#1223,ip_network#1224,recipient_id_hash#1225] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Project [ip_network#1240, clients#231, client_pairs#237]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Aggregate [ip_network#1240], [ip_network#1240, collect_set(client_id#1227, 0, 0) AS clients#231]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :                 +- Filter isnotnull(ip_network#1240)
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :                    +- Project [transaction_id#1226, client_id#1227, datetime#1228, amount#1229, currency#1230, coalesce(merchant#1231, cast(no_merchant as string)) AS merchant#114, transaction_type#1232, category#1233, country_code#1234, region#1235, coalesce(device_type#1236, cast(unknown as string)) AS device_type#115, session_id#1237, channel#1238, transaction_purpose#1239, ip_network#1240, recipient_id_hash#1241, dt_30#79]
[2025-05-08T19:30:36.923+0000] {spark_submit.py:571} INFO - :        :              :                 :                       +- Project [transaction_id#1226, client_id#1227, datetime#1228, amount#1229, currency#1230, merchant#1231, transaction_type#1232, category#1233, country_code#1234, region#1235, device_type#1236, session_id#1237, channel#1238, transaction_purpose#1239, ip_network#1240, recipient_id_hash#1241, cast(date_trunc(minute, datetime#1228, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                 :                          +- Relation [transaction_id#1226,client_id#1227,datetime#1228,amount#1229,currency#1230,merchant#1231,transaction_type#1232,category#1233,country_code#1234,region#1235,device_type#1236,session_id#1237,channel#1238,transaction_purpose#1239,ip_network#1240,recipient_id_hash#1241] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1243, 0, 0) AS clients#287]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                                      +- Project [transaction_id#1242, client_id#1243, datetime#1244, amount#1245, currency#1246, merchant#114, transaction_type#1248, category#1249, country_code#1250, region#1251, device_type#115, session_id#1253, channel#1254, transaction_purpose#1255, ip_network#1256, recipient_id_hash#1257, dt_30#79, concat(region#1251, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                                         +- Filter transaction_type#1248 IN (withdrawal)
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                                            +- Project [transaction_id#1242, client_id#1243, datetime#1244, amount#1245, currency#1246, coalesce(merchant#1247, cast(no_merchant as string)) AS merchant#114, transaction_type#1248, category#1249, country_code#1250, region#1251, coalesce(device_type#1252, cast(unknown as string)) AS device_type#115, session_id#1253, channel#1254, transaction_purpose#1255, ip_network#1256, recipient_id_hash#1257, dt_30#79]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                                               +- Project [transaction_id#1242, client_id#1243, datetime#1244, amount#1245, currency#1246, merchant#1247, transaction_type#1248, category#1249, country_code#1250, region#1251, device_type#1252, session_id#1253, channel#1254, transaction_purpose#1255, ip_network#1256, recipient_id_hash#1257, cast(date_trunc(minute, datetime#1244, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              :                                                  +- Relation [transaction_id#1242,client_id#1243,datetime#1244,amount#1245,currency#1246,merchant#1247,transaction_type#1248,category#1249,country_code#1250,region#1251,device_type#1252,session_id#1253,channel#1254,transaction_purpose#1255,ip_network#1256,recipient_id_hash#1257] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :              +- Deduplicate [dst#134]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :                 +- Project [dst#134]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :                    +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :                       +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.924+0000] {spark_submit.py:571} INFO - :        :                          +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                             +- Union false, false
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_id#1259 AS src#133, recipient_id_hash#1273 AS dst#134, p2p AS relationship#135, LOG1P(amount#1261) AS weight#136]
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :  +- Filter isnotnull(recipient_id_hash#1273)
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :     +- Filter (transaction_type#1264 = p2p)
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :        +- Project [transaction_id#1258, client_id#1259, datetime#1260, amount#1261, currency#1262, coalesce(merchant#1263, cast(no_merchant as string)) AS merchant#114, transaction_type#1264, category#1265, country_code#1266, region#1267, coalesce(device_type#1268, cast(unknown as string)) AS device_type#115, session_id#1269, channel#1270, transaction_purpose#1271, ip_network#1272, recipient_id_hash#1273, dt_30#79]
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :           +- Project [transaction_id#1258, client_id#1259, datetime#1260, amount#1261, currency#1262, merchant#1263, transaction_type#1264, category#1265, country_code#1266, region#1267, device_type#1268, session_id#1269, channel#1270, transaction_purpose#1271, ip_network#1272, recipient_id_hash#1273, cast(date_trunc(minute, datetime#1260, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :              +- Relation [transaction_id#1258,client_id#1259,datetime#1260,amount#1261,currency#1262,merchant#1263,transaction_type#1264,category#1265,country_code#1266,region#1267,device_type#1268,session_id#1269,channel#1270,transaction_purpose#1271,ip_network#1272,recipient_id_hash#1273] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1275, 0, 0) AS clients#159]
[2025-05-08T19:30:36.925+0000] {spark_submit.py:571} INFO - :        :                                :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :                    +- Project [transaction_id#1274, client_id#1275, datetime#1276, amount#1277, currency#1278, coalesce(merchant#1279, cast(no_merchant as string)) AS merchant#114, transaction_type#1280, category#1281, country_code#1282, region#1283, coalesce(device_type#1284, cast(unknown as string)) AS device_type#115, session_id#1285, channel#1286, transaction_purpose#1287, ip_network#1288, recipient_id_hash#1289, dt_30#79]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :                       +- Project [transaction_id#1274, client_id#1275, datetime#1276, amount#1277, currency#1278, merchant#1279, transaction_type#1280, category#1281, country_code#1282, region#1283, device_type#1284, session_id#1285, channel#1286, transaction_purpose#1287, ip_network#1288, recipient_id_hash#1289, cast(date_trunc(minute, datetime#1276, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :                          +- Relation [transaction_id#1274,client_id#1275,datetime#1276,amount#1277,currency#1278,merchant#1279,transaction_type#1280,category#1281,country_code#1282,region#1283,device_type#1284,session_id#1285,channel#1286,transaction_purpose#1287,ip_network#1288,recipient_id_hash#1289] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :  +- Project [session_id#1301, clients#195, client_pairs#201]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :              +- Aggregate [session_id#1301], [session_id#1301, collect_set(client_id#1291, 0, 0) AS clients#195]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :                 +- Filter isnotnull(session_id#1301)
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :                    +- Project [transaction_id#1290, client_id#1291, datetime#1292, amount#1293, currency#1294, coalesce(merchant#1295, cast(no_merchant as string)) AS merchant#114, transaction_type#1296, category#1297, country_code#1298, region#1299, coalesce(device_type#1300, cast(unknown as string)) AS device_type#115, session_id#1301, channel#1302, transaction_purpose#1303, ip_network#1304, recipient_id_hash#1305, dt_30#79]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :                       +- Project [transaction_id#1290, client_id#1291, datetime#1292, amount#1293, currency#1294, merchant#1295, transaction_type#1296, category#1297, country_code#1298, region#1299, device_type#1300, session_id#1301, channel#1302, transaction_purpose#1303, ip_network#1304, recipient_id_hash#1305, cast(date_trunc(minute, datetime#1292, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :                          +- Relation [transaction_id#1290,client_id#1291,datetime#1292,amount#1293,currency#1294,merchant#1295,transaction_type#1296,category#1297,country_code#1298,region#1299,device_type#1300,session_id#1301,channel#1302,transaction_purpose#1303,ip_network#1304,recipient_id_hash#1305] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :  +- Project [ip_network#1320, clients#231, client_pairs#237]
[2025-05-08T19:30:36.926+0000] {spark_submit.py:571} INFO - :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                :              +- Aggregate [ip_network#1320], [ip_network#1320, collect_set(client_id#1307, 0, 0) AS clients#231]
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                :                 +- Filter isnotnull(ip_network#1320)
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                :                    +- Project [transaction_id#1306, client_id#1307, datetime#1308, amount#1309, currency#1310, coalesce(merchant#1311, cast(no_merchant as string)) AS merchant#114, transaction_type#1312, category#1313, country_code#1314, region#1315, coalesce(device_type#1316, cast(unknown as string)) AS device_type#115, session_id#1317, channel#1318, transaction_purpose#1319, ip_network#1320, recipient_id_hash#1321, dt_30#79]
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                :                       +- Project [transaction_id#1306, client_id#1307, datetime#1308, amount#1309, currency#1310, merchant#1311, transaction_type#1312, category#1313, country_code#1314, region#1315, device_type#1316, session_id#1317, channel#1318, transaction_purpose#1319, ip_network#1320, recipient_id_hash#1321, cast(date_trunc(minute, datetime#1308, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                :                          +- Relation [transaction_id#1306,client_id#1307,datetime#1308,amount#1309,currency#1310,merchant#1311,transaction_type#1312,category#1313,country_code#1314,region#1315,device_type#1316,session_id#1317,channel#1318,transaction_purpose#1319,ip_network#1320,recipient_id_hash#1321] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                   +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                      +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                         +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                            +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                               +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1323, 0, 0) AS clients#287]
[2025-05-08T19:30:36.927+0000] {spark_submit.py:571} INFO - :        :                                                  +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :        :                                                     +- Project [transaction_id#1322, client_id#1323, datetime#1324, amount#1325, currency#1326, merchant#114, transaction_type#1328, category#1329, country_code#1330, region#1331, device_type#115, session_id#1333, channel#1334, transaction_purpose#1335, ip_network#1336, recipient_id_hash#1337, dt_30#79, concat(region#1331, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :        :                                                        +- Filter transaction_type#1328 IN (withdrawal)
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :        :                                                           +- Project [transaction_id#1322, client_id#1323, datetime#1324, amount#1325, currency#1326, coalesce(merchant#1327, cast(no_merchant as string)) AS merchant#114, transaction_type#1328, category#1329, country_code#1330, region#1331, coalesce(device_type#1332, cast(unknown as string)) AS device_type#115, session_id#1333, channel#1334, transaction_purpose#1335, ip_network#1336, recipient_id_hash#1337, dt_30#79]
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :        :                                                              +- Project [transaction_id#1322, client_id#1323, datetime#1324, amount#1325, currency#1326, merchant#1327, transaction_type#1328, category#1329, country_code#1330, region#1331, device_type#1332, session_id#1333, channel#1334, transaction_purpose#1335, ip_network#1336, recipient_id_hash#1337, cast(date_trunc(minute, datetime#1324, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :        :                                                                 +- Relation [transaction_id#1322,client_id#1323,datetime#1324,amount#1325,currency#1326,merchant#1327,transaction_type#1328,category#1329,country_code#1330,region#1331,device_type#1332,session_id#1333,channel#1334,transaction_purpose#1335,ip_network#1336,recipient_id_hash#1337] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :        +- Project [struct(id, id#486) AS dst#503]
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :           +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :              +- Deduplicate [src#133]
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :                 +- Union false, false
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :                    :- Deduplicate [src#133]
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :                    :  +- Project [src#133]
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :                    :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :                    :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.928+0000] {spark_submit.py:571} INFO - :                    :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :              +- Union false, false
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_id#1339 AS src#133, recipient_id_hash#1353 AS dst#134, p2p AS relationship#135, LOG1P(amount#1341) AS weight#136]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Filter isnotnull(recipient_id_hash#1353)
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Filter (transaction_type#1344 = p2p)
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Project [transaction_id#1338, client_id#1339, datetime#1340, amount#1341, currency#1342, coalesce(merchant#1343, cast(no_merchant as string)) AS merchant#114, transaction_type#1344, category#1345, country_code#1346, region#1347, coalesce(device_type#1348, cast(unknown as string)) AS device_type#115, session_id#1349, channel#1350, transaction_purpose#1351, ip_network#1352, recipient_id_hash#1353, dt_30#79]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Project [transaction_id#1338, client_id#1339, datetime#1340, amount#1341, currency#1342, merchant#1343, transaction_type#1344, category#1345, country_code#1346, region#1347, device_type#1348, session_id#1349, channel#1350, transaction_purpose#1351, ip_network#1352, recipient_id_hash#1353, cast(date_trunc(minute, datetime#1340, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Relation [transaction_id#1338,client_id#1339,datetime#1340,amount#1341,currency#1342,merchant#1343,transaction_type#1344,category#1345,country_code#1346,region#1347,device_type#1348,session_id#1349,channel#1350,transaction_purpose#1351,ip_network#1352,recipient_id_hash#1353] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1355, 0, 0) AS clients#159]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :                    +- Project [transaction_id#1354, client_id#1355, datetime#1356, amount#1357, currency#1358, coalesce(merchant#1359, cast(no_merchant as string)) AS merchant#114, transaction_type#1360, category#1361, country_code#1362, region#1363, coalesce(device_type#1364, cast(unknown as string)) AS device_type#115, session_id#1365, channel#1366, transaction_purpose#1367, ip_network#1368, recipient_id_hash#1369, dt_30#79]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :                       +- Project [transaction_id#1354, client_id#1355, datetime#1356, amount#1357, currency#1358, merchant#1359, transaction_type#1360, category#1361, country_code#1362, region#1363, device_type#1364, session_id#1365, channel#1366, transaction_purpose#1367, ip_network#1368, recipient_id_hash#1369, cast(date_trunc(minute, datetime#1356, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :                          +- Relation [transaction_id#1354,client_id#1355,datetime#1356,amount#1357,currency#1358,merchant#1359,transaction_type#1360,category#1361,country_code#1362,region#1363,device_type#1364,session_id#1365,channel#1366,transaction_purpose#1367,ip_network#1368,recipient_id_hash#1369] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.929+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Project [session_id#1381, clients#195, client_pairs#201]
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Aggregate [session_id#1381], [session_id#1381, collect_set(client_id#1371, 0, 0) AS clients#195]
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :                 +- Filter isnotnull(session_id#1381)
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :                    +- Project [transaction_id#1370, client_id#1371, datetime#1372, amount#1373, currency#1374, coalesce(merchant#1375, cast(no_merchant as string)) AS merchant#114, transaction_type#1376, category#1377, country_code#1378, region#1379, coalesce(device_type#1380, cast(unknown as string)) AS device_type#115, session_id#1381, channel#1382, transaction_purpose#1383, ip_network#1384, recipient_id_hash#1385, dt_30#79]
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :                       +- Project [transaction_id#1370, client_id#1371, datetime#1372, amount#1373, currency#1374, merchant#1375, transaction_type#1376, category#1377, country_code#1378, region#1379, device_type#1380, session_id#1381, channel#1382, transaction_purpose#1383, ip_network#1384, recipient_id_hash#1385, cast(date_trunc(minute, datetime#1372, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :                          +- Relation [transaction_id#1370,client_id#1371,datetime#1372,amount#1373,currency#1374,merchant#1375,transaction_type#1376,category#1377,country_code#1378,region#1379,device_type#1380,session_id#1381,channel#1382,transaction_purpose#1383,ip_network#1384,recipient_id_hash#1385] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Project [ip_network#1400, clients#231, client_pairs#237]
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.930+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Aggregate [ip_network#1400], [ip_network#1400, collect_set(client_id#1387, 0, 0) AS clients#231]
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                 :                 +- Filter isnotnull(ip_network#1400)
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                 :                    +- Project [transaction_id#1386, client_id#1387, datetime#1388, amount#1389, currency#1390, coalesce(merchant#1391, cast(no_merchant as string)) AS merchant#114, transaction_type#1392, category#1393, country_code#1394, region#1395, coalesce(device_type#1396, cast(unknown as string)) AS device_type#115, session_id#1397, channel#1398, transaction_purpose#1399, ip_network#1400, recipient_id_hash#1401, dt_30#79]
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                 :                       +- Project [transaction_id#1386, client_id#1387, datetime#1388, amount#1389, currency#1390, merchant#1391, transaction_type#1392, category#1393, country_code#1394, region#1395, device_type#1396, session_id#1397, channel#1398, transaction_purpose#1399, ip_network#1400, recipient_id_hash#1401, cast(date_trunc(minute, datetime#1388, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                 :                          +- Relation [transaction_id#1386,client_id#1387,datetime#1388,amount#1389,currency#1390,merchant#1391,transaction_type#1392,category#1393,country_code#1394,region#1395,device_type#1396,session_id#1397,channel#1398,transaction_purpose#1399,ip_network#1400,recipient_id_hash#1401] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1403, 0, 0) AS clients#287]
[2025-05-08T19:30:36.931+0000] {spark_submit.py:571} INFO - :                    :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                    :                                      +- Project [transaction_id#1402, client_id#1403, datetime#1404, amount#1405, currency#1406, merchant#114, transaction_type#1408, category#1409, country_code#1410, region#1411, device_type#115, session_id#1413, channel#1414, transaction_purpose#1415, ip_network#1416, recipient_id_hash#1417, dt_30#79, concat(region#1411, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                    :                                         +- Filter transaction_type#1408 IN (withdrawal)
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                    :                                            +- Project [transaction_id#1402, client_id#1403, datetime#1404, amount#1405, currency#1406, coalesce(merchant#1407, cast(no_merchant as string)) AS merchant#114, transaction_type#1408, category#1409, country_code#1410, region#1411, coalesce(device_type#1412, cast(unknown as string)) AS device_type#115, session_id#1413, channel#1414, transaction_purpose#1415, ip_network#1416, recipient_id_hash#1417, dt_30#79]
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                    :                                               +- Project [transaction_id#1402, client_id#1403, datetime#1404, amount#1405, currency#1406, merchant#1407, transaction_type#1408, category#1409, country_code#1410, region#1411, device_type#1412, session_id#1413, channel#1414, transaction_purpose#1415, ip_network#1416, recipient_id_hash#1417, cast(date_trunc(minute, datetime#1404, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                    :                                                  +- Relation [transaction_id#1402,client_id#1403,datetime#1404,amount#1405,currency#1406,merchant#1407,transaction_type#1408,category#1409,country_code#1410,region#1411,device_type#1412,session_id#1413,channel#1414,transaction_purpose#1415,ip_network#1416,recipient_id_hash#1417] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                    +- Deduplicate [dst#134]
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                       +- Project [dst#134]
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                          +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                             +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                                +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                                   +- Union false, false
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_id#1419 AS src#133, recipient_id_hash#1433 AS dst#134, p2p AS relationship#135, LOG1P(amount#1421) AS weight#136]
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                                      :  +- Filter isnotnull(recipient_id_hash#1433)
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                                      :     +- Filter (transaction_type#1424 = p2p)
[2025-05-08T19:30:36.932+0000] {spark_submit.py:571} INFO - :                                      :        +- Project [transaction_id#1418, client_id#1419, datetime#1420, amount#1421, currency#1422, coalesce(merchant#1423, cast(no_merchant as string)) AS merchant#114, transaction_type#1424, category#1425, country_code#1426, region#1427, coalesce(device_type#1428, cast(unknown as string)) AS device_type#115, session_id#1429, channel#1430, transaction_purpose#1431, ip_network#1432, recipient_id_hash#1433, dt_30#79]
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :           +- Project [transaction_id#1418, client_id#1419, datetime#1420, amount#1421, currency#1422, merchant#1423, transaction_type#1424, category#1425, country_code#1426, region#1427, device_type#1428, session_id#1429, channel#1430, transaction_purpose#1431, ip_network#1432, recipient_id_hash#1433, cast(date_trunc(minute, datetime#1420, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :              +- Relation [transaction_id#1418,client_id#1419,datetime#1420,amount#1421,currency#1422,merchant#1423,transaction_type#1424,category#1425,country_code#1426,region#1427,device_type#1428,session_id#1429,channel#1430,transaction_purpose#1431,ip_network#1432,recipient_id_hash#1433] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1435, 0, 0) AS clients#159]
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :                    +- Project [transaction_id#1434, client_id#1435, datetime#1436, amount#1437, currency#1438, coalesce(merchant#1439, cast(no_merchant as string)) AS merchant#114, transaction_type#1440, category#1441, country_code#1442, region#1443, coalesce(device_type#1444, cast(unknown as string)) AS device_type#115, session_id#1445, channel#1446, transaction_purpose#1447, ip_network#1448, recipient_id_hash#1449, dt_30#79]
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :                       +- Project [transaction_id#1434, client_id#1435, datetime#1436, amount#1437, currency#1438, merchant#1439, transaction_type#1440, category#1441, country_code#1442, region#1443, device_type#1444, session_id#1445, channel#1446, transaction_purpose#1447, ip_network#1448, recipient_id_hash#1449, cast(date_trunc(minute, datetime#1436, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.933+0000] {spark_submit.py:571} INFO - :                                      :                          +- Relation [transaction_id#1434,client_id#1435,datetime#1436,amount#1437,currency#1438,merchant#1439,transaction_type#1440,category#1441,country_code#1442,region#1443,device_type#1444,session_id#1445,channel#1446,transaction_purpose#1447,ip_network#1448,recipient_id_hash#1449] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - :                                      :  +- Project [session_id#1461, clients#195, client_pairs#201]
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#125/05/08 19:30:36 INFO SparkUI: Stopped Spark web UI at http://f2a432e4376a:4040
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - 99], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - :                                      :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - :                                      :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - :                                      :              +- Aggregate [session_id#1461], [session_id#1461, collect_set(client_id#1451, 0, 0) AS clients#195]
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - :                                      :                 +- Filter isnotnull(session_id#1461)
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - :                                      :                    +- Project [transaction_id#1450, client_id#1451, datetime#1452, amount#1453, currency#1454, coalesce(merchant#1455, cast(no_merchant as string)) AS merchant#114, transaction_type#1456, category#1457, country_code#1458, region#1459, coalesce(device_type#1460, cast(unknown as string)) AS device_type#115, session_id#1461, channel#1462, transaction_purpose#1463, ip_network#1464, recipient_id_hash#1465, dt_30#79]
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - :                                      :                       +- Project [transaction_id#1450, client_id#1451, datetime#1452, amount#1453, currency#1454, merchant#1455, transaction_type#1456, category#1457, country_code#1458, region#1459, device_type#1460, session_id#1461, channel#1462, transaction_purpose#1463, ip_network#1464, recipient_id_hash#1465, cast(date_trunc(minute, datetime#1452, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - :                                      :                          +- Relation [transaction_id#1450,client_id#1451,datetime#1452,amount#1453,currency#1454,merchant#1455,transaction_type#1456,category#1457,country_code#1458,region#1459,device_type#1460,session_id#1461,channel#1462,transaction_purpose#1463,ip_network#1464,recipient_id_hash#1465] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.934+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                      :  +- Project [ip_network#1480, clients#231, client_pairs#237]
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                      :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                      :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                      :              +- Aggregate [ip_network#1480], [ip_network#1480, collect_set(client_id#1467, 0, 0) AS clients#231]
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                      :                 +- Filter isnotnull(ip_network#1480)
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                      :                    +- Project [transaction_id#1466, client_id#1467, datetime#1468, amount#1469, currency#1470, coalesce(merchant#1471, cast(no_merchant as string)) AS merchant#114, transaction_type#1472, category#1473, country_code#1474, region#1475, coalesce(device_type#1476, cast(unknown as string)) AS device_type#115, session_id#1477, channel#1478, transaction_purpose#1479, ip_network#1480, recipient_id_hash#1481, dt_30#79]
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                      :                       +- Project [transaction_id#1466, client_id#1467, datetime#1468, amount#1469, currency#1470, merchant#1471, transaction_type#1472, category#1473, country_code#1474, region#1475, device_type#1476, session_id#1477, channel#1478, transaction_purpose#1479, ip_network#1480, recipient_id_hash#1481, cast(date_trunc(minute, datetime#1468, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                      :                          +- Relation [transaction_id#1466,client_id#1467,datetime#1468,amount#1469,currency#1470,merchant#1471,transaction_type#1472,category#1473,country_code#1474,region#1475,device_type#1476,session_id#1477,channel#1478,transaction_purpose#1479,ip_network#1480,recipient_id_hash#1481] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                      +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                         +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                            +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                               +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                                  +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.935+0000] {spark_submit.py:571} INFO - :                                                     +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1483, 0, 0) AS clients#287]
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - :                                                        +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - :                                                           +- Project [transaction_id#1482, client_id#1483, datetime#1484, amount#1485, currency#1486, merchant#114, transaction_type#1488, category#1489, country_code#1490, region#1491, device_type#115, session_id#1493, channel#1494, transaction_purpose#1495, ip_network#1496, recipient_id_hash#1497, dt_30#79, concat(region#1491, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - :                                                              +- Filter transaction_type#1488 IN (withdrawal)
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - :                                                                 +- Project [transaction_id#1482, client_id#1483, datetime#1484, amount#1485, currency#1486, coalesce(merchant#1487, cast(no_merchant as string)) AS merchant#114, transaction_type#1488, category#1489, country_code#1490, region#1491, coalesce(device_type#1492, cast(unknown as string)) AS device_type#115, session_id#1493, channel#1494, transaction_purpose#1495, ip_network#1496, recipient_id_hash#1497, dt_30#79]
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - :                                                                    +- Project [transaction_id#1482, client_id#1483, datetime#1484, amount#1485, currency#1486, merchant#1487, transaction_type#1488, category#1489, country_code#1490, region#1491, device_type#1492, session_id#1493, channel#1494, transaction_purpose#1495, ip_network#1496, recipient_id_hash#1497, cast(date_trunc(minute, datetime#1484, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - :                                                                       +- Relation [transaction_id#1482,client_id#1483,datetime#1484,amount#1485,currency#1486,merchant#1487,transaction_type#1488,category#1489,country_code#1490,region#1491,device_type#1492,session_id#1493,channel#1494,transaction_purpose#1495,ip_network#1496,recipient_id_hash#1497] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - +- Project [src#133 AS id#486]
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - +- Deduplicate [src#133]
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - +- Union false, false
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - :- Deduplicate [src#133]
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - :  +- Project [src#133]
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.936+0000] {spark_submit.py:571} INFO - :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :              +- Union false, false
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :                 :- Project [client_id#935 AS src#133, recipient_id_hash#949 AS dst#134, p2p AS relationship#135, LOG1P(amount#937) AS weight#136]
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :                 :  +- Filter isnotnull(recipient_id_hash#949)
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :                 :     +- Filter (transaction_type#940 = p2p)
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :                 :        +- Project [transaction_id#934, client_id#935, datetime#936, amount#937, currency#938, coalesce(merchant#939, cast(no_merchant as string)) AS merchant#114, transaction_type#940, category#941, country_code#942, region#943, coalesce(device_type#944, cast(unknown as string)) AS device_type#115, session_id#945, channel#946, transaction_purpose#947, ip_network#948, recipient_id_hash#949, dt_30#79]
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :                 :           +- Project [transaction_id#934, client_id#935, datetime#936, amount#937, currency#938, merchant#939, transaction_type#940, category#941, country_code#942, region#943, device_type#944, session_id#945, channel#946, transaction_purpose#947, ip_network#948, recipient_id_hash#949, cast(date_trunc(minute, datetime#936, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :                 :              +- Relation [transaction_id#934,client_id#935,datetime#936,amount#937,currency#938,merchant#939,transaction_type#940,category#941,country_code#942,region#943,device_type#944,session_id#945,channel#946,transaction_purpose#947,ip_network#948,recipient_id_hash#949] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.937+0000] {spark_submit.py:571} INFO - :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.938+0000] {spark_submit.py:571} INFO - :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.938+0000] {spark_submit.py:571} INFO - :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#951, 0, 0) AS clients#159]
[2025-05-08T19:30:36.938+0000] {spark_submit.py:571} INFO - :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.938+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [transaction_id#950, client_id#951, datetime#952, amount#953, currency#954, coalesce(merchant#955, cast(no_merchant as string)) AS merchant#114, transaction_type#956, category#957, country_code#958, region#959, coalesce(device_type#960, cast(unknown as string)) AS device_type#115, session_id#961, channel#962, transaction_purpose#963, ip_network#964, recipient_id_hash#965, dt_30#79]
[2025-05-08T19:30:36.938+0000] {spark_submit.py:571} INFO - :                 :                       +- Project [transaction_id#950, client_id#951, datetime#952, amount#953, currency#954, merchant#955, transaction_type#956, category#957, country_code#958, region#959, device_type#960, session_id#961, channel#962, transaction_purpose#963, ip_network#964, recipient_id_hash#965, cast(date_trunc(minute, datetime#952, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.938+0000] {spark_submit.py:571} INFO - :                 :                          +- Relation [transaction_id#950,client_id#951,datetime#952,amount#953,currency#954,merchant#955,transaction_type#956,category#957,country_code#958,region#959,device_type#960,session_id#961,channel#962,transaction_purpose#963,ip_network#964,recipient_id_hash#965] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.938+0000] {spark_submit.py:571} INFO - :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.938+0000] {spark_submit.py:571} INFO - :                 :  +- Project [session_id#977, clients#195, client_pairs#201]
[2025-05-08T19:30:36.938+0000] {spark_submit.py:571} INFO - :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.938+0000] {spark_submit.py:571} INFO - :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.938+0000] {spark_submit.py:571} INFO - :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.939+0000] {spark_submit.py:571} INFO - :                 :              +- Aggregate [session_id#977], [session_id#977, collect_set(client_id#967, 0, 0) AS clients#195]
[2025-05-08T19:30:36.939+0000] {spark_submit.py:571} INFO - :                 :                 +- Filter isnotnull(session_id#977)
[2025-05-08T19:30:36.939+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [transaction_id#966, client_id#967, datetime#968, amount#969, currency#970, coalesce(merchant#971, cast(no_merchant as string)) AS merchant#114, transaction_type#972, category#973, country_code#974, region#975, coalesce(device_type#976, cast(unknown as string)) AS device_type#115, session_id#977, channel#978, transaction_purpose#979, ip_network#980, recipient_id_hash#981, dt_30#79]
[2025-05-08T19:30:36.939+0000] {spark_submit.py:571} INFO - :                 :                       +- Project [transaction_id#966, client_id#967, datetime#968, amount#969, currency#970, merchant#971, transaction_type#972, category#973, country_code#974, region#975, device_type#976, session_id#977, channel#978, transaction_purpose#979, ip_network#980, recipient_id_hash#981, cast(date_trunc(minute, datetime#968, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.939+0000] {spark_submit.py:571} INFO - :                 :                          +- Relation [transaction_id#966,client_id#967,datetime#968,amount#969,currency#970,merchant#971,transaction_type#972,category#973,country_code#974,region#975,device_type#976,session_id#977,channel#978,transaction_purpose#979,ip_network#980,recipient_id_hash#981] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.939+0000] {spark_submit.py:571} INFO - :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.939+0000] {spark_submit.py:571} INFO - :                 :  +- Project [ip_network#996, clients#231, client_pairs#237]
[2025-05-08T19:30:36.939+0000] {spark_submit.py:571} INFO - :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                 :              +- Aggregate [ip_network#996], [ip_network#996, collect_set(client_id#983, 0, 0) AS clients#231]
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                 :                 +- Filter isnotnull(ip_network#996)
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [transaction_id#982, client_id#983, datetime#984, amount#985, currency#986, coalesce(merchant#987, cast(no_merchant as string)) AS merchant#114, transaction_type#988, category#989, country_code#990, region#991, coalesce(device_type#992, cast(unknown as string)) AS device_type#115, session_id#993, channel#994, transaction_purpose#995, ip_network#996, recipient_id_hash#997, dt_30#79]
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                 :                       +- Project [transaction_id#982, client_id#983, datetime#984, amount#985, currency#986, merchant#987, transaction_type#988, category#989, country_code#990, region#991, device_type#992, session_id#993, channel#994, transaction_purpose#995, ip_network#996, recipient_id_hash#997, cast(date_trunc(minute, datetime#984, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                 :                          +- Relation [transaction_id#982,client_id#983,datetime#984,amount#985,currency#986,merchant#987,transaction_type#988,category#989,country_code#990,region#991,device_type#992,session_id#993,channel#994,transaction_purpose#995,ip_network#996,recipient_id_hash#997] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.940+0000] {spark_submit.py:571} INFO - :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#999, 0, 0) AS clients#287]
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - :                                      +- Project [transaction_id#998, client_id#999, datetime#1000, amount#1001, currency#1002, merchant#114, transaction_type#1004, category#1005, country_code#1006, region#1007, device_type#115, session_id#1009, channel#1010, transaction_purpose#1011, ip_network#1012, recipient_id_hash#1013, dt_30#79, concat(region#1007, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - :                                         +- Filter transaction_type#1004 IN (withdrawal)
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - :                                            +- Project [transaction_id#998, client_id#999, datetime#1000, amount#1001, currency#1002, coalesce(merchant#1003, cast(no_merchant as string)) AS merchant#114, transaction_type#1004, category#1005, country_code#1006, region#1007, coalesce(device_type#1008, cast(unknown as string)) AS device_type#115, session_id#1009, channel#1010, transaction_purpose#1011, ip_network#1012, recipient_id_hash#1013, dt_30#79]
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - :                                               +- Project [transaction_id#998, client_id#999, datetime#1000, amount#1001, currency#1002, merchant#1003, transaction_type#1004, category#1005, country_code#1006, region#1007, device_type#1008, session_id#1009, channel#1010, transaction_purpose#1011, ip_network#1012, recipient_id_hash#1013, cast(date_trunc(minute, datetime#1000, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - :                                                  +- Relation [transaction_id#998,client_id#999,datetime#1000,amount#1001,currency#1002,merchant#1003,transaction_type#1004,category#1005,country_code#1006,region#1007,device_type#1008,session_id#1009,channel#1010,transaction_purpose#1011,ip_network#1012,recipient_id_hash#1013] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - +- Deduplicate [dst#134]
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - +- Project [dst#134]
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - +- Union false, false
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - :- Project [client_id#1015 AS src#133, recipient_id_hash#1029 AS dst#134, p2p AS relationship#135, LOG1P(amount#1017) AS weight#136]
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - :  +- Filter isnotnull(recipient_id_hash#1029)
[2025-05-08T19:30:36.941+0000] {spark_submit.py:571} INFO - :     +- Filter (transaction_type#1020 = p2p)
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :        +- Project [transaction_id#1014, client_id#1015, datetime#1016, amount#1017, currency#1018, coalesce(merchant#1019, cast(no_merchant as string)) AS merchant#114, transaction_type#1020, category#1021, country_code#1022, region#1023, coalesce(device_type#1024, cast(unknown as string)) AS device_type#115, session_id#1025, channel#1026, transaction_purpose#1027, ip_network#1028, recipient_id_hash#1029, dt_30#79]
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :           +- Project [transaction_id#1014, client_id#1015, datetime#1016, amount#1017, currency#1018, merchant#1019, transaction_type#1020, category#1021, country_code#1022, region#1023, device_type#1024, session_id#1025, channel#1026, transaction_purpose#1027, ip_network#1028, recipient_id_hash#1029, cast(date_trunc(minute, datetime#1016, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :              +- Relation [transaction_id#1014,client_id#1015,datetime#1016,amount#1017,currency#1018,merchant#1019,transaction_type#1020,category#1021,country_code#1022,region#1023,device_type#1024,session_id#1025,channel#1026,transaction_purpose#1027,ip_network#1028,recipient_id_hash#1029] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1031, 0, 0) AS clients#159]
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :                    +- Project [transaction_id#1030, client_id#1031, datetime#1032, amount#1033, currency#1034, coalesce(merchant#1035, cast(no_merchant as string)) AS merchant#114, transaction_type#1036, category#1037, country_code#1038, region#1039, coalesce(device_type#1040, cast(unknown as string)) AS device_type#115, session_id#1041, channel#1042, transaction_purpose#1043, ip_network#1044, recipient_id_hash#1045, dt_30#79]
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :                       +- Project [transaction_id#1030, client_id#1031, datetime#1032, amount#1033, currency#1034, merchant#1035, transaction_type#1036, category#1037, country_code#1038, region#1039, device_type#1040, session_id#1041, channel#1042, transaction_purpose#1043, ip_network#1044, recipient_id_hash#1045, cast(date_trunc(minute, datetime#1032, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :                          +- Relation [transaction_id#1030,client_id#1031,datetime#1032,amount#1033,currency#1034,merchant#1035,transaction_type#1036,category#1037,country_code#1038,region#1039,device_type#1040,session_id#1041,channel#1042,transaction_purpose#1043,ip_network#1044,recipient_id_hash#1045] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:36.942+0000] {spark_submit.py:571} INFO - :  +- Project [session_id#1057, clients#195, client_pairs#201]
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :              +- Aggregate [session_id#1057], [session_id#1057, collect_set(client_id#1047, 0, 0) AS clients#195]
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :                 +- Filter isnotnull(session_id#1057)
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :                    +- Project [transaction_id#1046, client_id#1047, datetime#1048, amount#1049, currency#1050, coalesce(merchant#1051, cast(no_merchant as string)) AS merchant#114, transaction_type#1052, category#1053, country_code#1054, region#1055, coalesce(device_type#1056, cast(unknown as string)) AS device_type#115, session_id#1057, channel#1058, transaction_purpose#1059, ip_network#1060, recipient_id_hash#1061, dt_30#79]
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :                       +- Project [transaction_id#1046, client_id#1047, datetime#1048, amount#1049, currency#1050, merchant#1051, transaction_type#1052, category#1053, country_code#1054, region#1055, device_type#1056, session_id#1057, channel#1058, transaction_purpose#1059, ip_network#1060, recipient_id_hash#1061, cast(date_trunc(minute, datetime#1048, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :                          +- Relation [transaction_id#1046,client_id#1047,datetime#1048,amount#1049,currency#1050,merchant#1051,transaction_type#1052,category#1053,country_code#1054,region#1055,device_type#1056,session_id#1057,channel#1058,transaction_purpose#1059,ip_network#1060,recipient_id_hash#1061] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :  +- Project [ip_network#1076, clients#231, client_pairs#237]
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:36.943+0000] {spark_submit.py:571} INFO - :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - :              +- Aggregate [ip_network#1076], [ip_network#1076, collect_set(client_id#1063, 0, 0) AS clients#231]
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - :                 +- Filter isnotnull(ip_network#1076)
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - :                    +- Project [transaction_id#1062, client_id#1063, datetime#1064, amount#1065, currency#1066, coalesce(merchant#1067, cast(no_merchant as string)) AS merchant#114, transaction_type#1068, category#1069, country_code#1070, region#1071, coalesce(device_type#1072, cast(unknown as string)) AS device_type#115, session_id#1073, channel#1074, transaction_purpose#1075, ip_network#1076, recipient_id_hash#1077, dt_30#79]
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - :                       +- Project [transaction_id#1062, client_id#1063, datetime#1064, amount#1065, currency#1066, me25/05/08 19:30:36 INFO StandaloneSchedulerBackend: Shutting down all executors
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - rchant#1067, transaction_type#1068, category#1069, country_code#1070, region#1071, device_type#1072, session_id#1073, channel#1074, transaction_purpose#1075, ip_network#1076, recipient_id_hash#1077, cast(date_trunc(minute, datetime#1064, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - :                          +- Relation [transaction_id#1062,client_id#1063,datetime#1064,amount#1065,currency#1066,merchant#1067,transaction_type#1068,category#1069,country_code#1070,region#1071,device_type#1072,session_id#1073,channel#1074,transaction_purpose#1075,ip_network#1076,recipient_id_hash#1077] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1079, 0, 0) AS clients#287]
[2025-05-08T19:30:36.944+0000] {spark_submit.py:571} INFO - +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:36.945+0000] {spark_submit.py:571} INFO - +- Project [transaction_id#1078, client_id#1079, datetime#1080, amount#1081, currency#1082, merchant#114, transaction_type#1084, category#1085, country_code#1086, region#1087, device_type#115, session_id#1089, channel#1090, transaction_purpose#1091, ip_network#1092, recipient_id_hash#1093, dt_30#79, concat(region#1087, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:36.945+0000] {spark_submit.py:571} INFO - +- Filter transaction_type#1084 IN (withdrawal)
[2025-05-08T19:30:36.945+0000] {spark_submit.py:571} INFO - +- Project [transaction_id#1078, client_id#1079, datetime#1080, amount#1081, currency#1082, coalesce(merchant#1083, cast(no_merchant as string)) AS merchant#114, transaction_type#1084, category#1085, country_code#1086, region#1087, coalesce(device_type#1088, cast(unknown as string)) AS device_type#115, session_id#1089, channel#1090, transaction_purpose#1091, ip_network#1092, recipient_id_hash#1093, dt_30#79]
[2025-05-08T19:30:36.945+0000] {spark_submit.py:571} INFO - +- Project [transaction_id#1078, client_id#1079, datetime#1080, amount#1081, currency#1082, merchant#1083, transaction_type#1084, category#1085, country_code#1086, region#1087, device_type#1088, session_id#1089, channel#1090, transaction_purpose#1091, ip_network#1092, recipient_id_hash#1093, cast(date_trunc(minute, datetime#1080, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:36.945+0000] {spark_submit.py:571} INFO - +- Relation [transaction_id#1078,client_id#1079,datetime#1080,amount#1081,currency#1082,merchant#1083,transaction_type#1084,category#1085,country_code#1086,region#1087,device_type#1088,session_id#1089,channel#1090,transaction_purpose#1091,ip_network#1092,recipient_id_hash#1093] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:36.945+0000] {spark_submit.py:571} INFO - 
[2025-05-08T19:30:36.945+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:36 INFO CoarseGrainedSchedulerBackend$DriverEndpoint: Asking each executor to shut down
[2025-05-08T19:30:36.945+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:36 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
[2025-05-08T19:30:36.953+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:36 INFO MemoryStore: MemoryStore cleared
[2025-05-08T19:30:36.954+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:36 INFO BlockManager: BlockManager stopped
[2025-05-08T19:30:36.957+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:36 INFO BlockManagerMaster: BlockManagerMaster stopped
[2025-05-08T19:30:36.962+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:36 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
[2025-05-08T19:30:36.970+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:36 INFO SparkContext: Successfully stopped SparkContext
[2025-05-08T19:30:37.299+0000] {spark_submit.py:571} INFO - 2025-05-08 19:30:37,299 [INFO] SparkSession остановлена
[2025-05-08T19:30:37.300+0000] {spark_submit.py:571} INFO - Traceback (most recent call last):
[2025-05-08T19:30:37.300+0000] {spark_submit.py:571} INFO - File "/opt/airflow/spark/build_graph.py", line 314, in <module>
[2025-05-08T19:30:37.300+0000] {spark_submit.py:571} INFO - main()
[2025-05-08T19:30:37.300+0000] {spark_submit.py:571} INFO - File "/opt/airflow/spark/build_graph.py", line 186, in main
[2025-05-08T19:30:37.300+0000] {spark_submit.py:571} INFO - weighted_degrees = graph.aggregateMessages(
[2025-05-08T19:30:37.300+0000] {spark_submit.py:571} INFO - File "/home/airflow/.ivy2/jars/graphframes_graphframes-0.8.2-spark3.2-s_2.12.jar/graphframes/graphframe.py", line 305, in aggregateMessages
[2025-05-08T19:30:37.300+0000] {spark_submit.py:571} INFO - File "/opt/spark/python/lib/py4j-0.10.9.5-src.zip/py4j/java_gateway.py", line 1321, in __call__
[2025-05-08T19:30:37.301+0000] {spark_submit.py:571} INFO - File "/opt/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in deco
[2025-05-08T19:30:37.304+0000] {spark_submit.py:571} INFO - pyspark.sql.utils.AnalysisException: cannot resolve 'edge' given input columns: [MSG, id];
[2025-05-08T19:30:37.305+0000] {spark_submit.py:571} INFO - 'Aggregate [id#763], [id#763, sum('edge[weight]) AS w_degree#498]
[2025-05-08T19:30:37.305+0000] {spark_submit.py:571} INFO - +- Union false, false
[2025-05-08T19:30:37.305+0000] {spark_submit.py:571} INFO - :- Project [MSG#762, id#763]
[2025-05-08T19:30:37.305+0000] {spark_submit.py:571} INFO - :  +- Project [id#763, MSG#762]
[2025-05-08T19:30:37.305+0000] {spark_submit.py:571} INFO - :     +- Join Inner, (id#763 = id#486)
[2025-05-08T19:30:37.305+0000] {spark_submit.py:571} INFO - :        :- Project [edge#499.weight AS MSG#762, src#501.id AS id#763]
[2025-05-08T19:30:37.306+0000] {spark_submit.py:571} INFO - :        :  +- Project [src#501, edge#499, dst#503]
[2025-05-08T19:30:37.306+0000] {spark_submit.py:571} INFO - :        :     +- Join Inner, (edge#499.dst = dst#503.id)
[2025-05-08T19:30:37.306+0000] {spark_submit.py:571} INFO - :        :        :- Join Inner, (edge#499.src = src#501.id)
[2025-05-08T19:30:37.306+0000] {spark_submit.py:571} INFO - :        :        :  :- Project [struct(src, src#133, dst, dst#134, weight, weight#390, relationships, relationships#392, relationships_str, relationships_str#397) AS edge#499]
[2025-05-08T19:30:37.306+0000] {spark_submit.py:571} INFO - :        :        :  :  +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.306+0000] {spark_submit.py:571} INFO - :        :        :  :     +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.306+0000] {spark_submit.py:571} INFO - :        :        :  :        +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.307+0000] {spark_submit.py:571} INFO - :        :        :  :           +- Union false, false
[2025-05-08T19:30:37.307+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_id#15 AS src#133, recipient_id_hash#29 AS dst#134, p2p AS relationship#135, LOG1P(amount#17) AS weight#136]
[2025-05-08T19:30:37.307+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Filter isnotnull(recipient_id_hash#29)
[2025-05-08T19:30:37.307+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Filter (transaction_type#20 = p2p)
[2025-05-08T19:30:37.307+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Project [transaction_id#14, client_id#15, datetime#16, amount#17, currency#18, coalesce(merchant#19, cast(no_merchant as string)) AS merchant#114, transaction_type#20, category#21, country_code#22, region#23, coalesce(device_type#24, cast(unknown as string)) AS device_type#115, session_id#25, channel#26, transaction_purpose#27, ip_network#28, recipient_id_hash#29, dt_30#79]
[2025-05-08T19:30:37.307+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Project [transaction_id#14, client_id#15, datetime#16, amount#17, currency#18, merchant#19, transaction_type#20, category#21, country_code#22, region#23, device_type#24, session_id#25, channel#26, transaction_purpose#27, ip_network#28, recipient_id_hash#29, cast(date_trunc(minute, datetime#16, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.307+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Relation [transaction_id#14,client_id#15,datetime#16,amount#17,currency#18,merchant#19,transaction_type#20,category#21,country_code#22,region#23,device_type#24,session_id#25,channel#26,transaction_purpose#27,ip_network#28,recipient_id_hash#29] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.308+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.308+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.308+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.308+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.308+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.308+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#306, 0, 0) AS clients#159]
[2025-05-08T19:30:37.308+0000] {spark_submit.py:571} INFO - :        :        :  :              :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.308+0000] {spark_submit.py:571} INFO - :        :        :  :              :                    +- Project [transaction_id#305, client_id#306, datetime#307, amount#308, currency#309, coalesce(merchant#310, cast(no_merchant as string)) AS merchant#114, transaction_type#311, category#312, country_code#313, region#314, coalesce(device_type#315, cast(unknown as string)) AS device_type#115, session_id#316, channel#317, transaction_purpose#318, ip_network#319, recipient_id_hash#320, dt_30#79]
[2025-05-08T19:30:37.309+0000] {spark_submit.py:571} INFO - :        :        :  :              :                       +- Project [transaction_id#305, client_id#306, datetime#307, amount#308, currency#309, merchant#310, transaction_type#311, category#312, country_code#313, region#314, device_type#315, session_id#316, channel#317, transaction_purpose#318, ip_network#319, recipient_id_hash#320, cast(date_trunc(minute, datetime#307, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.309+0000] {spark_submit.py:571} INFO - :        :        :  :              :                          +- Relation [transaction_id#305,client_id#306,datetime#307,amount#308,currency#309,merchant#310,transaction_type#311,category#312,country_code#313,region#314,device_type#315,session_id#316,channel#317,transaction_purpose#318,ip_network#319,recipient_id_hash#320] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.309+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.309+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Project [session_id#336, clients#195, client_pairs#201]
[2025-05-08T19:30:37.310+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.310+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.310+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.310+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Aggregate [session_id#336], [session_id#336, collect_set(client_id#326, 0, 0) AS clients#195]
[2025-05-08T19:30:37.310+0000] {spark_submit.py:571} INFO - :        :        :  :              :                 +- Filter isnotnull(session_id#336)
[2025-05-08T19:30:37.310+0000] {spark_submit.py:571} INFO - :        :        :  :              :                    +- Project [transaction_id#325, client_id#326, datetime#327, amount#328, currency#329, coalesce(merchant#330, cast(no_merchant as string)) AS merchant#114, transaction_type#331, category#332, country_code#333, region#334, coalesce(device_type#335, cast(unknown as string)) AS device_type#115, session_id#336, channel#337, transaction_purpose#338, ip_network#339, recipient_id_hash#340, dt_30#79]
[2025-05-08T19:30:37.311+0000] {spark_submit.py:571} INFO - :        :        :  :              :                       +- Project [transaction_id#325, client_id#326, datetime#327, amount#328, currency#329, merchant#330, transaction_type#331, category#332, country_code#333, region#334, device_type#335, session_id#336, channel#337, transaction_purpose#338, ip_network#339, recipient_id_hash#340, cast(date_trunc(minute, datetime#327, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.311+0000] {spark_submit.py:571} INFO - :        :        :  :              :                          +- Relation [transaction_id#325,client_id#326,datetime#327,amount#328,currency#329,merchant#330,transaction_type#331,category#332,country_code#333,region#334,device_type#335,session_id#336,channel#337,transaction_purpose#338,ip_network#339,recipient_id_hash#340] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.311+0000] {spark_submit.py:571} INFO - :        :        :  :              :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.311+0000] {spark_submit.py:571} INFO - :        :        :  :              :  +- Project [ip_network#359, clients#231, client_pairs#237]
[2025-05-08T19:30:37.311+0000] {spark_submit.py:571} INFO - :        :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.311+0000] {spark_submit.py:571} INFO - :        :        :  :              :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.312+0000] {spark_submit.py:571} INFO - :        :        :  :              :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.312+0000] {spark_submit.py:571} INFO - :        :        :  :              :              +- Aggregate [ip_network#359], [ip_network#359, collect_set(client_id#346, 0, 0) AS clients#231]
[2025-05-08T19:30:37.312+0000] {spark_submit.py:571} INFO - :        :        :  :              :                 +- Filter isnotnull(ip_network#359)
[2025-05-08T19:30:37.312+0000] {spark_submit.py:571} INFO - :        :        :  :              :                    +- Project [transaction_id#345, client_id#346, datetime#347, amount#348, currency#349, coalesce(merchant#350, cast(no_merchant as string)) AS merchant#114, transaction_type#351, category#352, country_code#353, region#354, coalesce(device_type#355, cast(unknown as string)) AS device_type#115, session_id#356, channel#357, transaction_purpose#358, ip_network#359, recipient_id_hash#360, dt_30#79]
[2025-05-08T19:30:37.312+0000] {spark_submit.py:571} INFO - :        :        :  :              :                       +- Project [transaction_id#345, client_id#346, datetime#347, amount#348, currency#349, merchant#350, transaction_type#351, category#352, country_code#353, region#354, device_type#355, session_id#356, channel#357, transaction_purpose#358, ip_network#359, recipient_id_hash#360, cast(date_trunc(minute, datetime#347, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.312+0000] {spark_submit.py:571} INFO - :        :        :  :              :                          +- Relation [transaction_id#345,client_id#346,datetime#347,amount#348,currency#349,merchant#350,transaction_type#351,category#352,country_code#353,region#354,device_type#355,session_id#356,channel#357,transaction_purpose#358,ip_network#359,recipient_id_hash#360] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.312+0000] {spark_submit.py:571} INFO - :        :        :  :              +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.312+0000] {spark_submit.py:571} INFO - :        :        :  :                 +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.313+0000] {spark_submit.py:571} INFO - :        :        :  :                    +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.313+0000] {spark_submit.py:571} INFO - :        :        :  :                       +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.313+0000] {spark_submit.py:571} INFO - :        :        :  :                          +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.313+0000] {spark_submit.py:571} INFO - :        :        :  :                             +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#366, 0, 0) AS clients#287]
[2025-05-08T19:30:37.313+0000] {spark_submit.py:571} INFO - :        :        :  :                                +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.313+0000] {spark_submit.py:571} INFO - :        :        :  :                                   +- Project [transaction_id#365, client_id#366, datetime#367, amount#368, currency#369, merchant#114, transaction_type#371, category#372, country_code#373, region#374, device_type#115, session_id#376, channel#377, transaction_purpose#378, ip_network#379, recipient_id_hash#380, dt_30#79, concat(region#374, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.313+0000] {spark_submit.py:571} INFO - :        :        :  :                                      +- Filter transaction_type#371 IN (withdrawal)
[2025-05-08T19:30:37.313+0000] {spark_submit.py:571} INFO - :        :        :  :                                         +- Project [transaction_id#365, client_id#366, datetime#367, amount#368, currency#369, coalesce(merchant#370, cast(no_merchant as string)) AS merchant#114, transaction_type#371, category#372, country_code#373, region#374, coalesce(device_type#375, cast(unknown as string)) AS device_type#115, session_id#376, channel#377, transaction_purpose#378, ip_network#379, recipient_id_hash#380, dt_30#79]
[2025-05-08T19:30:37.314+0000] {spark_submit.py:571} INFO - :        :        :  :                                            +- Project [transaction_id#365, client_id#366, datetime#367, amount#368, currency#369, merchant#370, transaction_type#371, category#372, country_code#373, region#374, device_type#375, session_id#376, channel#377, transaction_purpose#378, ip_network#379, recipient_id_hash#380, cast(date_trunc(minute, datetime#367, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.314+0000] {spark_submit.py:571} INFO - :        :        :  :                                               +- Relation [transaction_id#365,client_id#366,datetime#367,amount#368,currency#369,merchant#370,transaction_type#371,category#372,country_code#373,region#374,device_type#375,session_id#376,channel#377,transaction_purpose#378,ip_network#379,recipient_id_hash#380] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.314+0000] {spark_submit.py:571} INFO - :        :        :  +- Project [struct(id, id#486) AS src#501]
[2025-05-08T19:30:37.314+0000] {spark_submit.py:571} INFO - :        :        :     +- Project [src#133 AS id#486]
[2025-05-08T19:30:37.314+0000] {spark_submit.py:571} INFO - :        :        :        +- Deduplicate [src#133]
[2025-05-08T19:30:37.314+0000] {spark_submit.py:571} INFO - :        :        :           +- Union false, false
[2025-05-08T19:30:37.314+0000] {spark_submit.py:571} INFO - :        :        :              :- Deduplicate [src#133]
[2025-05-08T19:30:37.314+0000] {spark_submit.py:571} INFO - :        :        :              :  +- Project [src#133]
[2025-05-08T19:30:37.314+0000] {spark_submit.py:571} INFO - :        :        :              :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.315+0000] {spark_submit.py:571} INFO - :        :        :              :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.315+0000] {spark_submit.py:571} INFO - :        :        :              :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.315+0000] {spark_submit.py:571} INFO - :        :        :              :              +- Union false, false
[2025-05-08T19:30:37.315+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_id#508 AS src#133, recipient_id_hash#522 AS dst#134, p2p AS relationship#135, LOG1P(amount#510) AS weight#136]
[2025-05-08T19:30:37.315+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Filter isnotnull(recipient_id_hash#522)
[2025-05-08T19:30:37.315+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Filter (transaction_type#513 = p2p)
[2025-05-08T19:30:37.315+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Project [transaction_id#507, client_id#508, datetime#509, amount#510, currency#511, coalesce(merchant#512, cast(no_merchant as string)) AS merchant#114, transaction_type#513, category#514, country_code#515, region#516, coalesce(device_type#517, cast(unknown as string)) AS device_type#115, session_id#518, channel#519, transaction_purpose#520, ip_network#521, recipient_id_hash#522, dt_30#79]
[2025-05-08T19:30:37.315+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Project [transaction_id#507, client_id#508, datetime#509, amount#510, currency#511, merchant#512, transaction_type#513, category#514, country_code#515, region#516, device_type#517, session_id#518, channel#519, transaction_purpose#520, ip_network#521, recipient_id_hash#522, cast(date_trunc(minute, datetime#509, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.315+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Relation [transaction_id#507,client_id#508,datetime#509,amount#510,currency#511,merchant#512,transaction_type#513,category#514,country_code#515,region#516,device_type#517,session_id#518,channel#519,transaction_purpose#520,ip_network#521,recipient_id_hash#522] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.315+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.315+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#524, 0, 0) AS clients#159]
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                    +- Project [transaction_id#523, client_id#524, datetime#525, amount#526, currency#527, coalesce(merchant#528, cast(no_merchant as string)) AS merchant#114, transaction_type#529, category#530, country_code#531, region#532, coalesce(device_type#533, cast(unknown as string)) AS device_type#115, session_id#534, channel#535, transaction_purpose#536, ip_network#537, recipient_id_hash#538, dt_30#79]
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                       +- Project [transaction_id#523, client_id#524, datetime#525, amount#526, currency#527, merchant#528, transaction_type#529, category#530, country_code#531, region#532, device_type#533, session_id#534, channel#535, transaction_purpose#536, ip_network#537, recipient_id_hash#538, cast(date_trunc(minute, datetime#525, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                          +- Relation [transaction_id#523,client_id#524,datetime#525,amount#526,currency#527,merchant#528,transaction_type#529,category#530,country_code#531,region#532,device_type#533,session_id#534,channel#535,transaction_purpose#536,ip_network#537,recipient_id_hash#538] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Project [session_id#550, clients#195, client_pairs#201]
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.316+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Aggregate [session_id#550], [session_id#550, collect_set(client_id#540, 0, 0) AS clients#195]
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                 +- Filter isnotnull(session_id#550)
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                    +- Project [transaction_id#539, client_id#540, datetime#541, amount#542, currency#543, coalesce(merchant#544, cast(no_merchant as string)) AS merchant#114, transaction_type#545, category#546, country_code#547, region#548, coalesce(device_type#549, cast(unknown as string)) AS device_type#115, session_id#550, channel#551, transaction_purpose#552, ip_network#553, recipient_id_hash#554, dt_30#79]
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                       +- Project [transaction_id#539, client_id#540, datetime#541, amount#542, currency#543, merchant#544, transaction_type#545, category#546, country_code#547, region#548, device_type#549, session_id#550, channel#551, transaction_purpose#552, ip_network#553, recipient_id_hash#554, cast(date_trunc(minute, datetime#541, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                          +- Relation [transaction_id#539,client_id#540,datetime#541,amount#542,currency#543,merchant#544,transaction_type#545,category#546,country_code#547,region#548,device_type#549,session_id#550,channel#551,transaction_purpose#552,ip_network#553,recipient_id_hash#554] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :  +- Project [ip_network#569, clients#231, client_pairs#237]
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.317+0000] {spark_submit.py:571} INFO - :        :        :              :                 :              +- Aggregate [ip_network#569], [ip_network#569, collect_set(client_id#556, 0, 0) AS clients#231]
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                 +- Filter isnotnull(ip_network#569)
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                    +- Project [transaction_id#555, client_id#556, datetime#557, amount#558, currency#559, coalesce(merchant#560, cast(no_merchant as string)) AS merchant#114, transaction_type#561, category#562, country_code#563, region#564, coalesce(device_type#565, cast(unknown as string)) AS device_type#115, session_id#566, channel#567, transaction_purpose#568, ip_network#569, recipient_id_hash#570, dt_30#79]
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                       +- Project [transaction_id#555, client_id#556, datetime#557, amount#558, currency#559, merchant#560, transaction_type#561, category#562, country_code#563, region#564, device_type#565, session_id#566, channel#567, transaction_purpose#568, ip_network#569, recipient_id_hash#570, cast(date_trunc(minute, datetime#557, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                 :                          +- Relation [transaction_id#555,client_id#556,datetime#557,amount#558,currency#559,merchant#560,transaction_type#561,category#562,country_code#563,region#564,device_type#565,session_id#566,channel#567,transaction_purpose#568,ip_network#569,recipient_id_hash#570] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#572, 0, 0) AS clients#287]
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                                      +- Project [transaction_id#571, client_id#572, datetime#573, amount#574, currency#575, merchant#114, transaction_type#577, category#578, country_code#579, region#580, device_type#115, session_id#582, channel#583, transaction_purpose#584, ip_network#585, recipient_id_hash#586, dt_30#79, concat(region#580, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                                         +- Filter transaction_type#577 IN (withdrawal)
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                                            +- Project [transaction_id#571, client_id#572, datetime#573, amount#574, currency#575, coalesce(merchant#576, cast(no_merchant as string)) AS merchant#114, transaction_type#577, category#578, country_code#579, region#580, coalesce(device_type#581, cast(unknown as string)) AS device_type#115, session_id#582, channel#583, transaction_purpose#584, ip_network#585, recipient_id_hash#586, dt_30#79]
[2025-05-08T19:30:37.318+0000] {spark_submit.py:571} INFO - :        :        :              :                                               +- Project [transaction_id#571, client_id#572, datetime#573, amount#574, currency#575, merchant#576, transaction_type#577, category#578, country_code#579, region#580, device_type#581, session_id#582, channel#583, transaction_purpose#584, ip_network#585, recipient_id_hash#586, cast(date_trunc(minute, datetime#573, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :              :                                                  +- Relation [transaction_id#571,client_id#572,datetime#573,amount#574,currency#575,merchant#576,transaction_type#577,category#578,country_code#579,region#580,device_type#581,session_id#582,channel#583,transaction_purpose#584,ip_network#585,recipient_id_hash#586] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :              +- Deduplicate [dst#134]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                 +- Project [dst#134]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                    +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                       +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                          +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                             +- Union false, false
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_id#406 AS src#133, recipient_id_hash#420 AS dst#134, p2p AS relationship#135, LOG1P(amount#408) AS weight#136]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Filter isnotnull(recipient_id_hash#420)
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Filter (transaction_type#411 = p2p)
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Project [transaction_id#405, client_id#406, datetime#407, amount#408, currency#409, coalesce(merchant#410, cast(no_merchant as string)) AS merchant#114, transaction_type#411, category#412, country_code#413, region#414, coalesce(device_type#415, cast(unknown as string)) AS device_type#115, session_id#416, channel#417, transaction_purpose#418, ip_network#419, recipient_id_hash#420, dt_30#79]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Project [transaction_id#405, client_id#406, datetime#407, amount#408, currency#409, merchant#410, transaction_type#411, category#412, country_code#413, region#414, device_type#415, session_id#416, channel#417, transaction_purpose#418, ip_network#419, recipient_id_hash#420, cast(date_trunc(minute, datetime#407, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Relation [transaction_id#405,client_id#406,datetime#407,amount#408,currency#409,merchant#410,transaction_type#411,category#412,country_code#413,region#414,device_type#415,session_id#416,channel#417,transaction_purpose#418,ip_network#419,recipient_id_hash#420] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.319+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#422, 0, 0) AS clients#159]
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :                    +- Project [transaction_id#421, client_id#422, datetime#423, amount#424, currency#425, coalesce(merchant#426, cast(no_merchant as string)) AS merchant#114, transaction_type#427, category#428, country_code#429, region#430, coalesce(device_type#431, cast(unknown as string)) AS device_type#115, session_id#432, channel#433, transaction_purpose#434, ip_network#435, recipient_id_hash#436, dt_30#79]
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :                       +- Project [transaction_id#421, client_id#422, datetime#423, amount#424, currency#425, merchant#426, transaction_type#427, category#428, country_code#429, region#430, device_type#431, session_id#432, channel#433, transaction_purpose#434, ip_network#435, recipient_id_hash#436, cast(date_trunc(minute, datetime#423, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :                          +- Relation [transaction_id#421,client_id#422,datetime#423,amount#424,currency#425,merchant#426,transaction_type#427,category#428,country_code#429,region#430,device_type#431,session_id#432,channel#433,transaction_purpose#434,ip_network#435,recipient_id_hash#436] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Project [session_id#448, clients#195, client_pairs#201]
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Aggregate [session_id#448], [session_id#448, collect_set(client_id#438, 0, 0) AS clients#195]
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :                 +- Filter isnotnull(session_id#448)
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :                    +- Project [transaction_id#437, client_id#438, datetime#439, amount#440, currency#441, coalesce(merchant#442, cast(no_merchant as string)) AS merchant#114, transaction_type#443, category#444, country_code#445, region#446, coalesce(device_type#447, cast(unknown as string)) AS device_type#115, session_id#448, channel#449, transaction_purpose#450, ip_network#451, recipient_id_hash#452, dt_30#79]
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :                       +- Project [transaction_id#437, client_id#438, datetime#439, amount#440, currency#441, merchant#442, transaction_type#443, category#444, country_code#445, region#446, device_type#447, session_id#448, channel#449, transaction_purpose#450, ip_network#451, recipient_id_hash#452, cast(date_trunc(minute, datetime#439, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.320+0000] {spark_submit.py:571} INFO - :        :        :                                :                          +- Relation [transaction_id#437,client_id#438,datetime#439,amount#440,currency#441,merchant#442,transaction_type#443,category#444,country_code#445,region#446,device_type#447,session_id#448,channel#449,transaction_purpose#450,ip_network#451,recipient_id_hash#452] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                :  +- Project [ip_network#467, clients#231, client_pairs#237]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                :              +- Aggregate [ip_network#467], [ip_network#467, collect_set(client_id#454, 0, 0) AS clients#231]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                :                 +- Filter isnotnull(ip_network#467)
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                :                    +- Project [transaction_id#453, client_id#454, datetime#455, amount#456, currency#457, coalesce(merchant#458, cast(no_merchant as string)) AS merchant#114, transaction_type#459, category#460, country_code#461, region#462, coalesce(device_type#463, cast(unknown as string)) AS device_type#115, session_id#464, channel#465, transaction_purpose#466, ip_network#467, recipient_id_hash#468, dt_30#79]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                :                       +- Project [transaction_id#453, client_id#454, datetime#455, amount#456, currency#457, merchant#458, transaction_type#459, category#460, country_code#461, region#462, device_type#463, session_id#464, channel#465, transaction_purpose#466, ip_network#467, recipient_id_hash#468, cast(date_trunc(minute, datetime#455, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                :                          +- Relation [transaction_id#453,client_id#454,datetime#455,amount#456,currency#457,merchant#458,transaction_type#459,category#460,country_code#461,region#462,device_type#463,session_id#464,channel#465,transaction_purpose#466,ip_network#467,recipient_id_hash#468] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                   +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                      +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                         +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                            +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                               +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#470, 0, 0) AS clients#287]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                                  +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                                     +- Project [transaction_id#469, client_id#470, datetime#471, amount#472, currency#473, merchant#114, transaction_type#475, category#476, country_code#477, region#478, device_type#115, session_id#480, channel#481, transaction_purpose#482, ip_network#483, recipient_id_hash#484, dt_30#79, concat(region#478, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                                        +- Filter transaction_type#475 IN (withdrawal)
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                                           +- Project [transaction_id#469, client_id#470, datetime#471, amount#472, currency#473, coalesce(merchant#474, cast(no_merchant as string)) AS merchant#114, transaction_type#475, category#476, country_code#477, region#478, coalesce(device_type#479, cast(unknown as string)) AS device_type#115, session_id#480, channel#481, transaction_purpose#482, ip_network#483, recipient_id_hash#484, dt_30#79]
[2025-05-08T19:30:37.321+0000] {spark_submit.py:571} INFO - :        :        :                                                              +- Project [transaction_id#469, client_id#470, datetime#471, amount#472, currency#473, merchant#474, transaction_type#475, category#476, country_code#477, region#478, device_type#479, session_id#480, channel#481, transaction_purpose#482, ip_network#483, recipient_id_hash#484, cast(date_trunc(minute, datetime#471, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :        :                                                                 +- Relation [transaction_id#469,client_id#470,datetime#471,amount#472,currency#473,merchant#474,transaction_type#475,category#476,country_code#477,region#478,device_type#479,session_id#480,channel#481,transaction_purpose#482,ip_network#483,recipient_id_hash#484] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :        +- Project [struct(id, id#486) AS dst#503]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :           +- Project [src#133 AS id#486]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :              +- Deduplicate [src#133]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                 +- Union false, false
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :- Deduplicate [src#133]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :  +- Project [src#133]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :              +- Union false, false
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_id#594 AS src#133, recipient_id_hash#608 AS dst#134, p2p AS relationship#135, LOG1P(amount#596) AS weight#136]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Filter isnotnull(recipient_id_hash#608)
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Filter (transaction_type#599 = p2p)
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Project [transaction_id#593, client_id#594, datetime#595, amount#596, currency#597, coalesce(merchant#598, cast(no_merchant as string)) AS merchant#114, transaction_type#599, category#600, country_code#601, region#602, coalesce(device_type#603, cast(unknown as string)) AS device_type#115, session_id#604, channel#605, transaction_purpose#606, ip_network#607, recipient_id_hash#608, dt_30#79]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Project [transaction_id#593, client_id#594, datetime#595, amount#596, currency#597, merchant#598, transaction_type#599, category#600, country_code#601, region#602, device_type#603, session_id#604, channel#605, transaction_purpose#606, ip_network#607, recipient_id_hash#608, cast(date_trunc(minute, datetime#595, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Relation [transaction_id#593,client_id#594,datetime#595,amount#596,currency#597,merchant#598,transaction_type#599,category#600,country_code#601,region#602,device_type#603,session_id#604,channel#605,transaction_purpose#606,ip_network#607,recipient_id_hash#608] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.322+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#610, 0, 0) AS clients#159]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :                    +- Project [transaction_id#609, client_id#610, datetime#611, amount#612, currency#613, coalesce(merchant#614, cast(no_merchant as string)) AS merchant#114, transaction_type#615, category#616, country_code#617, region#618, coalesce(device_type#619, cast(unknown as string)) AS device_type#115, session_id#620, channel#621, transaction_purpose#622, ip_network#623, recipient_id_hash#624, dt_30#79]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :                       +- Project [transaction_id#609, client_id#610, datetime#611, amount#612, currency#613, merchant#614, transaction_type#615, category#616, country_code#617, region#618, device_type#619, session_id#620, channel#621, transaction_purpose#622, ip_network#623, recipient_id_hash#624, cast(date_trunc(minute, datetime#611, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :                          +- Relation [transaction_id#609,client_id#610,datetime#611,amount#612,currency#613,merchant#614,transaction_type#615,category#616,country_code#617,region#618,device_type#619,session_id#620,channel#621,transaction_purpose#622,ip_network#623,recipient_id_hash#624] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Project [session_id#636, clients#195, client_pairs#201]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Aggregate [session_id#636], [session_id#636, collect_set(client_id#626, 0, 0) AS clients#195]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :                 +- Filter isnotnull(session_id#636)
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :                    +- Project [transaction_id#625, client_id#626, datetime#627, amount#628, currency#629, coalesce(merchant#630, cast(no_merchant as string)) AS merchant#114, transaction_type#631, category#632, country_code#633, region#634, coalesce(device_type#635, cast(unknown as string)) AS device_type#115, session_id#636, channel#637, transaction_purpose#638, ip_network#639, recipient_id_hash#640, dt_30#79]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :                       +- Project [transaction_id#625, client_id#626, datetime#627, amount#628, currency#629, merchant#630, transaction_type#631, category#632, country_code#633, region#634, device_type#635, session_id#636, channel#637, transaction_purpose#638, ip_network#639, recipient_id_hash#640, cast(date_trunc(minute, datetime#627, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :                          +- Relation [transaction_id#625,client_id#626,datetime#627,amount#628,currency#629,merchant#630,transaction_type#631,category#632,country_code#633,region#634,device_type#635,session_id#636,channel#637,transaction_purpose#638,ip_network#639,recipient_id_hash#640] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.323+0000] {spark_submit.py:571} INFO - :        :                    :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                 :  +- Project [ip_network#655, clients#231, client_pairs#237]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                 :              +- Aggregate [ip_network#655], [ip_network#655, collect_set(client_id#642, 0, 0) AS clients#231]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                 :                 +- Filter isnotnull(ip_network#655)
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                 :                    +- Project [transaction_id#641, client_id#642, datetime#643, amount#644, currency#645, coalesce(merchant#646, cast(no_merchant as string)) AS merchant#114, transaction_type#647, category#648, country_code#649, region#650, coalesce(device_type#651, cast(unknown as string)) AS device_type#115, session_id#652, channel#653, transaction_purpose#654, ip_network#655, recipient_id_hash#656, dt_30#79]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                 :                       +- Project [transaction_id#641, client_id#642, datetime#643, amount#644, currency#645, merchant#646, transaction_type#647, category#648, country_code#649, region#650, device_type#651, session_id#652, channel#653, transaction_purpose#654, ip_network#655, recipient_id_hash#656, cast(date_trunc(minute, datetime#643, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                 :                          +- Relation [transaction_id#641,client_id#642,datetime#643,amount#644,currency#645,merchant#646,transaction_type#647,category#648,country_code#649,region#650,device_type#651,session_id#652,channel#653,transaction_purpose#654,ip_network#655,recipient_id_hash#656] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#658, 0, 0) AS clients#287]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                                      +- Project [transaction_id#657, client_id#658, datetime#659, amount#660, currency#661, merchant#114, transaction_type#663, category#664, country_code#665, region#666, device_type#115, session_id#668, channel#669, transaction_purpose#670, ip_network#671, recipient_id_hash#672, dt_30#79, concat(region#666, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                                         +- Filter transaction_type#663 IN (withdrawal)
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                                            +- Project [transaction_id#657, client_id#658, datetime#659, amount#660, currency#661, coalesce(merchant#662, cast(no_merchant as string)) AS merchant#114, transaction_type#663, category#664, country_code#665, region#666, coalesce(device_type#667, cast(unknown as string)) AS device_type#115, session_id#668, channel#669, transaction_purpose#670, ip_network#671, recipient_id_hash#672, dt_30#79]
[2025-05-08T19:30:37.324+0000] {spark_submit.py:571} INFO - :        :                    :                                               +- Project [transaction_id#657, client_id#658, datetime#659, amount#660, currency#661, merchant#662, transaction_type#663, category#664, country_code#665, region#666, device_type#667, session_id#668, channel#669, transaction_purpose#670, ip_network#671, recipient_id_hash#672, cast(date_trunc(minute, datetime#659, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                    :                                                  +- Relation [transaction_id#657,client_id#658,datetime#659,amount#660,currency#661,merchant#662,transaction_type#663,category#664,country_code#665,region#666,device_type#667,session_id#668,channel#669,transaction_purpose#670,ip_network#671,recipient_id_hash#672] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                    +- Deduplicate [dst#134]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                       +- Project [dst#134]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                          +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                             +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                                +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                                   +- Union false, false
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_id#674 AS src#133, recipient_id_hash#688 AS dst#134, p2p AS relationship#135, LOG1P(amount#676) AS weight#136]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Filter isnotnull(recipient_id_hash#688)
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Filter (transaction_type#679 = p2p)
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Project [transaction_id#673, client_id#674, datetime#675, amount#676, currency#677, coalesce(merchant#678, cast(no_merchant as string)) AS merchant#114, transaction_type#679, category#680, country_code#681, region#682, coalesce(device_type#683, cast(unknown as string)) AS device_type#115, session_id#684, channel#685, transaction_purpose#686, ip_network#687, recipient_id_hash#688, dt_30#79]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Project [transaction_id#673, client_id#674, datetime#675, amount#676, currency#677, merchant#678, transaction_type#679, category#680, country_code#681, region#682, device_type#683, session_id#684, channel#685, transaction_purpose#686, ip_network#687, recipient_id_hash#688, cast(date_trunc(minute, datetime#675, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Relation [transaction_id#673,client_id#674,datetime#675,amount#676,currency#677,merchant#678,transaction_type#679,category#680,country_code#681,region#682,device_type#683,session_id#684,channel#685,transaction_purpose#686,ip_network#687,recipient_id_hash#688] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.325+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#690, 0, 0) AS clients#159]
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :                    +- Project [transaction_id#689, client_id#690, datetime#691, amount#692, currency#693, coalesce(merchant#694, cast(no_merchant as string)) AS merchant#114, transaction_type#695, category#696, country_code#697, region#698, coalesce(device_type#699, cast(unknown as string)) AS device_type#115, session_id#700, channel#701, transaction_purpose#702, ip_network#703, recipient_id_hash#704, dt_30#79]
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :                       +- Project [transaction_id#689, client_id#690, datetime#691, amount#692, currency#693, merchant#694, transaction_type#695, category#696, country_code#697, region#698, device_type#699, session_id#700, channel#701, transaction_purpose#702, ip_network#703, recipient_id_hash#704, cast(date_trunc(minute, datetime#691, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :                          +- Relation [transaction_id#689,client_id#690,datetime#691,amount#692,currency#693,merchant#694,transaction_type#695,category#696,country_code#697,region#698,device_type#699,session_id#700,channel#701,transaction_purpose#702,ip_network#703,recipient_id_hash#704] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Project [session_id#716, clients#195, client_pairs#201]
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Aggregate [session_id#716], [session_id#716, collect_set(client_id#706, 0, 0) AS clients#195]
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :                 +- Filter isnotnull(session_id#716)
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :                    +- Project [transaction_id#705, client_id#706, datetime#707, amount#708, currency#709, coalesce(merchant#710, cast(no_merchant as string)) AS merchant#114, transaction_type#711, category#712, country_code#713, region#714, coalesce(device_type#715, cast(unknown as string)) AS device_type#115, session_id#716, channel#717, transaction_purpose#718, ip_network#719, recipient_id_hash#720, dt_30#79]
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :                       +- Project [transaction_id#705, client_id#706, datetime#707, amount#708, currency#709, merchant#710, transaction_type#711, category#712, country_code#713, region#714, device_type#715, session_id#716, channel#717, transaction_purpose#718, ip_network#719, recipient_id_hash#720, cast(date_trunc(minute, datetime#707, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.326+0000] {spark_submit.py:571} INFO - :        :                                      :                          +- Relation [transaction_id#705,client_id#706,datetime#707,amount#708,currency#709,merchant#710,transaction_type#711,category#712,country_code#713,region#714,device_type#715,session_id#716,channel#717,transaction_purpose#718,ip_network#719,recipient_id_hash#720] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                      :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                      :  +- Project [ip_network#735, clients#231, client_pairs#237]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                      :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                      :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                      :              +- Aggregate [ip_network#735], [ip_network#735, collect_set(client_id#722, 0, 0) AS clients#231]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                      :                 +- Filter isnotnull(ip_network#735)
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                      :                    +- Project [transaction_id#721, client_id#722, datetime#723, amount#724, currency#725, coalesce(merchant#726, cast(no_merchant as string)) AS merchant#114, transaction_type#727, category#728, country_code#729, region#730, coalesce(device_type#731, cast(unknown as string)) AS device_type#115, session_id#732, channel#733, transaction_purpose#734, ip_network#735, recipient_id_hash#736, dt_30#79]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                      :                       +- Project [transaction_id#721, client_id#722, datetime#723, amount#724, currency#725, merchant#726, transaction_type#727, category#728, country_code#729, region#730, device_type#731, session_id#732, channel#733, transaction_purpose#734, ip_network#735, recipient_id_hash#736, cast(date_trunc(minute, datetime#723, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                      :                          +- Relation [transaction_id#721,client_id#722,datetime#723,amount#724,currency#725,merchant#726,transaction_type#727,category#728,country_code#729,region#730,device_type#731,session_id#732,channel#733,transaction_purpose#734,ip_network#735,recipient_id_hash#736] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                      +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                         +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                            +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                               +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                                  +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                                     +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#738, 0, 0) AS clients#287]
[2025-05-08T19:30:37.327+0000] {spark_submit.py:571} INFO - :        :                                                        +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :        :                                                           +- Project [transaction_id#737, client_id#738, datetime#739, amount#740, currency#741, merchant#114, transaction_type#743, category#744, country_code#745, region#746, device_type#115, session_id#748, channel#749, transaction_purpose#750, ip_network#751, recipient_id_hash#752, dt_30#79, concat(region#746, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :        :                                                              +- Filter transaction_type#743 IN (withdrawal)
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :        :                                                                 +- Project [transaction_id#737, client_id#738, datetime#739, amount#740, currency#741, coalesce(merchant#742, cast(no_merchant as string)) AS merchant#114, transaction_type#743, category#744, country_code#745, region#746, coalesce(device_type#747, cast(unknown as string)) AS device_type#115, session_id#748, channel#749, transaction_purpose#750, ip_network#751, recipient_id_hash#752, dt_30#79]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :        :                                                                    +- Project [transaction_id#737, client_id#738, datetime#739, amount#740, currency#741, merchant#742, transaction_type#743, category#744, country_code#745, region#746, device_type#747, session_id#748, channel#749, transaction_purpose#750, ip_network#751, recipient_id_hash#752, cast(date_trunc(minute, datetime#739, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :        :                                                                       +- Relation [transaction_id#737,client_id#738,datetime#739,amount#740,currency#741,merchant#742,transaction_type#743,category#744,country_code#745,region#746,device_type#747,session_id#748,channel#749,transaction_purpose#750,ip_network#751,recipient_id_hash#752] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :        +- Project [src#133 AS id#486]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :           +- Deduplicate [src#133]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :              +- Union false, false
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :- Deduplicate [src#133]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :  +- Project [src#133]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :              +- Union false, false
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_id#767 AS src#133, recipient_id_hash#781 AS dst#134, p2p AS relationship#135, LOG1P(amount#769) AS weight#136]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Filter isnotnull(recipient_id_hash#781)
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Filter (transaction_type#772 = p2p)
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Project [transaction_id#766, client_id#767, datetime#768, amount#769, currency#770, coalesce(merchant#771, cast(no_merchant as string)) AS merchant#114, transaction_type#772, category#773, country_code#774, region#775, coalesce(device_type#776, cast(unknown as string)) AS device_type#115, session_id#777, channel#778, transaction_purpose#779, ip_network#780, recipient_id_hash#781, dt_30#79]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Project [transaction_id#766, client_id#767, datetime#768, amount#769, currency#770, merchant#771, transaction_type#772, category#773, country_code#774, region#775, device_type#776, session_id#777, channel#778, transaction_purpose#779, ip_network#780, recipient_id_hash#781, cast(date_trunc(minute, datetime#768, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.328+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Relation [transaction_id#766,client_id#767,datetime#768,amount#769,currency#770,merchant#771,transaction_type#772,category#773,country_code#774,region#775,device_type#776,session_id#777,channel#778,transaction_purpose#779,ip_network#780,recipient_id_hash#781] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#783, 0, 0) AS clients#159]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :                    +- Project [transaction_id#782, client_id#783, datetime#784, amount#785, currency#786, coalesce(merchant#787, cast(no_merchant as string)) AS merchant#114, transaction_type#788, category#789, country_code#790, region#791, coalesce(device_type#792, cast(unknown as string)) AS device_type#115, session_id#793, channel#794, transaction_purpose#795, ip_network#796, recipient_id_hash#797, dt_30#79]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :                       +- Project [transaction_id#782, client_id#783, datetime#784, amount#785, currency#786, merchant#787, transaction_type#788, category#789, country_code#790, region#791, device_type#792, session_id#793, channel#794, transaction_purpose#795, ip_network#796, recipient_id_hash#797, cast(date_trunc(minute, datetime#784, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :                          +- Relation [transaction_id#782,client_id#783,datetime#784,amount#785,currency#786,merchant#787,transaction_type#788,category#789,country_code#790,region#791,device_type#792,session_id#793,channel#794,transaction_purpose#795,ip_network#796,recipient_id_hash#797] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Project [session_id#809, clients#195, client_pairs#201]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Aggregate [session_id#809], [session_id#809, collect_set(client_id#799, 0, 0) AS clients#195]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :                 +- Filter isnotnull(session_id#809)
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :                    +- Project [transaction_id#798, client_id#799, datetime#800, amount#801, currency#802, coalesce(merchant#803, cast(no_merchant as string)) AS merchant#114, transaction_type#804, category#805, country_code#806, region#807, coalesce(device_type#808, cast(unknown as string)) AS device_type#115, session_id#809, channel#810, transaction_purpose#811, ip_network#812, recipient_id_hash#813, dt_30#79]
[2025-05-08T19:30:37.329+0000] {spark_submit.py:571} INFO - :                 :                 :                       +- Project [transaction_id#798, client_id#799, datetime#800, amount#801, currency#802, merchant#803, transaction_type#804, category#805, country_code#806, region#807, device_type#808, session_id#809, channel#810, transaction_purpose#811, ip_network#812, recipient_id_hash#813, cast(date_trunc(minute, datetime#800, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 :                          +- Relation [transaction_id#798,client_id#799,datetime#800,amount#801,currency#802,merchant#803,transaction_type#804,category#805,country_code#806,region#807,device_type#808,session_id#809,channel#810,transaction_purpose#811,ip_network#812,recipient_id_hash#813] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 :  +- Project [ip_network#828, clients#231, client_pairs#237]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 :              +- Aggregate [ip_network#828], [ip_network#828, collect_set(client_id#815, 0, 0) AS clients#231]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 :                 +- Filter isnotnull(ip_network#828)
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 :                    +- Project [transaction_id#814, client_id#815, datetime#816, amount#817, currency#818, coalesce(merchant#819, cast(no_merchant as string)) AS merchant#114, transaction_type#820, category#821, country_code#822, region#823, coalesce(device_type#824, cast(unknown as string)) AS device_type#115, session_id#825, channel#826, transaction_purpose#827, ip_network#828, recipient_id_hash#829, dt_30#79]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 :                       +- Project [transaction_id#814, client_id#815, datetime#816, amount#817, currency#818, merchant#819, transaction_type#820, category#821, country_code#822, region#823, device_type#824, session_id#825, channel#826, transaction_purpose#827, ip_network#828, recipient_id_hash#829, cast(date_trunc(minute, datetime#816, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 :                          +- Relation [transaction_id#814,client_id#815,datetime#816,amount#817,currency#818,merchant#819,transaction_type#820,category#821,country_code#822,region#823,device_type#824,session_id#825,channel#826,transaction_purpose#827,ip_network#828,recipient_id_hash#829] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#831, 0, 0) AS clients#287]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                                      +- Project [transaction_id#830, client_id#831, datetime#832, amount#833, currency#834, merchant#114, transaction_type#836, category#837, country_code#838, region#839, device_type#115, session_id#841, channel#842, transaction_purpose#843, ip_network#844, recipient_id_hash#845, dt_30#79, concat(region#839, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.330+0000] {spark_submit.py:571} INFO - :                 :                                         +- Filter transaction_type#836 IN (withdrawal)
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                 :                                            +- Project [transaction_id#830, client_id#831, datetime#832, amount#833, currency#834, coalesce(merchant#835, cast(no_merchant as string)) AS merchant#114, transaction_type#836, category#837, country_code#838, region#839, coalesce(device_type#840, cast(unknown as string)) AS device_type#115, session_id#841, channel#842, transaction_purpose#843, ip_network#844, recipient_id_hash#845, dt_30#79]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                 :                                               +- Project [transaction_id#830, client_id#831, datetime#832, amount#833, currency#834, merchant#835, transaction_type#836, category#837, country_code#838, region#839, device_type#840, session_id#841, channel#842, transaction_purpose#843, ip_network#844, recipient_id_hash#845, cast(date_trunc(minute, datetime#832, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                 :                                                  +- Relation [transaction_id#830,client_id#831,datetime#832,amount#833,currency#834,merchant#835,transaction_type#836,category#837,country_code#838,region#839,device_type#840,session_id#841,channel#842,transaction_purpose#843,ip_network#844,recipient_id_hash#845] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                 +- Deduplicate [dst#134]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                    +- Project [dst#134]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                       +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                          +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                             +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                                +- Union false, false
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_id#847 AS src#133, recipient_id_hash#861 AS dst#134, p2p AS relationship#135, LOG1P(amount#849) AS weight#136]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                                   :  +- Filter isnotnull(recipient_id_hash#861)
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                                   :     +- Filter (transaction_type#852 = p2p)
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                                   :        +- Project [transaction_id#846, client_id#847, datetime#848, amount#849, currency#850, coalesce(merchant#851, cast(no_merchant as string)) AS merchant#114, transaction_type#852, category#853, country_code#854, region#855, coalesce(device_type#856, cast(unknown as string)) AS device_type#115, session_id#857, channel#858, transaction_purpose#859, ip_network#860, recipient_id_hash#861, dt_30#79]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                                   :           +- Project [transaction_id#846, client_id#847, datetime#848, amount#849, currency#850, merchant#851, transaction_type#852, category#853, country_code#854, region#855, device_type#856, session_id#857, channel#858, transaction_purpose#859, ip_network#860, recipient_id_hash#861, cast(date_trunc(minute, datetime#848, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                                   :              +- Relation [transaction_id#846,client_id#847,datetime#848,amount#849,currency#850,merchant#851,transaction_type#852,category#853,country_code#854,region#855,device_type#856,session_id#857,channel#858,transaction_purpose#859,ip_network#860,recipient_id_hash#861] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                                   :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                                   :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.331+0000] {spark_submit.py:571} INFO - :                                   :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#863, 0, 0) AS clients#159]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :                    +- Project [transaction_id#862, client_id#863, datetime#864, amount#865, currency#866, coalesce(merchant#867, cast(no_merchant as string)) AS merchant#114, transaction_type#868, category#869, country_code#870, region#871, coalesce(device_type#872, cast(unknown as string)) AS device_type#115, session_id#873, channel#874, transaction_purpose#875, ip_network#876, recipient_id_hash#877, dt_30#79]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :                       +- Project [transaction_id#862, client_id#863, datetime#864, amount#865, currency#866, merchant#867, transaction_type#868, category#869, country_code#870, region#871, device_type#872, session_id#873, channel#874, transaction_purpose#875, ip_network#876, recipient_id_hash#877, cast(date_trunc(minute, datetime#864, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :                          +- Relation [transaction_id#862,client_id#863,datetime#864,amount#865,currency#866,merchant#867,transaction_type#868,category#869,country_code#870,region#871,device_type#872,session_id#873,channel#874,transaction_purpose#875,ip_network#876,recipient_id_hash#877] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :  +- Project [session_id#889, clients#195, client_pairs#201]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :              +- Aggregate [session_id#889], [session_id#889, collect_set(client_id#879, 0, 0) AS clients#195]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :                 +- Filter isnotnull(session_id#889)
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :                    +- Project [transaction_id#878, client_id#879, datetime#880, amount#881, currency#882, coalesce(merchant#883, cast(no_merchant as string)) AS merchant#114, transaction_type#884, category#885, country_code#886, region#887, coalesce(device_type#888, cast(unknown as string)) AS device_type#115, session_id#889, channel#890, transaction_purpose#891, ip_network#892, recipient_id_hash#893, dt_30#79]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :                       +- Project [transaction_id#878, client_id#879, datetime#880, amount#881, currency#882, merchant#883, transaction_type#884, category#885, country_code#886, region#887, device_type#888, session_id#889, channel#890, transaction_purpose#891, ip_network#892, recipient_id_hash#893, cast(date_trunc(minute, datetime#880, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :                          +- Relation [transaction_id#878,client_id#879,datetime#880,amount#881,currency#882,merchant#883,transaction_type#884,category#885,country_code#886,region#887,device_type#888,session_id#889,channel#890,transaction_purpose#891,ip_network#892,recipient_id_hash#893] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.332+0000] {spark_submit.py:571} INFO - :                                   :  +- Project [ip_network#908, clients#231, client_pairs#237]
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                   :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                   :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                   :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                   :              +- Aggregate [ip_network#908], [ip_network#908, collect_set(client_id#895, 0, 0) AS clients#231]
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                   :                 +- Filter isnotnull(ip_network#908)
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                   :                    +- Project [transaction_id#894, client_id#895, datetime#896, amount#897, currency#898, coalesce(merchant#899, cast(no_merchant as string)) AS merchant#114, transaction_type#900, category#901, country_code#902, region#903, coalesce(device_type#904, cast(unknown as string)) AS device_type#115, session_id#905, channel#906, transaction_purpose#907, ip_network#908, recipient_id_hash#909, dt_30#79]
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                   :                       +- Project [transaction_id#894, client_id#895, datetime#896, amount#897, currency#898, merchant#899, transaction_type#900, category#901, country_code#902, region#903, device_type#904, session_id#905, channel#906, transaction_purpose#907, ip_network#908, recipient_id_hash#909, cast(date_trunc(minute, datetime#896, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                   :                          +- Relation [transaction_id#894,client_id#895,datetime#896,amount#897,currency#898,merchant#899,transaction_type#900,category#901,country_code#902,region#903,device_type#904,session_id#905,channel#906,transaction_purpose#907,ip_network#908,recipient_id_hash#909] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                   +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                      +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                         +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                            +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                               +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                                  +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#911, 0, 0) AS clients#287]
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                                     +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                                        +- Project [transaction_id#910, client_id#911, datetime#912, amount#913, currency#914, merchant#114, transaction_type#916, category#917, country_code#918, region#919, device_type#115, session_id#921, channel#922, transaction_purpose#923, ip_network#924, recipient_id_hash#925, dt_30#79, concat(region#919, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.333+0000] {spark_submit.py:571} INFO - :                                                           +- Filter transaction_type#916 IN (withdrawal)
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :                                                              +- Project [transaction_id#910, client_id#911, datetime#912, amount#913, currency#914, coalesce(merchant#915, cast(no_merchant as string)) AS merchant#114, transaction_type#916, category#917, country_code#918, region#919, coalesce(device_type#920, cast(unknown as string)) AS device_type#115, session_id#921, channel#922, transaction_purpose#923, ip_network#924, recipient_id_hash#925, dt_30#79]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :                                                                 +- Project [transaction_id#910, client_id#911, datetime#912, amount#913, currency#914, merchant#915, transaction_type#916, category#917, country_code#918, region#919, device_type#920, session_id#921, channel#922, transaction_purpose#923, ip_network#924, recipient_id_hash#925, cast(date_trunc(minute, datetime#912, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :                                                                    +- Relation [transaction_id#910,client_id#911,datetime#912,amount#913,currency#914,merchant#915,transaction_type#916,category#917,country_code#918,region#919,device_type#920,session_id#921,channel#922,transaction_purpose#923,ip_network#924,recipient_id_hash#925] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - +- Project [MSG#930, id#931]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - +- Project [id#931, MSG#930]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - +- Join Inner, (id#931 = id#486)
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :- Project [edge#499.weight AS MSG#930, dst#503.id AS id#931]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :  +- Project [src#501, edge#499, dst#503]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :     +- Join Inner, (edge#499.dst = dst#503.id)
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :        :- Join Inner, (edge#499.src = src#501.id)
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :        :  :- Project [struct(src, src#133, dst, dst#134, weight, weight#390, relationships, relationships#392, relationships_str, relationships_str#397) AS edge#499]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :        :  :  +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :        :  :     +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :        :  :        +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :        :  :           +- Union false, false
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_id#1099 AS src#133, recipient_id_hash#1113 AS dst#134, p2p AS relationship#135, LOG1P(amount#1101) AS weight#136]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Filter isnotnull(recipient_id_hash#1113)
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Filter (transaction_type#1104 = p2p)
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Project [transaction_id#1098, client_id#1099, datetime#1100, amount#1101, currency#1102, coalesce(merchant#1103, cast(no_merchant as string)) AS merchant#114, transaction_type#1104, category#1105, country_code#1106, region#1107, coalesce(device_type#1108, cast(unknown as string)) AS device_type#115, session_id#1109, channel#1110, transaction_purpose#1111, ip_network#1112, recipient_id_hash#1113, dt_30#79]
[2025-05-08T19:30:37.334+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Project [transaction_id#1098, client_id#1099, datetime#1100, amount#1101, currency#1102, merchant#1103, transaction_type#1104, category#1105, country_code#1106, region#1107, device_type#1108, session_id#1109, channel#1110, transaction_purpose#1111, ip_network#1112, recipient_id_hash#1113, cast(date_trunc(minute, datetime#1100, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Relation [transaction_id#1098,client_id#1099,datetime#1100,amount#1101,currency#1102,merchant#1103,transaction_type#1104,category#1105,country_code#1106,region#1107,device_type#1108,session_id#1109,channel#1110,transaction_purpose#1111,ip_network#1112,recipient_id_hash#1113] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1115, 0, 0) AS clients#159]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :                    +- Project [transaction_id#1114, client_id#1115, datetime#1116, amount#1117, currency#1118, coalesce(merchant#1119, cast(no_merchant as string)) AS merchant#114, transaction_type#1120, category#1121, country_code#1122, region#1123, coalesce(device_type#1124, cast(unknown as string)) AS device_type#115, session_id#1125, channel#1126, transaction_purpose#1127, ip_network#1128, recipient_id_hash#1129, dt_30#79]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :                       +- Project [transaction_id#1114, client_id#1115, datetime#1116, amount#1117, currency#1118, merchant#1119, transaction_type#1120, category#1121, country_code#1122, region#1123, device_type#1124, session_id#1125, channel#1126, transaction_purpose#1127, ip_network#1128, recipient_id_hash#1129, cast(date_trunc(minute, datetime#1116, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :                          +- Relation [transaction_id#1114,client_id#1115,datetime#1116,amount#1117,currency#1118,merchant#1119,transaction_type#1120,category#1121,country_code#1122,region#1123,device_type#1124,session_id#1125,channel#1126,transaction_purpose#1127,ip_network#1128,recipient_id_hash#1129] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Project [session_id#1141, clients#195, client_pairs#201]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Aggregate [session_id#1141], [session_id#1141, collect_set(client_id#1131, 0, 0) AS clients#195]
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :                 +- Filter isnotnull(session_id#1141)
[2025-05-08T19:30:37.335+0000] {spark_submit.py:571} INFO - :        :  :              :                    +- Project [transaction_id#1130, client_id#1131, datetime#1132, amount#1133, currency#1134, coalesce(merchant#1135, cast(no_merchant as string)) AS merchant#114, transaction_type#1136, category#1137, country_code#1138, region#1139, coalesce(device_type#1140, cast(unknown as string)) AS device_type#115, session_id#1141, channel#1142, transaction_purpose#1143, ip_network#1144, recipient_id_hash#1145, dt_30#79]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :                       +- Project [transaction_id#1130, client_id#1131, datetime#1132, amount#1133, currency#1134, merchant#1135, transaction_type#1136, category#1137, country_code#1138, region#1139, device_type#1140, session_id#1141, channel#1142, transaction_purpose#1143, ip_network#1144, recipient_id_hash#1145, cast(date_trunc(minute, datetime#1132, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :                          +- Relation [transaction_id#1130,client_id#1131,datetime#1132,amount#1133,currency#1134,merchant#1135,transaction_type#1136,category#1137,country_code#1138,region#1139,device_type#1140,session_id#1141,channel#1142,transaction_purpose#1143,ip_network#1144,recipient_id_hash#1145] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :  +- Project [ip_network#1160, clients#231, client_pairs#237]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :              +- Aggregate [ip_network#1160], [ip_network#1160, collect_set(client_id#1147, 0, 0) AS clients#231]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :                 +- Filter isnotnull(ip_network#1160)
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :                    +- Project [transaction_id#1146, client_id#1147, datetime#1148, amount#1149, currency#1150, coalesce(merchant#1151, cast(no_merchant as string)) AS merchant#114, transaction_type#1152, category#1153, country_code#1154, region#1155, coalesce(device_type#1156, cast(unknown as string)) AS device_type#115, session_id#1157, channel#1158, transaction_purpose#1159, ip_network#1160, recipient_id_hash#1161, dt_30#79]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :                       +- Project [transaction_id#1146, client_id#1147, datetime#1148, amount#1149, currency#1150, merchant#1151, transaction_type#1152, category#1153, country_code#1154, region#1155, device_type#1156, session_id#1157, channel#1158, transaction_purpose#1159, ip_network#1160, recipient_id_hash#1161, cast(date_trunc(minute, datetime#1148, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              :                          +- Relation [transaction_id#1146,client_id#1147,datetime#1148,amount#1149,currency#1150,merchant#1151,transaction_type#1152,category#1153,country_code#1154,region#1155,device_type#1156,session_id#1157,channel#1158,transaction_purpose#1159,ip_network#1160,recipient_id_hash#1161] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :              +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :                 +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :                    +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :                       +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :                          +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :                             +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1163, 0, 0) AS clients#287]
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :                                +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.336+0000] {spark_submit.py:571} INFO - :        :  :                                   +- Project [transaction_id#1162, client_id#1163, datetime#1164, amount#1165, currency#1166, merchant#114, transaction_type#1168, category#1169, country_code#1170, region#1171, device_type#115, session_id#1173, channel#1174, transaction_purpose#1175, ip_network#1176, recipient_id_hash#1177, dt_30#79, concat(region#1171, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :  :                                      +- Filter transaction_type#1168 IN (withdrawal)
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :  :                                         +- Project [transaction_id#1162, client_id#1163, datetime#1164, amount#1165, currency#1166, coalesce(merchant#1167, cast(no_merchant as string)) AS merchant#114, transaction_type#1168, category#1169, country_code#1170, region#1171, coalesce(device_type#1172, cast(unknown as string)) AS device_type#115, session_id#1173, channel#1174, transaction_purpose#1175, ip_network#1176, recipient_id_hash#1177, dt_30#79]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :  :                                            +- Project [transaction_id#1162, client_id#1163, datetime#1164, amount#1165, currency#1166, merchant#1167, transaction_type#1168, category#1169, country_code#1170, region#1171, device_type#1172, session_id#1173, channel#1174, transaction_purpose#1175, ip_network#1176, recipient_id_hash#1177, cast(date_trunc(minute, datetime#1164, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :  :                                               +- Relation [transaction_id#1162,client_id#1163,datetime#1164,amount#1165,currency#1166,merchant#1167,transaction_type#1168,category#1169,country_code#1170,region#1171,device_type#1172,session_id#1173,channel#1174,transaction_purpose#1175,ip_network#1176,recipient_id_hash#1177] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :  +- Project [struct(id, id#486) AS src#501]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :     +- Project [src#133 AS id#486]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :        +- Deduplicate [src#133]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :           +- Union false, false
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :              :- Deduplicate [src#133]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :              :  +- Project [src#133]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :              :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :              :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :              :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :              :              +- Union false, false
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_id#1179 AS src#133, recipient_id_hash#1193 AS dst#134, p2p AS relationship#135, LOG1P(amount#1181) AS weight#136]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Filter isnotnull(recipient_id_hash#1193)
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Filter (transaction_type#1184 = p2p)
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Project [transaction_id#1178, client_id#1179, datetime#1180, amount#1181, currency#1182, coalesce(merchant#1183, cast(no_merchant as string)) AS merchant#114, transaction_type#1184, category#1185, country_code#1186, region#1187, coalesce(device_type#1188, cast(unknown as string)) AS device_type#115, session_id#1189, channel#1190, transaction_purpose#1191, ip_network#1192, recipient_id_hash#1193, dt_30#79]
[2025-05-08T19:30:37.337+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Project [transaction_id#1178, client_id#1179, datetime#1180, amount#1181, currency#1182, merchant#1183, transaction_type#1184, category#1185, country_code#1186, region#1187, device_type#1188, session_id#1189, channel#1190, transaction_purpose#1191, ip_network#1192, recipient_id_hash#1193, cast(date_trunc(minute, datetime#1180, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Relation [transaction_id#1178,client_id#1179,datetime#1180,amount#1181,currency#1182,merchant#1183,transaction_type#1184,category#1185,country_code#1186,region#1187,device_type#1188,session_id#1189,channel#1190,transaction_purpose#1191,ip_network#1192,recipient_id_hash#1193] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1195, 0, 0) AS clients#159]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :                    +- Project [transaction_id#1194, client_id#1195, datetime#1196, amount#1197, currency#1198, coalesce(merchant#1199, cast(no_merchant as string)) AS merchant#114, transaction_type#1200, category#1201, country_code#1202, region#1203, coalesce(device_type#1204, cast(unknown as string)) AS device_type#115, session_id#1205, channel#1206, transaction_purpose#1207, ip_network#1208, recipient_id_hash#1209, dt_30#79]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :                       +- Project [transaction_id#1194, client_id#1195, datetime#1196, amount#1197, currency#1198, merchant#1199, transaction_type#1200, category#1201, country_code#1202, region#1203, device_type#1204, session_id#1205, channel#1206, transaction_purpose#1207, ip_network#1208, recipient_id_hash#1209, cast(date_trunc(minute, datetime#1196, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :                          +- Relation [transaction_id#1194,client_id#1195,datetime#1196,amount#1197,currency#1198,merchant#1199,transaction_type#1200,category#1201,country_code#1202,region#1203,device_type#1204,session_id#1205,channel#1206,transaction_purpose#1207,ip_network#1208,recipient_id_hash#1209] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Project [session_id#1221, clients#195, client_pairs#201]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Aggregate [session_id#1221], [session_id#1221, collect_set(client_id#1211, 0, 0) AS clients#195]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :                 +- Filter isnotnull(session_id#1221)
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :                    +- Project [transaction_id#1210, client_id#1211, datetime#1212, amount#1213, currency#1214, coalesce(merchant#1215, cast(no_merchant as string)) AS merchant#114, transaction_type#1216, category#1217, country_code#1218, region#1219, coalesce(device_type#1220, cast(unknown as string)) AS device_type#115, session_id#1221, channel#1222, transaction_purpose#1223, ip_network#1224, recipient_id_hash#1225, dt_30#79]
[2025-05-08T19:30:37.338+0000] {spark_submit.py:571} INFO - :        :              :                 :                       +- Project [transaction_id#1210, client_id#1211, datetime#1212, amount#1213, currency#1214, merchant#1215, transaction_type#1216, category#1217, country_code#1218, region#1219, device_type#1220, session_id#1221, channel#1222, transaction_purpose#1223, ip_network#1224, recipient_id_hash#1225, cast(date_trunc(minute, datetime#1212, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 :                          +- Relation [transaction_id#1210,client_id#1211,datetime#1212,amount#1213,currency#1214,merchant#1215,transaction_type#1216,category#1217,country_code#1218,region#1219,device_type#1220,session_id#1221,channel#1222,transaction_purpose#1223,ip_network#1224,recipient_id_hash#1225] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 :  +- Project [ip_network#1240, clients#231, client_pairs#237]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 :              +- Aggregate [ip_network#1240], [ip_network#1240, collect_set(client_id#1227, 0, 0) AS clients#231]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 :                 +- Filter isnotnull(ip_network#1240)
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 :                    +- Project [transaction_id#1226, client_id#1227, datetime#1228, amount#1229, currency#1230, coalesce(merchant#1231, cast(no_merchant as string)) AS merchant#114, transaction_type#1232, category#1233, country_code#1234, region#1235, coalesce(device_type#1236, cast(unknown as string)) AS device_type#115, session_id#1237, channel#1238, transaction_purpose#1239, ip_network#1240, recipient_id_hash#1241, dt_30#79]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 :                       +- Project [transaction_id#1226, client_id#1227, datetime#1228, amount#1229, currency#1230, merchant#1231, transaction_type#1232, category#1233, country_code#1234, region#1235, device_type#1236, session_id#1237, channel#1238, transaction_purpose#1239, ip_network#1240, recipient_id_hash#1241, cast(date_trunc(minute, datetime#1228, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 :                          +- Relation [transaction_id#1226,client_id#1227,datetime#1228,amount#1229,currency#1230,merchant#1231,transaction_type#1232,category#1233,country_code#1234,region#1235,device_type#1236,session_id#1237,channel#1238,transaction_purpose#1239,ip_network#1240,recipient_id_hash#1241] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1243, 0, 0) AS clients#287]
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.339+0000] {spark_submit.py:571} INFO - :        :              :                                      +- Project [transaction_id#1242, client_id#1243, datetime#1244, amount#1245, currency#1246, merchant#114, transaction_type#1248, category#1249, country_code#1250, region#1251, device_type#115, session_id#1253, channel#1254, transaction_purpose#1255, ip_network#1256, recipient_id_hash#1257, dt_30#79, concat(region#1251, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :              :                                         +- Filter transaction_type#1248 IN (withdrawal)
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :              :                                            +- Project [transaction_id#1242, client_id#1243, datetime#1244, amount#1245, currency#1246, coalesce(merchant#1247, cast(no_merchant as string)) AS merchant#114, transaction_type#1248, category#1249, country_code#1250, region#1251, coalesce(device_type#1252, cast(unknown as string)) AS device_type#115, session_id#1253, channel#1254, transaction_purpose#1255, ip_network#1256, recipient_id_hash#1257, dt_30#79]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :              :                                               +- Project [transaction_id#1242, client_id#1243, datetime#1244, amount#1245, currency#1246, merchant#1247, transaction_type#1248, category#1249, country_code#1250, region#1251, device_type#1252, session_id#1253, channel#1254, transaction_purpose#1255, ip_network#1256, recipient_id_hash#1257, cast(date_trunc(minute, datetime#1244, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :              :                                                  +- Relation [transaction_id#1242,client_id#1243,datetime#1244,amount#1245,currency#1246,merchant#1247,transaction_type#1248,category#1249,country_code#1250,region#1251,device_type#1252,session_id#1253,channel#1254,transaction_purpose#1255,ip_network#1256,recipient_id_hash#1257] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :              +- Deduplicate [dst#134]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                 +- Project [dst#134]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                    +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                       +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                          +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                             +- Union false, false
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_id#1259 AS src#133, recipient_id_hash#1273 AS dst#134, p2p AS relationship#135, LOG1P(amount#1261) AS weight#136]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                                :  +- Filter isnotnull(recipient_id_hash#1273)
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                                :     +- Filter (transaction_type#1264 = p2p)
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                                :        +- Project [transaction_id#1258, client_id#1259, datetime#1260, amount#1261, currency#1262, coalesce(merchant#1263, cast(no_merchant as string)) AS merchant#114, transaction_type#1264, category#1265, country_code#1266, region#1267, coalesce(device_type#1268, cast(unknown as string)) AS device_type#115, session_id#1269, channel#1270, transaction_purpose#1271, ip_network#1272, recipient_id_hash#1273, dt_30#79]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                                :           +- Project [transaction_id#1258, client_id#1259, datetime#1260, amount#1261, currency#1262, merchant#1263, transaction_type#1264, category#1265, country_code#1266, region#1267, device_type#1268, session_id#1269, channel#1270, transaction_purpose#1271, ip_network#1272, recipient_id_hash#1273, cast(date_trunc(minute, datetime#1260, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                                :              +- Relation [transaction_id#1258,client_id#1259,datetime#1260,amount#1261,currency#1262,merchant#1263,transaction_type#1264,category#1265,country_code#1266,region#1267,device_type#1268,session_id#1269,channel#1270,transaction_purpose#1271,ip_network#1272,recipient_id_hash#1273] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.340+0000] {spark_submit.py:571} INFO - :        :                                :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1275, 0, 0) AS clients#159]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :                    +- Project [transaction_id#1274, client_id#1275, datetime#1276, amount#1277, currency#1278, coalesce(merchant#1279, cast(no_merchant as string)) AS merchant#114, transaction_type#1280, category#1281, country_code#1282, region#1283, coalesce(device_type#1284, cast(unknown as string)) AS device_type#115, session_id#1285, channel#1286, transaction_purpose#1287, ip_network#1288, recipient_id_hash#1289, dt_30#79]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :                       +- Project [transaction_id#1274, client_id#1275, datetime#1276, amount#1277, currency#1278, merchant#1279, transaction_type#1280, category#1281, country_code#1282, region#1283, device_type#1284, session_id#1285, channel#1286, transaction_purpose#1287, ip_network#1288, recipient_id_hash#1289, cast(date_trunc(minute, datetime#1276, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :                          +- Relation [transaction_id#1274,client_id#1275,datetime#1276,amount#1277,currency#1278,merchant#1279,transaction_type#1280,category#1281,country_code#1282,region#1283,device_type#1284,session_id#1285,channel#1286,transaction_purpose#1287,ip_network#1288,recipient_id_hash#1289] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :  +- Project [session_id#1301, clients#195, client_pairs#201]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :              +- Aggregate [session_id#1301], [session_id#1301, collect_set(client_id#1291, 0, 0) AS clients#195]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :                 +- Filter isnotnull(session_id#1301)
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :                    +- Project [transaction_id#1290, client_id#1291, datetime#1292, amount#1293, currency#1294, coalesce(merchant#1295, cast(no_merchant as string)) AS merchant#114, transaction_type#1296, category#1297, country_code#1298, region#1299, coalesce(device_type#1300, cast(unknown as string)) AS device_type#115, session_id#1301, channel#1302, transaction_purpose#1303, ip_network#1304, recipient_id_hash#1305, dt_30#79]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :                       +- Project [transaction_id#1290, client_id#1291, datetime#1292, amount#1293, currency#1294, merchant#1295, transaction_type#1296, category#1297, country_code#1298, region#1299, device_type#1300, session_id#1301, channel#1302, transaction_purpose#1303, ip_network#1304, recipient_id_hash#1305, cast(date_trunc(minute, datetime#1292, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :                          +- Relation [transaction_id#1290,client_id#1291,datetime#1292,amount#1293,currency#1294,merchant#1295,transaction_type#1296,category#1297,country_code#1298,region#1299,device_type#1300,session_id#1301,channel#1302,transaction_purpose#1303,ip_network#1304,recipient_id_hash#1305] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.341+0000] {spark_submit.py:571} INFO - :        :                                :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                :  +- Project [ip_network#1320, clients#231, client_pairs#237]
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                :              +- Aggregate [ip_network#1320], [ip_network#1320, collect_set(client_id#1307, 0, 0) AS clients#231]
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                :                 +- Filter isnotnull(ip_network#1320)
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                :                    +- Project [transaction_id#1306, client_id#1307, datetime#1308, amount#1309, currency#1310, coalesce(merchant#1311, cast(no_merchant as string)) AS merchant#114, transaction_type#1312, category#1313, country_code#1314, region#1315, coalesce(device_type#1316, cast(unknown as string)) AS device_type#115, session_id#1317, channel#1318, transaction_purpose#1319, ip_network#1320, recipient_id_hash#1321, dt_30#79]
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                :                       +- Project [transaction_id#1306, client_id#1307, datetime#1308, amount#1309, currency#1310, merchant#1311, transaction_type#1312, category#1313, country_code#1314, region#1315, device_type#1316, session_id#1317, channel#1318, transaction_purpose#1319, ip_network#1320, recipient_id_hash#1321, cast(date_trunc(minute, datetime#1308, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                :                          +- Relation [transaction_id#1306,client_id#1307,datetime#1308,amount#1309,currency#1310,merchant#1311,transaction_type#1312,category#1313,country_code#1314,region#1315,device_type#1316,session_id#1317,channel#1318,transaction_purpose#1319,ip_network#1320,recipient_id_hash#1321] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                   +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                      +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                         +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                            +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                               +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1323, 0, 0) AS clients#287]
[2025-05-08T19:30:37.342+0000] {spark_submit.py:571} INFO - :        :                                                  +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :        :                                                     +- Project [transaction_id#1322, client_id#1323, datetime#1324, amount#1325, currency#1326, merchant#114, transaction_type#1328, category#1329, country_code#1330, region#1331, device_type#115, session_id#1333, channel#1334, transaction_purpose#1335, ip_network#1336, recipient_id_hash#1337, dt_30#79, concat(region#1331, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :        :                                                        +- Filter transaction_type#1328 IN (withdrawal)
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :        :                                                           +- Project [transaction_id#1322, client_id#1323, datetime#1324, amount#1325, currency#1326, coalesce(merchant#1327, cast(no_merchant as string)) AS merchant#114, transaction_type#1328, category#1329, country_code#1330, region#1331, coalesce(device_type#1332, cast(unknown as string)) AS device_type#115, session_id#1333, channel#1334, transaction_purpose#1335, ip_network#1336, recipient_id_hash#1337, dt_30#79]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :        :                                                              +- Project [transaction_id#1322, client_id#1323, datetime#1324, amount#1325, currency#1326, merchant#1327, transaction_type#1328, category#1329, country_code#1330, region#1331, device_type#1332, session_id#1333, channel#1334, transaction_purpose#1335, ip_network#1336, recipient_id_hash#1337, cast(date_trunc(minute, datetime#1324, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :        :                                                                 +- Relation [transaction_id#1322,client_id#1323,datetime#1324,amount#1325,currency#1326,merchant#1327,transaction_type#1328,category#1329,country_code#1330,region#1331,device_type#1332,session_id#1333,channel#1334,transaction_purpose#1335,ip_network#1336,recipient_id_hash#1337] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :        +- Project [struct(id, id#486) AS dst#503]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :           +- Project [src#133 AS id#486]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :              +- Deduplicate [src#133]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :                 +- Union false, false
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :                    :- Deduplicate [src#133]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :                    :  +- Project [src#133]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :                    :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :                    :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :                    :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :                    :              +- Union false, false
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_id#1339 AS src#133, recipient_id_hash#1353 AS dst#134, p2p AS relationship#135, LOG1P(amount#1341) AS weight#136]
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Filter isnotnull(recipient_id_hash#1353)
[2025-05-08T19:30:37.343+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Filter (transaction_type#1344 = p2p)
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Project [transaction_id#1338, client_id#1339, datetime#1340, amount#1341, currency#1342, coalesce(merchant#1343, cast(no_merchant as string)) AS merchant#114, transaction_type#1344, category#1345, country_code#1346, region#1347, coalesce(device_type#1348, cast(unknown as string)) AS device_type#115, session_id#1349, channel#1350, transaction_purpose#1351, ip_network#1352, recipient_id_hash#1353, dt_30#79]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Project [transaction_id#1338, client_id#1339, datetime#1340, amount#1341, currency#1342, merchant#1343, transaction_type#1344, category#1345, country_code#1346, region#1347, device_type#1348, session_id#1349, channel#1350, transaction_purpose#1351, ip_network#1352, recipient_id_hash#1353, cast(date_trunc(minute, datetime#1340, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Relation [transaction_id#1338,client_id#1339,datetime#1340,amount#1341,currency#1342,merchant#1343,transaction_type#1344,category#1345,country_code#1346,region#1347,device_type#1348,session_id#1349,channel#1350,transaction_purpose#1351,ip_network#1352,recipient_id_hash#1353] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1355, 0, 0) AS clients#159]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :                    +- Project [transaction_id#1354, client_id#1355, datetime#1356, amount#1357, currency#1358, coalesce(merchant#1359, cast(no_merchant as string)) AS merchant#114, transaction_type#1360, category#1361, country_code#1362, region#1363, coalesce(device_type#1364, cast(unknown as string)) AS device_type#115, session_id#1365, channel#1366, transaction_purpose#1367, ip_network#1368, recipient_id_hash#1369, dt_30#79]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :                       +- Project [transaction_id#1354, client_id#1355, datetime#1356, amount#1357, currency#1358, merchant#1359, transaction_type#1360, category#1361, country_code#1362, region#1363, device_type#1364, session_id#1365, channel#1366, transaction_purpose#1367, ip_network#1368, recipient_id_hash#1369, cast(date_trunc(minute, datetime#1356, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :                          +- Relation [transaction_id#1354,client_id#1355,datetime#1356,amount#1357,currency#1358,merchant#1359,transaction_type#1360,category#1361,country_code#1362,region#1363,device_type#1364,session_id#1365,channel#1366,transaction_purpose#1367,ip_network#1368,recipient_id_hash#1369] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Project [session_id#1381, clients#195, client_pairs#201]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.344+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Aggregate [session_id#1381], [session_id#1381, collect_set(client_id#1371, 0, 0) AS clients#195]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :                 +- Filter isnotnull(session_id#1381)
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :                    +- Project [transaction_id#1370, client_id#1371, datetime#1372, amount#1373, currency#1374, coalesce(merchant#1375, cast(no_merchant as string)) AS merchant#114, transaction_type#1376, category#1377, country_code#1378, region#1379, coalesce(device_type#1380, cast(unknown as string)) AS device_type#115, session_id#1381, channel#1382, transaction_purpose#1383, ip_network#1384, recipient_id_hash#1385, dt_30#79]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :                       +- Project [transaction_id#1370, client_id#1371, datetime#1372, amount#1373, currency#1374, merchant#1375, transaction_type#1376, category#1377, country_code#1378, region#1379, device_type#1380, session_id#1381, channel#1382, transaction_purpose#1383, ip_network#1384, recipient_id_hash#1385, cast(date_trunc(minute, datetime#1372, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :                          +- Relation [transaction_id#1370,client_id#1371,datetime#1372,amount#1373,currency#1374,merchant#1375,transaction_type#1376,category#1377,country_code#1378,region#1379,device_type#1380,session_id#1381,channel#1382,transaction_purpose#1383,ip_network#1384,recipient_id_hash#1385] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :  +- Project [ip_network#1400, clients#231, client_pairs#237]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :              +- Aggregate [ip_network#1400], [ip_network#1400, collect_set(client_id#1387, 0, 0) AS clients#231]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :                 +- Filter isnotnull(ip_network#1400)
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :                    +- Project [transaction_id#1386, client_id#1387, datetime#1388, amount#1389, currency#1390, coalesce(merchant#1391, cast(no_merchant as string)) AS merchant#114, transaction_type#1392, category#1393, country_code#1394, region#1395, coalesce(device_type#1396, cast(unknown as string)) AS device_type#115, session_id#1397, channel#1398, transaction_purpose#1399, ip_network#1400, recipient_id_hash#1401, dt_30#79]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :                       +- Project [transaction_id#1386, client_id#1387, datetime#1388, amount#1389, currency#1390, merchant#1391, transaction_type#1392, category#1393, country_code#1394, region#1395, device_type#1396, session_id#1397, channel#1398, transaction_purpose#1399, ip_network#1400, recipient_id_hash#1401, cast(date_trunc(minute, datetime#1388, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 :                          +- Relation [transaction_id#1386,client_id#1387,datetime#1388,amount#1389,currency#1390,merchant#1391,transaction_type#1392,category#1393,country_code#1394,region#1395,device_type#1396,session_id#1397,channel#1398,transaction_purpose#1399,ip_network#1400,recipient_id_hash#1401] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.345+0000] {spark_submit.py:571} INFO - :                    :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                    :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                    :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                    :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1403, 0, 0) AS clients#287]
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                    :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                    :                                      +- Project [transaction_id#1402, client_id#1403, datetime#1404, amount#1405, currency#1406, merchant#114, transaction_type#1408, category#1409, country_code#1410, region#1411, device_type#115, session_id#1413, channel#1414, transaction_purpose#1415, ip_network#1416, recipient_id_hash#1417, dt_30#79, concat(region#1411, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                    :                                         +- Filter transaction_type#1408 IN (withdrawal)
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                    :                                            +- Project [transaction_id#1402, client_id#1403, datetime#1404, amount#1405, currency#1406, coalesce(merchant#1407, cast(no_merchant as string)) AS merchant#114, transaction_type#1408, category#1409, country_code#1410, region#1411, coalesce(device_type#1412, cast(unknown as string)) AS device_type#115, session_id#1413, channel#1414, transaction_purpose#1415, ip_network#1416, recipient_id_hash#1417, dt_30#79]
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                    :                                               +- Project [transaction_id#1402, client_id#1403, datetime#1404, amount#1405, currency#1406, merchant#1407, transaction_type#1408, category#1409, country_code#1410, region#1411, device_type#1412, session_id#1413, channel#1414, transaction_purpose#1415, ip_network#1416, recipient_id_hash#1417, cast(date_trunc(minute, datetime#1404, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                    :                                                  +- Relation [transaction_id#1402,client_id#1403,datetime#1404,amount#1405,currency#1406,merchant#1407,transaction_type#1408,category#1409,country_code#1410,region#1411,device_type#1412,session_id#1413,channel#1414,transaction_purpose#1415,ip_network#1416,recipient_id_hash#1417] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                    +- Deduplicate [dst#134]
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                       +- Project [dst#134]
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                          +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                             +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                                +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                                   +- Union false, false
[2025-05-08T19:30:37.346+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_id#1419 AS src#133, recipient_id_hash#1433 AS dst#134, p2p AS relationship#135, LOG1P(amount#1421) AS weight#136]
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :  +- Filter isnotnull(recipient_id_hash#1433)
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :     +- Filter (transaction_type#1424 = p2p)
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :        +- Project [transaction_id#1418, client_id#1419, datetime#1420, amount#1421, currency#1422, coalesce(merchant#1423, cast(no_merchant as string)) AS merchant#114, transaction_type#1424, category#1425, country_code#1426, region#1427, coalesce(device_type#1428, cast(unknown as string)) AS device_type#115, session_id#1429, channel#1430, transaction_purpose#1431, ip_network#1432, recipient_id_hash#1433, dt_30#79]
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :           +- Project [transaction_id#1418, client_id#1419, datetime#1420, amount#1421, currency#1422, merchant#1423, transaction_type#1424, category#1425, country_code#1426, region#1427, device_type#1428, session_id#1429, channel#1430, transaction_purpose#1431, ip_network#1432, recipient_id_hash#1433, cast(date_trunc(minute, datetime#1420, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :              +- Relation [transaction_id#1418,client_id#1419,datetime#1420,amount#1421,currency#1422,merchant#1423,transaction_type#1424,category#1425,country_code#1426,region#1427,device_type#1428,session_id#1429,channel#1430,transaction_purpose#1431,ip_network#1432,recipient_id_hash#1433] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1435, 0, 0) AS clients#159]
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :                    +- Project [transaction_id#1434, client_id#1435, datetime#1436, amount#1437, currency#1438, coalesce(merchant#1439, cast(no_merchant as string)) AS merchant#114, transaction_type#1440, category#1441, country_code#1442, region#1443, coalesce(device_type#1444, cast(unknown as string)) AS device_type#115, session_id#1445, channel#1446, transaction_purpose#1447, ip_network#1448, recipient_id_hash#1449, dt_30#79]
[2025-05-08T19:30:37.347+0000] {spark_submit.py:571} INFO - :                                      :                       +- Project [transaction_id#1434, client_id#1435, datetime#1436, amount#1437, currency#1438, merchant#1439, transaction_type#1440, category#1441, country_code#1442, region#1443, device_type#1444, session_id#1445, channel#1446, transaction_purpose#1447, ip_network#1448, recipient_id_hash#1449, cast(date_trunc(minute, datetime#1436, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :                          +- Relation [transaction_id#1434,client_id#1435,datetime#1436,amount#1437,currency#1438,merchant#1439,transaction_type#1440,category#1441,country_code#1442,region#1443,device_type#1444,session_id#1445,channel#1446,transaction_purpose#1447,ip_network#1448,recipient_id_hash#1449] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :  +- Project [session_id#1461, clients#195, client_pairs#201]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :              +- Aggregate [session_id#1461], [session_id#1461, collect_set(client_id#1451, 0, 0) AS clients#195]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :                 +- Filter isnotnull(session_id#1461)
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :                    +- Project [transaction_id#1450, client_id#1451, datetime#1452, amount#1453, currency#1454, coalesce(merchant#1455, cast(no_merchant as string)) AS merchant#114, transaction_type#1456, category#1457, country_code#1458, region#1459, coalesce(device_type#1460, cast(unknown as string)) AS device_type#115, session_id#1461, channel#1462, transaction_purpose#1463, ip_network#1464, recipient_id_hash#1465, dt_30#79]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :                       +- Project [transaction_id#1450, client_id#1451, datetime#1452, amount#1453, currency#1454, merchant#1455, transaction_type#1456, category#1457, country_code#1458, region#1459, device_type#1460, session_id#1461, channel#1462, transaction_purpose#1463, ip_network#1464, recipient_id_hash#1465, cast(date_trunc(minute, datetime#1452, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :                          +- Relation [transaction_id#1450,client_id#1451,datetime#1452,amount#1453,currency#1454,merchant#1455,transaction_type#1456,category#1457,country_code#1458,region#1459,device_type#1460,session_id#1461,channel#1462,transaction_purpose#1463,ip_network#1464,recipient_id_hash#1465] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :  +- Project [ip_network#1480, clients#231, client_pairs#237]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.348+0000] {spark_submit.py:571} INFO - :                                      :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                      :              +- Aggregate [ip_network#1480], [ip_network#1480, collect_set(client_id#1467, 0, 0) AS clients#231]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                      :                 +- Filter isnotnull(ip_network#1480)
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                      :                    +- Project [transaction_id#1466, client_id#1467, datetime#1468, amount#1469, currency#1470, coalesce(merchant#1471, cast(no_merchant as string)) AS merchant#114, transaction_type#1472, category#1473, country_code#1474, region#1475, coalesce(device_type#1476, cast(unknown as string)) AS device_type#115, session_id#1477, channel#1478, transaction_purpose#1479, ip_network#1480, recipient_id_hash#1481, dt_30#79]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                      :                       +- Project [transaction_id#1466, client_id#1467, datetime#1468, amount#1469, currency#1470, merchant#1471, transaction_type#1472, category#1473, country_code#1474, region#1475, device_type#1476, session_id#1477, channel#1478, transaction_purpose#1479, ip_network#1480, recipient_id_hash#1481, cast(date_trunc(minute, datetime#1468, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                      :                          +- Relation [transaction_id#1466,client_id#1467,datetime#1468,amount#1469,currency#1470,merchant#1471,transaction_type#1472,category#1473,country_code#1474,region#1475,device_type#1476,session_id#1477,channel#1478,transaction_purpose#1479,ip_network#1480,recipient_id_hash#1481] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                      +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                         +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                            +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                               +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                                  +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                                     +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1483, 0, 0) AS clients#287]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                                        +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                                           +- Project [transaction_id#1482, client_id#1483, datetime#1484, amount#1485, currency#1486, merchant#114, transaction_type#1488, category#1489, country_code#1490, region#1491, device_type#115, session_id#1493, channel#1494, transaction_purpose#1495, ip_network#1496, recipient_id_hash#1497, dt_30#79, concat(region#1491, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                                              +- Filter transaction_type#1488 IN (withdrawal)
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                                                 +- Project [transaction_id#1482, client_id#1483, datetime#1484, amount#1485, currency#1486, coalesce(merchant#1487, cast(no_merchant as string)) AS merchant#114, transaction_type#1488, category#1489, country_code#1490, region#1491, coalesce(device_type#1492, cast(unknown as string)) AS device_type#115, session_id#1493, channel#1494, transaction_purpose#1495, ip_network#1496, recipient_id_hash#1497, dt_30#79]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                                                    +- Project [transaction_id#1482, client_id#1483, datetime#1484, amount#1485, currency#1486, merchant#1487, transaction_type#1488, category#1489, country_code#1490, region#1491, device_type#1492, session_id#1493, channel#1494, transaction_purpose#1495, ip_network#1496, recipient_id_hash#1497, cast(date_trunc(minute, datetime#1484, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - :                                                                       +- Relation [transaction_id#1482,client_id#1483,datetime#1484,amount#1485,currency#1486,merchant#1487,transaction_type#1488,category#1489,country_code#1490,region#1491,device_type#1492,session_id#1493,channel#1494,transaction_purpose#1495,ip_network#1496,recipient_id_hash#1497] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - +- Project [src#133 AS id#486]
[2025-05-08T19:30:37.349+0000] {spark_submit.py:571} INFO - +- Deduplicate [src#133]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - +- Union false, false
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :- Deduplicate [src#133]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :  +- Project [src#133]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :     +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :        +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :           +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :              +- Union false, false
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :- Project [client_id#935 AS src#133, recipient_id_hash#949 AS dst#134, p2p AS relationship#135, LOG1P(amount#937) AS weight#136]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :  +- Filter isnotnull(recipient_id_hash#949)
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :     +- Filter (transaction_type#940 = p2p)
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :        +- Project [transaction_id#934, client_id#935, datetime#936, amount#937, currency#938, coalesce(merchant#939, cast(no_merchant as string)) AS merchant#114, transaction_type#940, category#941, country_code#942, region#943, coalesce(device_type#944, cast(unknown as string)) AS device_type#115, session_id#945, channel#946, transaction_purpose#947, ip_network#948, recipient_id_hash#949, dt_30#79]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :           +- Project [transaction_id#934, client_id#935, datetime#936, amount#937, currency#938, merchant#939, transaction_type#940, category#941, country_code#942, region#943, device_type#944, session_id#945, channel#946, transaction_purpose#947, ip_network#948, recipient_id_hash#949, cast(date_trunc(minute, datetime#936, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :              +- Relation [transaction_id#934,client_id#935,datetime#936,amount#937,currency#938,merchant#939,transaction_type#940,category#941,country_code#942,region#943,device_type#944,session_id#945,channel#946,transaction_purpose#947,ip_network#948,recipient_id_hash#949] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#951, 0, 0) AS clients#159]
[2025-05-08T19:30:37.350+0000] {spark_submit.py:571} INFO - :                 :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [transaction_id#950, client_id#951, datetime#952, amount#953, currency#954, coalesce(merchant#955, cast(no_merchant as string)) AS merchant#114, transaction_type#956, category#957, country_code#958, region#959, coalesce(device_type#960, cast(unknown as string)) AS device_type#115, session_id#961, channel#962, transaction_purpose#963, ip_network#964, recipient_id_hash#965, dt_30#79]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :                       +- Project [transaction_id#950, client_id#951, datetime#952, amount#953, currency#954, merchant#955, transaction_type#956, category#957, country_code#958, region#959, device_type#960, session_id#961, channel#962, transaction_purpose#963, ip_network#964, recipient_id_hash#965, cast(date_trunc(minute, datetime#952, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :                          +- Relation [transaction_id#950,client_id#951,datetime#952,amount#953,currency#954,merchant#955,transaction_type#956,category#957,country_code#958,region#959,device_type#960,session_id#961,channel#962,transaction_purpose#963,ip_network#964,recipient_id_hash#965] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :  +- Project [session_id#977, clients#195, client_pairs#201]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :              +- Aggregate [session_id#977], [session_id#977, collect_set(client_id#967, 0, 0) AS clients#195]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :                 +- Filter isnotnull(session_id#977)
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [transaction_id#966, client_id#967, datetime#968, amount#969, currency#970, coalesce(merchant#971, cast(no_merchant as string)) AS merchant#114, transaction_type#972, category#973, country_code#974, region#975, coalesce(device_type#976, cast(unknown as string)) AS device_type#115, session_id#977, channel#978, transaction_purpose#979, ip_network#980, recipient_id_hash#981, dt_30#79]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :                       +- Project [transaction_id#966, client_id#967, datetime#968, amount#969, currency#970, merchant#971, transaction_type#972, category#973, country_code#974, region#975, device_type#976, session_id#977, channel#978, transaction_purpose#979, ip_network#980, recipient_id_hash#981, cast(date_trunc(minute, datetime#968, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :                          +- Relation [transaction_id#966,client_id#967,datetime#968,amount#969,currency#970,merchant#971,transaction_type#972,category#973,country_code#974,region#975,device_type#976,session_id#977,channel#978,transaction_purpose#979,ip_network#980,recipient_id_hash#981] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :  +- Project [ip_network#996, clients#231, client_pairs#237]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.351+0000] {spark_submit.py:571} INFO - :                 :              +- Aggregate [ip_network#996], [ip_network#996, collect_set(client_id#983, 0, 0) AS clients#231]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                 :                 +- Filter isnotnull(ip_network#996)
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                 :                    +- Project [transaction_id#982, client_id#983, datetime#984, amount#985, currency#986, coalesce(merchant#987, cast(no_merchant as string)) AS merchant#114, transaction_type#988, category#989, country_code#990, region#991, coalesce(device_type#992, cast(unknown as string)) AS device_type#115, session_id#993, channel#994, transaction_purpose#995, ip_network#996, recipient_id_hash#997, dt_30#79]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                 :                       +- Project [transaction_id#982, client_id#983, datetime#984, amount#985, currency#986, merchant#987, transaction_type#988, category#989, country_code#990, region#991, device_type#992, session_id#993, channel#994, transaction_purpose#995, ip_network#996, recipient_id_hash#997, cast(date_trunc(minute, datetime#984, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                 :                          +- Relation [transaction_id#982,client_id#983,datetime#984,amount#985,currency#986,merchant#987,transaction_type#988,category#989,country_code#990,region#991,device_type#992,session_id#993,channel#994,transaction_purpose#995,ip_network#996,recipient_id_hash#997] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                 +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                    +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                       +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                          +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                             +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                                +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#999, 0, 0) AS clients#287]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                                   +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                                      +- Project [transaction_id#998, client_id#999, datetime#1000, amount#1001, currency#1002, merchant#114, transaction_type#1004, category#1005, country_code#1006, region#1007, device_type#115, session_id#1009, channel#1010, transaction_purpose#1011, ip_network#1012, recipient_id_hash#1013, dt_30#79, concat(region#1007, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                                         +- Filter transaction_type#1004 IN (withdrawal)
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                                            +- Project [transaction_id#998, client_id#999, datetime#1000, amount#1001, currency#1002, coalesce(merchant#1003, cast(no_merchant as string)) AS merchant#114, transaction_type#1004, category#1005, country_code#1006, region#1007, coalesce(device_type#1008, cast(unknown as string)) AS device_type#115, session_id#1009, channel#1010, transaction_purpose#1011, ip_network#1012, recipient_id_hash#1013, dt_30#79]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                                               +- Project [transaction_id#998, client_id#999, datetime#1000, amount#1001, currency#1002, merchant#1003, transaction_type#1004, category#1005, country_code#1006, region#1007, device_type#1008, session_id#1009, channel#1010, transaction_purpose#1011, ip_network#1012, recipient_id_hash#1013, cast(date_trunc(minute, datetime#1000, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - :                                                  +- Relation [transaction_id#998,client_id#999,datetime#1000,amount#1001,currency#1002,merchant#1003,transaction_type#1004,category#1005,country_code#1006,region#1007,device_type#1008,session_id#1009,channel#1010,transaction_purpose#1011,ip_network#1012,recipient_id_hash#1013] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - +- Deduplicate [dst#134]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - +- Project [dst#134]
[2025-05-08T19:30:37.352+0000] {spark_submit.py:571} INFO - +- Filter (weight#390 >= 0.5)
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - +- Project [src#133, dst#134, weight#390, relationships#392, array_join(relationships#392, ,, None) AS relationships_str#397]
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - +- Aggregate [src#133, dst#134], [src#133, dst#134, sum(weight#136) AS weight#390, collect_set(relationship#135, 0, 0) AS relationships#392]
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - +- Union false, false
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :- Project [client_id#1015 AS src#133, recipient_id_hash#1029 AS dst#134, p2p AS relationship#135, LOG1P(amount#1017) AS weight#136]
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :  +- Filter isnotnull(recipient_id_hash#1029)
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :     +- Filter (transaction_type#1020 = p2p)
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :        +- Project [transaction_id#1014, client_id#1015, datetime#1016, amount#1017, currency#1018, coalesce(merchant#1019, cast(no_merchant as string)) AS merchant#114, transaction_type#1020, category#1021, country_code#1022, region#1023, coalesce(device_type#1024, cast(unknown as string)) AS device_type#115, session_id#1025, channel#1026, transaction_purpose#1027, ip_network#1028, recipient_id_hash#1029, dt_30#79]
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :           +- Project [transaction_id#1014, client_id#1015, datetime#1016, amount#1017, currency#1018, merchant#1019, transaction_type#1020, category#1021, country_code#1022, region#1023, device_type#1024, session_id#1025, channel#1026, transaction_purpose#1027, ip_network#1028, recipient_id_hash#1029, cast(date_trunc(minute, datetime#1016, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :              +- Relation [transaction_id#1014,client_id#1015,datetime#1016,amount#1017,currency#1018,merchant#1019,transaction_type#1020,category#1021,country_code#1022,region#1023,device_type#1024,session_id#1025,channel#1026,transaction_purpose#1027,ip_network#1028,recipient_id_hash#1029] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :- Project [client_pairs#165[0] AS src#169, client_pairs#165[1] AS dst#170, merchant AS relationship#171, 0.5 AS weight#172]
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :  +- Project [merchant#114, clients#159, client_pairs#165]
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#159, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#163 + 1), (size(clients#159, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#159[lambda i#163], clients#159[lambda j#164]), lambda j#164, false)), lambda i#163, false))))), false, [client_pairs#165]
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :        +- Filter (size(clients#159, true) >= 2)
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :           +- Filter (size(clients#159, true) <= 100)
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :              +- Aggregate [merchant#114], [merchant#114, collect_set(client_id#1031, 0, 0) AS clients#159]
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :                 +- Filter isnotnull(merchant#114)
[2025-05-08T19:30:37.353+0000] {spark_submit.py:571} INFO - :                    +- Project [transaction_id#1030, client_id#1031, datetime#1032, amount#1033, currency#1034, coalesce(merchant#1035, cast(no_merchant as string)) AS merchant#114, transaction_type#1036, category#1037, country_code#1038, region#1039, coalesce(device_type#1040, cast(unknown as string)) AS device_type#115, session_id#1041, channel#1042, transaction_purpose#1043, ip_network#1044, recipient_id_hash#1045, dt_30#79]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :                       +- Project [transaction_id#1030, client_id#1031, datetime#1032, amount#1033, currency#1034, merchant#1035, transaction_type#1036, category#1037, country_code#1038, region#1039, device_type#1040, session_id#1041, channel#1042, transaction_purpose#1043, ip_network#1044, recipient_id_hash#1045, cast(date_trunc(minute, datetime#1032, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :                          +- Relation [transaction_id#1030,client_id#1031,datetime#1032,amount#1033,currency#1034,merchant#1035,transaction_type#1036,category#1037,country_code#1038,region#1039,device_type#1040,session_id#1041,channel#1042,transaction_purpose#1043,ip_network#1044,recipient_id_hash#1045] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :- Project [client_pairs#201[0] AS src#205, client_pairs#201[1] AS dst#206, session AS relationship#207, 0.7 AS weight#208]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :  +- Project [session_id#1057, clients#195, client_pairs#201]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#195, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#199 + 1), (size(clients#195, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#195[lambda i#199], clients#195[lambda j#200]), lambda j#200, false)), lambda i#199, false))))), false, [client_pairs#201]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :        +- Filter (size(clients#195, true) >= 2)
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :           +- Filter (size(clients#195, true) <= 50)
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :              +- Aggregate [session_id#1057], [session_id#1057, collect_set(client_id#1047, 0, 0) AS clients#195]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :                 +- Filter isnotnull(session_id#1057)
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :                    +- Project [transaction_id#1046, client_id#1047, datetime#1048, amount#1049, currency#1050, coalesce(merchant#1051, cast(no_merchant as string)) AS merchant#114, transaction_type#1052, category#1053, country_code#1054, region#1055, coalesce(device_type#1056, cast(unknown as string)) AS device_type#115, session_id#1057, channel#1058, transaction_purpose#1059, ip_network#1060, recipient_id_hash#1061, dt_30#79]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :                       +- Project [transaction_id#1046, client_id#1047, datetime#1048, amount#1049, currency#1050, merchant#1051, transaction_type#1052, category#1053, country_code#1054, region#1055, device_type#1056, session_id#1057, channel#1058, transaction_purpose#1059, ip_network#1060, recipient_id_hash#1061, cast(date_trunc(minute, datetime#1048, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :                          +- Relation [transaction_id#1046,client_id#1047,datetime#1048,amount#1049,currency#1050,merchant#1051,transaction_type#1052,category#1053,country_code#1054,region#1055,device_type#1056,session_id#1057,channel#1058,transaction_purpose#1059,ip_network#1060,recipient_id_hash#1061] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :- Project [client_pairs#237[0] AS src#241, client_pairs#237[1] AS dst#242, ip AS relationship#243, 0.6 AS weight#244]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :  +- Project [ip_network#1076, clients#231, client_pairs#237]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :     +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#231, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#235 + 1), (size(clients#231, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#231[lambda i#235], clients#231[lambda j#236]), lambda j#236, false)), lambda i#235, false))))), false, [client_pairs#237]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :        +- Filter (size(clients#231, true) >= 2)
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :           +- Filter (size(clients#231, true) <= 50)
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :              +- Aggregate [ip_network#1076], [ip_network#1076, collect_set(client_id#1063, 0, 0) AS clients#231]
[2025-05-08T19:30:37.354+0000] {spark_submit.py:571} INFO - :                 +- Filter isnotnull(ip_network#1076)
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - :                    +- Project [transaction_id#1062, client_id#1063, datetime#1064, amount#1065, currency#1066, coalesce(merchant#1067, cast(no_merchant as string)) AS merchant#114, transaction_type#1068, category#1069, country_code#1070, region#1071, coalesce(device_type#1072, cast(unknown as string)) AS device_type#115, session_id#1073, channel#1074, transaction_purpose#1075, ip_network#1076, recipient_id_hash#1077, dt_30#79]
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - :                       +- Project [transaction_id#1062, client_id#1063, datetime#1064, amount#1065, currency#1066, merchant#1067, transaction_type#1068, category#1069, country_code#1070, region#1071, device_type#1072, session_id#1073, channel#1074, transaction_purpose#1075, ip_network#1076, recipient_id_hash#1077, cast(date_trunc(minute, datetime#1064, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - :                          +- Relation [transaction_id#1062,client_id#1063,datetime#1064,amount#1065,currency#1066,merchant#1067,transaction_type#1068,category#1069,country_code#1070,region#1071,device_type#1072,session_id#1073,channel#1074,transaction_purpose#1075,ip_network#1076,recipient_id_hash#1077] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Project [client_pairs#293[0] AS src#297, client_pairs#293[1] AS dst#298, atm AS relationship#299, 0.8 AS weight#300]
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Project [atm_group#249, clients#287, client_pairs#293]
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Generate explode(flatten(array_distinct(transform(sequence(0, (size(clients#287, true) - 2), None, Some(Etc/UTC)), lambdafunction(transform(sequence((lambda i#291 + 1), (size(clients#287, true) - 1), None, Some(Etc/UTC)), lambdafunction(array(clients#287[lambda i#291], clients#287[lambda j#292]), lambda j#292, false)), lambda i#291, false))))), false, [client_pairs#293]
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Filter (size(clients#287, true) >= 2)
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Filter (size(clients#287, true) <= 20)
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Aggregate [atm_group#249], [atm_group#249, collect_set(client_id#1079, 0, 0) AS clients#287]
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Filter isnotnull(atm_group#249)
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Project [transaction_id#1078, client_id#1079, datetime#1080, amount#1081, currency#1082, merchant#114, transaction_type#1084, category#1085, country_code#1086, region#1087, device_type#115, session_id#1089, channel#1090, transaction_purpose#1091, ip_network#1092, recipient_id_hash#1093, dt_30#79, concat(region#1087, _, date_format(dt_30#79, yyyy-MM-dd-HH-mm, Some(Etc/UTC))) AS atm_group#249]
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Filter transaction_type#1084 IN (withdrawal)
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Project [transaction_id#1078, client_id#1079, datetime#1080, amount#1081, currency#1082, coalesce(merchant#1083, cast(no_merchant as string)) AS merchant#114, transaction_type#1084, category#1085, country_code#1086, region#1087, coalesce(device_type#1088, cast(unknown as string)) AS device_type#115, session_id#1089, channel#1090, transaction_purpose#1091, ip_network#1092, recipient_id_hash#1093, dt_30#79]
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Project [transaction_id#1078, client_id#1079, datetime#1080, amount#1081, currency#1082, merchant#1083, transaction_type#1084, category#1085, country_code#1086, region#1087, device_type#1088, session_id#1089, channel#1090, transaction_purpose#1091, ip_network#1092, recipient_id_hash#1093, cast(date_trunc(minute, datetime#1080, Some(Etc/UTC)) as timestamp) AS dt_30#79]
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - +- Relation [transaction_id#1078,client_id#1079,datetime#1080,amount#1081,currency#1082,merchant#1083,transaction_type#1084,category#1085,country_code#1086,region#1087,device_type#1088,session_id#1089,channel#1090,transaction_purpose#1091,ip_network#1092,recipient_id_hash#1093] JDBCRelation(raw.masked_transactions) [numPartitions=1]
[2025-05-08T19:30:37.355+0000] {spark_submit.py:571} INFO - 
[2025-05-08T19:30:37.416+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:37 INFO ShutdownHookManager: Shutdown hook called
[2025-05-08T19:30:37.416+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:37 INFO ShutdownHookManager: Deleting directory /tmp/spark-4481938a-5bc4-4b11-8bfa-0e069e360871
[2025-05-08T19:30:37.419+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:37 INFO ShutdownHookManager: Deleting directory /tmp/spark-fbccb0be-19f5-4b7c-8a86-0995b480387a/pyspark-c896e2ad-86b1-4318-801e-0c5eda959ed8
[2025-05-08T19:30:37.420+0000] {spark_submit.py:571} INFO - 25/05/08 19:30:37 INFO ShutdownHookManager: Deleting directory /tmp/spark-fbccb0be-19f5-4b7c-8a86-0995b480387a
[2025-05-08T19:30:37.484+0000] {taskinstance.py:1824} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/apache/spark/operators/spark_submit.py", line 174, in execute
    self._hook.submit(self.application)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/apache/spark/hooks/spark_submit.py", line 502, in submit
    raise AirflowException(
airflow.exceptions.AirflowException: Cannot execute: spark-submit --master spark://spark-master:7077 --conf spark.driver.maxResultSize=512m --conf spark.sql.shuffle.partitions=10 --packages org.postgresql:postgresql:42.6.0,graphframes:graphframes:0.8.2-spark3.2-s_2.12 --executor-cores 1 --executor-memory 1g --driver-memory 1g --name arrow-spark --verbose /opt/airflow/spark/build_graph.py --jdbc jdbc:postgresql://postgres:5432/finbest --user finbest --password ******. Error code is: 1.
[2025-05-08T19:30:37.487+0000] {taskinstance.py:1345} INFO - Marking task as FAILED. dag_id=graph_analysis, task_id=build_graph, execution_date=20250508T193015, start_date=20250508T193024, end_date=20250508T193037
[2025-05-08T19:30:37.497+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 353 for task build_graph (Cannot execute: spark-submit --master spark://spark-master:7077 --conf spark.driver.maxResultSize=512m --conf spark.sql.shuffle.partitions=10 --packages org.postgresql:postgresql:42.6.0,graphframes:graphframes:0.8.2-spark3.2-s_2.12 --executor-cores 1 --executor-memory 1g --driver-memory 1g --name arrow-spark --verbose /opt/airflow/spark/build_graph.py --jdbc jdbc:postgresql://postgres:5432/finbest --user finbest --password ******. Error code is: 1.; 12641)
[2025-05-08T19:30:37.532+0000] {local_task_job_runner.py:225} INFO - Task exited with return code 1
[2025-05-08T19:30:37.553+0000] {taskinstance.py:2653} INFO - 0 downstream tasks scheduled from follow-on schedule check
