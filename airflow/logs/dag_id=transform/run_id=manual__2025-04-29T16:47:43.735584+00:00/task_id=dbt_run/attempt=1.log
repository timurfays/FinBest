[2025-04-29T16:47:46.081+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: transform.dbt_run manual__2025-04-29T16:47:43.735584+00:00 [queued]>
[2025-04-29T16:47:46.088+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: transform.dbt_run manual__2025-04-29T16:47:43.735584+00:00 [queued]>
[2025-04-29T16:47:46.088+0000] {taskinstance.py:1308} INFO - Starting attempt 1 of 2
[2025-04-29T16:47:46.099+0000] {taskinstance.py:1327} INFO - Executing <Task(PythonOperator): dbt_run> on 2025-04-29 16:47:43.735584+00:00
[2025-04-29T16:47:46.102+0000] {standard_task_runner.py:57} INFO - Started process 207 to run task
[2025-04-29T16:47:46.104+0000] {standard_task_runner.py:84} INFO - Running: ['airflow', 'tasks', 'run', 'transform', 'dbt_run', 'manual__2025-04-29T16:47:43.735584+00:00', '--job-id', '59', '--raw', '--subdir', 'DAGS_FOLDER/transform.py', '--cfg-path', '/tmp/tmpizjx5eqf']
[2025-04-29T16:47:46.105+0000] {standard_task_runner.py:85} INFO - Job 59: Subtask dbt_run
[2025-04-29T16:47:46.139+0000] {task_command.py:410} INFO - Running <TaskInstance: transform.dbt_run manual__2025-04-29T16:47:43.735584+00:00 [running]> on host 2de362e8dcdc
[2025-04-29T16:47:46.290+0000] {taskinstance.py:1547} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='finbest' AIRFLOW_CTX_DAG_ID='transform' AIRFLOW_CTX_TASK_ID='dbt_run' AIRFLOW_CTX_EXECUTION_DATE='2025-04-29T16:47:43.735584+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-04-29T16:47:43.735584+00:00'
[2025-04-29T16:47:46.291+0000] {logging_mixin.py:150} INFO - Проверка существования dbt: True
[2025-04-29T16:47:46.292+0000] {logging_mixin.py:150} INFO - Содержимое каталога /dbt_project:
[2025-04-29T16:47:46.292+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project
[2025-04-29T16:47:46.292+0000] {logging_mixin.py:150} INFO -   Поддиректории: ['logs', 'dbt_packages', 'models', 'target']
[2025-04-29T16:47:46.292+0000] {logging_mixin.py:150} INFO -   Файлы: ['dbt_project.yml', 'profiles.yml', '.user.yml']
[2025-04-29T16:47:46.292+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/logs
[2025-04-29T16:47:46.292+0000] {logging_mixin.py:150} INFO -   Поддиректории: []
[2025-04-29T16:47:46.292+0000] {logging_mixin.py:150} INFO -   Файлы: ['dbt.log']
[2025-04-29T16:47:46.292+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/dbt_packages
[2025-04-29T16:47:46.293+0000] {logging_mixin.py:150} INFO -   Поддиректории: []
[2025-04-29T16:47:46.293+0000] {logging_mixin.py:150} INFO -   Файлы: []
[2025-04-29T16:47:46.293+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/models
[2025-04-29T16:47:46.293+0000] {logging_mixin.py:150} INFO -   Поддиректории: ['mart', 'staging', 'intermediate']
[2025-04-29T16:47:46.293+0000] {logging_mixin.py:150} INFO -   Файлы: []
[2025-04-29T16:47:46.293+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/models/mart
[2025-04-29T16:47:46.293+0000] {logging_mixin.py:150} INFO -   Поддиректории: []
[2025-04-29T16:47:46.293+0000] {logging_mixin.py:150} INFO -   Файлы: ['fact_client_balance.sql']
[2025-04-29T16:47:46.293+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/models/staging
[2025-04-29T16:47:46.293+0000] {logging_mixin.py:150} INFO -   Поддиректории: []
[2025-04-29T16:47:46.294+0000] {logging_mixin.py:150} INFO -   Файлы: ['stg_clients.sql', 'stg_transactions.sql', 'stg_rates.sql']
[2025-04-29T16:47:46.294+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/models/intermediate
[2025-04-29T16:47:46.294+0000] {logging_mixin.py:150} INFO -   Поддиректории: []
[2025-04-29T16:47:46.294+0000] {logging_mixin.py:150} INFO -   Файлы: ['int_daily_transactions.sql']
[2025-04-29T16:47:46.294+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target
[2025-04-29T16:47:46.294+0000] {logging_mixin.py:150} INFO -   Поддиректории: ['compiled', 'run']
[2025-04-29T16:47:46.294+0000] {logging_mixin.py:150} INFO -   Файлы: ['run_results.json', 'partial_parse.msgpack', 'manifest.json', 'graph.gpickle']
[2025-04-29T16:47:46.294+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/compiled
[2025-04-29T16:47:46.294+0000] {logging_mixin.py:150} INFO -   Поддиректории: ['finbest']
[2025-04-29T16:47:46.295+0000] {logging_mixin.py:150} INFO -   Файлы: []
[2025-04-29T16:47:46.295+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/compiled/finbest
[2025-04-29T16:47:46.295+0000] {logging_mixin.py:150} INFO -   Поддиректории: ['models']
[2025-04-29T16:47:46.295+0000] {logging_mixin.py:150} INFO -   Файлы: []
[2025-04-29T16:47:46.295+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/compiled/finbest/models
[2025-04-29T16:47:46.295+0000] {logging_mixin.py:150} INFO -   Поддиректории: ['mart', 'staging', 'intermediate']
[2025-04-29T16:47:46.295+0000] {logging_mixin.py:150} INFO -   Файлы: []
[2025-04-29T16:47:46.295+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/compiled/finbest/models/mart
[2025-04-29T16:47:46.295+0000] {logging_mixin.py:150} INFO -   Поддиректории: []
[2025-04-29T16:47:46.295+0000] {logging_mixin.py:150} INFO -   Файлы: ['fact_client_balance.sql']
[2025-04-29T16:47:46.296+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/compiled/finbest/models/staging
[2025-04-29T16:47:46.296+0000] {logging_mixin.py:150} INFO -   Поддиректории: []
[2025-04-29T16:47:46.296+0000] {logging_mixin.py:150} INFO -   Файлы: ['stg_clients.sql', 'stg_transactions.sql', 'stg_rates.sql']
[2025-04-29T16:47:46.296+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/compiled/finbest/models/intermediate
[2025-04-29T16:47:46.296+0000] {logging_mixin.py:150} INFO -   Поддиректории: []
[2025-04-29T16:47:46.296+0000] {logging_mixin.py:150} INFO -   Файлы: ['int_daily_transactions.sql']
[2025-04-29T16:47:46.296+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/run
[2025-04-29T16:47:46.296+0000] {logging_mixin.py:150} INFO -   Поддиректории: ['finbest']
[2025-04-29T16:47:46.296+0000] {logging_mixin.py:150} INFO -   Файлы: []
[2025-04-29T16:47:46.297+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/run/finbest
[2025-04-29T16:47:46.297+0000] {logging_mixin.py:150} INFO -   Поддиректории: ['models']
[2025-04-29T16:47:46.297+0000] {logging_mixin.py:150} INFO -   Файлы: []
[2025-04-29T16:47:46.297+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/run/finbest/models
[2025-04-29T16:47:46.297+0000] {logging_mixin.py:150} INFO -   Поддиректории: ['mart', 'staging', 'intermediate']
[2025-04-29T16:47:46.297+0000] {logging_mixin.py:150} INFO -   Файлы: []
[2025-04-29T16:47:46.297+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/run/finbest/models/mart
[2025-04-29T16:47:46.297+0000] {logging_mixin.py:150} INFO -   Поддиректории: []
[2025-04-29T16:47:46.297+0000] {logging_mixin.py:150} INFO -   Файлы: ['fact_client_balance.sql']
[2025-04-29T16:47:46.297+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/run/finbest/models/staging
[2025-04-29T16:47:46.298+0000] {logging_mixin.py:150} INFO -   Поддиректории: []
[2025-04-29T16:47:46.298+0000] {logging_mixin.py:150} INFO -   Файлы: ['stg_clients.sql', 'stg_transactions.sql', 'stg_rates.sql']
[2025-04-29T16:47:46.298+0000] {logging_mixin.py:150} INFO - Директория: /dbt_project/target/run/finbest/models/intermediate
[2025-04-29T16:47:46.298+0000] {logging_mixin.py:150} INFO -   Поддиректории: []
[2025-04-29T16:47:46.298+0000] {logging_mixin.py:150} INFO -   Файлы: ['int_daily_transactions.sql']
[2025-04-29T16:47:50.469+0000] {logging_mixin.py:150} INFO - STDOUT:
[2025-04-29T16:47:50.472+0000] {logging_mixin.py:150} INFO - 16:47:48  Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596eaff6550>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596eaff6bd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596eaff64d0>]}
16:47:48  Running with dbt=1.5.11
16:47:48  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'version_check': 'True', 'log_path': '/dbt_project/logs', 'debug': 'True', 'profiles_dir': '/dbt_project', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'default', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'True'}
16:47:48  Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '5b605c75-add1-450f-9895-ed5d8bbfc61c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596eb19c610>]}
16:47:48  Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '5b605c75-add1-450f-9895-ed5d8bbfc61c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596eaff6590>]}
16:47:48  Registered adapter: postgres=1.5.11
16:47:48  checksum: 007b492a958e08141e13011e4198bea48e7f359a98b57e51b7a963fca8fc83af, vars: {}, profile: , target: , version: 1.5.11
16:47:48  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
16:47:48  Partial parsing enabled, no changes found, skipping parsing
16:47:48  Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '5b605c75-add1-450f-9895-ed5d8bbfc61c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596e6b16450>]}
16:47:48  Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '5b605c75-add1-450f-9895-ed5d8bbfc61c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596e7f62d10>]}
16:47:48  Found 5 models, 0 tests, 0 snapshots, 0 analyses, 310 macros, 0 operations, 0 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
16:47:48  Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5b605c75-add1-450f-9895-ed5d8bbfc61c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596e7f62e50>]}
16:47:48  
16:47:48  Acquiring new postgres connection 'master'
16:47:48  Acquiring new postgres connection 'list_finbest'
16:47:48  Using postgres connection "list_finbest"
16:47:48  On list_finbest: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "connection_name": "list_finbest"} */

    select distinct nspname from pg_namespace
  
16:47:48  Opening a new connection, currently in state init
16:47:48  SQL status: SELECT 7 in 0.0 seconds
16:47:48  On list_finbest: Close
16:47:48  Re-using an available connection from the pool (formerly list_finbest, now list_finbest_mart)
16:47:48  Using postgres connection "list_finbest_mart"
16:47:48  On list_finbest_mart: BEGIN
16:47:48  Opening a new connection, currently in state closed
16:47:48  SQL status: BEGIN in 0.0 seconds
16:47:48  Using postgres connection "list_finbest_mart"
16:47:48  On list_finbest_mart: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "connection_name": "list_finbest_mart"} */
select
      'finbest' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'mart'
    union all
    select
      'finbest' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'mart'
  
16:47:48  SQL status: SELECT 7 in 0.0 seconds
16:47:48  On list_finbest_mart: ROLLBACK
16:47:48  On list_finbest_mart: Close
16:47:48  Using postgres connection "master"
16:47:48  On master: BEGIN
16:47:48  Opening a new connection, currently in state init
16:47:48  SQL status: BEGIN in 0.0 seconds
16:47:48  Using postgres connection "master"
16:47:48  On master: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
16:47:48  SQL status: SELECT 0 in 0.0 seconds
16:47:48  Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5b605c75-add1-450f-9895-ed5d8bbfc61c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596e7f53fd0>]}
16:47:48  On master: ROLLBACK
16:47:48  Using postgres connection "master"
16:47:48  On master: BEGIN
16:47:48  SQL status: BEGIN in 0.0 seconds
16:47:48  On master: COMMIT
16:47:48  Using postgres connection "master"
16:47:48  On master: COMMIT
16:47:48  SQL status: COMMIT in 0.0 seconds
16:47:48  On master: Close
16:47:48  Concurrency: 4 threads (target='dev')
16:47:48  
16:47:48  Began running node model.finbest.stg_clients
16:47:48  Began running node model.finbest.stg_rates
16:47:48  Began running node model.finbest.stg_transactions
16:47:48  1 of 5 START sql table model mart.stg_clients .................................. [RUN]
16:47:48  2 of 5 START sql table model mart.stg_rates .................................... [RUN]
16:47:48  3 of 5 START sql table model mart.stg_transactions ............................. [RUN]
16:47:48  Re-using an available connection from the pool (formerly list_finbest_mart, now model.finbest.stg_clients)
16:47:48  Acquiring new postgres connection 'model.finbest.stg_rates'
16:47:48  Acquiring new postgres connection 'model.finbest.stg_transactions'
16:47:48  Began compiling node model.finbest.stg_clients
16:47:48  Began compiling node model.finbest.stg_rates
16:47:48  Began compiling node model.finbest.stg_transactions
16:47:48  Writing injected SQL for node "model.finbest.stg_clients"
16:47:48  Writing injected SQL for node "model.finbest.stg_rates"
16:47:48  Writing injected SQL for node "model.finbest.stg_transactions"
16:47:48  Timing info for model.finbest.stg_clients (compile): 16:47:48.835438 => 16:47:48.846408
16:47:48  Timing info for model.finbest.stg_rates (compile): 16:47:48.842819 => 16:47:48.847142
16:47:48  Began executing node model.finbest.stg_clients
16:47:48  Began executing node model.finbest.stg_rates
16:47:48  Timing info for model.finbest.stg_transactions (compile): 16:47:48.844546 => 16:47:48.848724
16:47:48  Began executing node model.finbest.stg_transactions
16:47:48  Writing runtime sql for node "model.finbest.stg_rates"
16:47:48  Writing runtime sql for node "model.finbest.stg_clients"
16:47:48  Writing runtime sql for node "model.finbest.stg_transactions"
16:47:48  Using postgres connection "model.finbest.stg_rates"
16:47:48  On model.finbest.stg_rates: BEGIN
16:47:48  Opening a new connection, currently in state init
16:47:48  Using postgres connection "model.finbest.stg_transactions"
16:47:48  Using postgres connection "model.finbest.stg_clients"
16:47:48  On model.finbest.stg_transactions: BEGIN
16:47:48  On model.finbest.stg_clients: BEGIN
16:47:48  Opening a new connection, currently in state init
16:47:48  Opening a new connection, currently in state closed
16:47:48  SQL status: BEGIN in 0.0 seconds
16:47:48  Using postgres connection "model.finbest.stg_rates"
16:47:48  On model.finbest.stg_rates: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_rates"} */

  
    

  create  table "finbest"."mart"."stg_rates__dbt_tmp"
  
  
    as
  
  (
    select * from staging.currency_rates
  );
  
16:47:48  SQL status: BEGIN in 0.0 seconds
16:47:48  SQL status: BEGIN in 0.0 seconds
16:47:48  Using postgres connection "model.finbest.stg_clients"
16:47:48  Using postgres connection "model.finbest.stg_transactions"
16:47:48  On model.finbest.stg_clients: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_clients"} */

  
    

  create  table "finbest"."mart"."stg_clients__dbt_tmp"
  
  
    as
  
  (
    select * from raw.masked_clients
  );
  
16:47:48  On model.finbest.stg_transactions: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_transactions"} */

  
    

  create  table "finbest"."mart"."stg_transactions__dbt_tmp"
  
  
    as
  
  (
    select * from raw.masked_transactions
  );
  
16:47:48  SQL status: SELECT 8 in 0.0 seconds
16:47:48  Using postgres connection "model.finbest.stg_rates"
16:47:48  On model.finbest.stg_rates: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_rates"} */
alter table "finbest"."mart"."stg_rates" rename to "stg_rates__dbt_backup"
16:47:48  SQL status: SELECT 1000 in 0.0 seconds
16:47:48  SQL status: SELECT 200 in 0.0 seconds
16:47:48  Using postgres connection "model.finbest.stg_transactions"
16:47:48  SQL status: ALTER TABLE in 0.0 seconds
16:47:48  Using postgres connection "model.finbest.stg_clients"
16:47:48  On model.finbest.stg_transactions: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_transactions"} */
alter table "finbest"."mart"."stg_transactions" rename to "stg_transactions__dbt_backup"
16:47:48  Using postgres connection "model.finbest.stg_rates"
16:47:48  On model.finbest.stg_clients: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_clients"} */
alter table "finbest"."mart"."stg_clients" rename to "stg_clients__dbt_backup"
16:47:48  On model.finbest.stg_rates: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_rates"} */
alter table "finbest"."mart"."stg_rates__dbt_tmp" rename to "stg_rates"
16:47:48  SQL status: ALTER TABLE in 0.0 seconds
16:47:48  Using postgres connection "model.finbest.stg_transactions"
16:47:48  SQL status: ALTER TABLE in 0.0 seconds
16:47:48  On model.finbest.stg_transactions: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_transactions"} */
alter table "finbest"."mart"."stg_transactions__dbt_tmp" rename to "stg_transactions"
16:47:48  SQL status: ALTER TABLE in 0.0 seconds
16:47:48  SQL status: ALTER TABLE in 0.0 seconds
16:47:48  On model.finbest.stg_rates: COMMIT
16:47:48  Using postgres connection "model.finbest.stg_clients"
16:47:48  On model.finbest.stg_transactions: COMMIT
16:47:48  Using postgres connection "model.finbest.stg_rates"
16:47:48  On model.finbest.stg_clients: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_clients"} */
alter table "finbest"."mart"."stg_clients__dbt_tmp" rename to "stg_clients"
16:47:48  Using postgres connection "model.finbest.stg_transactions"
16:47:48  On model.finbest.stg_rates: COMMIT
16:47:48  On model.finbest.stg_transactions: COMMIT
16:47:48  SQL status: ALTER TABLE in 0.0 seconds
16:47:49  On model.finbest.stg_clients: COMMIT
16:47:49  SQL status: COMMIT in 0.0 seconds
16:47:49  SQL status: COMMIT in 0.0 seconds
16:47:49  Using postgres connection "model.finbest.stg_clients"
16:47:49  Using postgres connection "model.finbest.stg_rates"
16:47:49  Using postgres connection "model.finbest.stg_transactions"
16:47:49  On model.finbest.stg_clients: COMMIT
16:47:49  On model.finbest.stg_rates: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_rates"} */
drop table if exists "finbest"."mart"."stg_rates__dbt_backup" cascade
16:47:49  On model.finbest.stg_transactions: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_transactions"} */
drop table if exists "finbest"."mart"."stg_transactions__dbt_backup" cascade
16:47:49  SQL status: COMMIT in 0.0 seconds
16:47:49  Using postgres connection "model.finbest.stg_clients"
16:47:49  SQL status: DROP TABLE in 0.0 seconds
16:47:49  On model.finbest.stg_clients: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.stg_clients"} */
drop table if exists "finbest"."mart"."stg_clients__dbt_backup" cascade
16:47:49  SQL status: DROP TABLE in 0.0 seconds
16:47:49  Timing info for model.finbest.stg_transactions (execute): 16:47:48.916530 => 16:47:49.020277
16:47:49  Timing info for model.finbest.stg_rates (execute): 16:47:48.860028 => 16:47:49.022485
16:47:49  On model.finbest.stg_transactions: Close
16:47:49  SQL status: DROP TABLE in 0.0 seconds
16:47:49  On model.finbest.stg_rates: Close
16:47:49  Timing info for model.finbest.stg_clients (execute): 16:47:48.849211 => 16:47:49.025951
16:47:49  Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5b605c75-add1-450f-9895-ed5d8bbfc61c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596e6b1be10>]}
16:47:49  On model.finbest.stg_clients: Close
16:47:49  Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5b605c75-add1-450f-9895-ed5d8bbfc61c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596e614efd0>]}
16:47:49  3 of 5 OK created sql table model mart.stg_transactions ........................ [SELECT 1000 in 0.19s]
16:47:49  Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5b605c75-add1-450f-9895-ed5d8bbfc61c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596e628cad0>]}
16:47:49  2 of 5 OK created sql table model mart.stg_rates ............................... [SELECT 8 in 0.20s]
16:47:49  Finished running node model.finbest.stg_transactions
16:47:49  1 of 5 OK created sql table model mart.stg_clients ............................. [SELECT 200 in 0.20s]
16:47:49  Finished running node model.finbest.stg_rates
16:47:49  Finished running node model.finbest.stg_clients
16:47:49  Began running node model.finbest.int_daily_transactions
16:47:49  4 of 5 START sql table model mart.int_daily_transactions ....................... [RUN]
16:47:49  Re-using an available connection from the pool (formerly model.finbest.stg_rates, now model.finbest.int_daily_transactions)
16:47:49  Began compiling node model.finbest.int_daily_transactions
16:47:49  Writing injected SQL for node "model.finbest.int_daily_transactions"
16:47:49  Timing info for model.finbest.int_daily_transactions (compile): 16:47:49.038511 => 16:47:49.044727
16:47:49  Began executing node model.finbest.int_daily_transactions
16:47:49  Writing runtime sql for node "model.finbest.int_daily_transactions"
16:47:49  Using postgres connection "model.finbest.int_daily_transactions"
16:47:49  On model.finbest.int_daily_transactions: BEGIN
16:47:49  Opening a new connection, currently in state closed
16:47:49  SQL status: BEGIN in 0.0 seconds
16:47:49  Using postgres connection "model.finbest.int_daily_transactions"
16:47:49  On model.finbest.int_daily_transactions: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.int_daily_transactions"} */

  
    

  create  table "finbest"."mart"."int_daily_transactions__dbt_tmp"
  
  
    as
  
  (
    with t as (
  select date(datetime) as dt, client_id, currency,
         sum(case when transaction_type='deposit' then amount end) as inflow,
         sum(case when transaction_type='withdrawal' then amount end) as outflow,
         count(*) as tx_cnt
  from "finbest"."mart"."stg_transactions"
  group by 1,2,3)
select *, inflow-outflow as net_flow from t
  );
  
16:47:49  SQL status: SELECT 480 in 0.0 seconds
16:47:49  Using postgres connection "model.finbest.int_daily_transactions"
16:47:49  On model.finbest.int_daily_transactions: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.int_daily_transactions"} */
alter table "finbest"."mart"."int_daily_transactions" rename to "int_daily_transactions__dbt_backup"
16:47:49  SQL status: ALTER TABLE in 0.0 seconds
16:47:49  Using postgres connection "model.finbest.int_daily_transactions"
16:47:49  On model.finbest.int_daily_transactions: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.int_daily_transactions"} */
alter table "finbest"."mart"."int_daily_transactions__dbt_tmp" rename to "int_daily_transactions"
16:47:49  SQL status: ALTER TABLE in 0.0 seconds
16:47:49  On model.finbest.int_daily_transactions: COMMIT
16:47:49  Using postgres connection "model.finbest.int_daily_transactions"
16:47:49  On model.finbest.int_daily_transactions: COMMIT
16:47:49  SQL status: COMMIT in 0.0 seconds
16:47:49  Using postgres connection "model.finbest.int_daily_transactions"
16:47:49  On model.finbest.int_daily_transactions: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.int_daily_transactions"} */
drop table if exists "finbest"."mart"."int_daily_transactions__dbt_backup" cascade
16:47:49  SQL status: DROP TABLE in 0.0 seconds
16:47:49  Timing info for model.finbest.int_daily_transactions (execute): 16:47:49.046287 => 16:47:49.120406
16:47:49  On model.finbest.int_daily_transactions: Close
16:47:49  Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5b605c75-add1-450f-9895-ed5d8bbfc61c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596eaf40390>]}
16:47:49  4 of 5 OK created sql table model mart.int_daily_transactions .................. [SELECT 480 in 0.08s]
16:47:49  Finished running node model.finbest.int_daily_transactions
16:47:49  Began running node model.finbest.fact_client_balance
16:47:49  5 of 5 START sql table model mart.fact_client_balance .......................... [RUN]
16:47:49  Re-using an available connection from the pool (formerly model.finbest.stg_transactions, now model.finbest.fact_client_balance)
16:47:49  Began compiling node model.finbest.fact_client_balance
16:47:49  Writing injected SQL for node "model.finbest.fact_client_balance"
16:47:49  Timing info for model.finbest.fact_client_balance (compile): 16:47:49.125840 => 16:47:49.128689
16:47:49  Began executing node model.finbest.fact_client_balance
16:47:49  Writing runtime sql for node "model.finbest.fact_client_balance"
16:47:49  Using postgres connection "model.finbest.fact_client_balance"
16:47:49  On model.finbest.fact_client_balance: BEGIN
16:47:49  Opening a new connection, currently in state closed
16:47:49  SQL status: BEGIN in 0.0 seconds
16:47:49  Using postgres connection "model.finbest.fact_client_balance"
16:47:49  On model.finbest.fact_client_balance: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.fact_client_balance"} */

  
    

  create  table "finbest"."mart"."fact_client_balance__dbt_tmp"
  
  
    as
  
  (
    select dt as date, client_id, currency,
       sum(net_flow) over (partition by client_id,currency
                           order by dt
                           rows between unbounded preceding and 1 preceding) as opening_balance,
       sum(net_flow) over (partition by client_id,currency
                           order by dt) as closing_balance,
       inflow,outflow,tx_cnt as transaction_count
from "finbest"."mart"."int_daily_transactions"
  );
  
16:47:49  SQL status: SELECT 480 in 0.0 seconds
16:47:49  Using postgres connection "model.finbest.fact_client_balance"
16:47:49  On model.finbest.fact_client_balance: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.fact_client_balance"} */
alter table "finbest"."mart"."fact_client_balance" rename to "fact_client_balance__dbt_backup"
16:47:49  SQL status: ALTER TABLE in 0.0 seconds
16:47:49  Using postgres connection "model.finbest.fact_client_balance"
16:47:49  On model.finbest.fact_client_balance: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.fact_client_balance"} */
alter table "finbest"."mart"."fact_client_balance__dbt_tmp" rename to "fact_client_balance"
16:47:49  SQL status: ALTER TABLE in 0.0 seconds
16:47:49  On model.finbest.fact_client_balance: COMMIT
16:47:49  Using postgres connection "model.finbest.fact_client_balance"
16:47:49  On model.finbest.fact_client_balance: COMMIT
16:47:49  SQL status: COMMIT in 0.0 seconds
16:47:49  Using postgres connection "model.finbest.fact_client_balance"
16:47:49  On model.finbest.fact_client_balance: /* {"app": "dbt", "dbt_version": "1.5.11", "profile_name": "finbest", "target_name": "dev", "node_id": "model.finbest.fact_client_balance"} */
drop table if exists "finbest"."mart"."fact_client_balance__dbt_backup" cascade
16:47:49  SQL status: DROP TABLE in 0.0 seconds
16:47:49  Timing info for model.finbest.fact_client_balance (execute): 16:47:49.129774 => 16:47:49.172423
16:47:49  On model.finbest.fact_client_balance: Close
16:47:49  Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5b605c75-add1-450f-9895-ed5d8bbfc61c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596e61ed550>]}
16:47:49  5 of 5 OK created sql table model mart.fact_client_balance ..................... [SELECT 480 in 0.05s]
16:47:49  Finished running node model.finbest.fact_client_balance
16:47:49  Using postgres connection "master"
16:47:49  On master: BEGIN
16:47:49  Opening a new connection, currently in state closed
16:47:49  SQL status: BEGIN in 0.0 seconds
16:47:49  On master: COMMIT
16:47:49  Using postgres connection "master"
16:47:49  On master: COMMIT
16:47:49  SQL status: COMMIT in 0.0 seconds
16:47:49  On master: Close
16:47:49  Connection 'master' was properly closed.
16:47:49  Connection 'model.finbest.stg_clients' was properly closed.
16:47:49  Connection 'model.finbest.int_daily_transactions' was properly closed.
16:47:49  Connection 'model.finbest.fact_client_balance' was properly closed.
16:47:49  
16:47:49  Finished running 5 table models in 0 hours 0 minutes and 0.50 seconds (0.50s).
16:47:49  Command end result
16:47:49  
16:47:49  Completed successfully
16:47:49  
16:47:49  Done. PASS=5 WARN=0 ERROR=0 SKIP=0 TOTAL=5
16:47:49  Command `dbt run` succeeded at 16:47:49.262521 after 0.67 seconds
16:47:49  Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596e7ebf890>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596e9668810>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7596e62930d0>]}
16:47:49  Flushing usage events
[2025-04-29T16:47:50.472+0000] {logging_mixin.py:150} INFO - STDERR:
[2025-04-29T16:47:50.473+0000] {python.py:183} INFO - Done. Returned value was: 0
[2025-04-29T16:47:50.501+0000] {taskinstance.py:1350} INFO - Marking task as SUCCESS. dag_id=transform, task_id=dbt_run, execution_date=20250429T164743, start_date=20250429T164746, end_date=20250429T164750
[2025-04-29T16:47:50.531+0000] {local_task_job_runner.py:225} INFO - Task exited with return code 0
[2025-04-29T16:47:50.551+0000] {taskinstance.py:2653} INFO - 1 downstream tasks scheduled from follow-on schedule check
